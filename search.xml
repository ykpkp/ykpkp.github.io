<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>8X8的 LED灯显示 各种形状</title>
    <url>/2019/de2bfe18.html</url>
    <content><![CDATA[<p><strong>接线图：</strong></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/MhuB2WEN6jpfceq.png"></p>
<a id="more"></a>
<p><strong>形状图：</strong><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/yQqgfdAr4C5OMbZ.png"></p>
<p>代码：</p>
<pre><code>int R[] = &#123;2,3,4,5,A3,A2,A1,A0&#125;;      //行  数组，记录接口int C[] = &#123;6,7,8,9,10,11,12,13&#125;;      //列  数组，记录接口int led[8][8] = &#123;//实心心形，1处是亮灯的led
  &#123;0, 0, 0, 0, 0, 0, 0, 0&#125;,
  &#123;0, 1, 1, 0, 0, 1, 1, 0&#125;,
  &#123;1, 1, 1, 1, 1, 1, 1, 1&#125;,
  &#123;1, 1, 1, 1, 1, 1, 1, 1&#125;,
  &#123;1, 1, 1, 1, 1, 1, 1, 1&#125;,
  &#123;0, 1, 1, 1, 1, 1, 1, 0&#125;,
  &#123;0, 0, 1, 1, 1, 1, 0, 0&#125;,
  &#123;0, 0, 0, 1, 1, 0, 0, 0&#125;
&#125;;
int led3[8][8] = &#123;//字母I，1处是亮灯的led
  &#123;0, 0, 0, 0, 0, 0, 0, 0&#125;,
  &#123;0, 0, 0, 1, 1, 0, 0, 0&#125;,
  &#123;0, 0, 0, 1, 1, 0, 0, 0&#125;,
  &#123;0, 0, 0, 1, 1, 0, 0, 0&#125;,
  &#123;0, 0, 0, 1, 1, 0, 0, 0&#125;,
  &#123;0, 0, 0, 1, 1, 0, 0, 0&#125;,
  &#123;0, 0, 0, 1, 1, 0, 0, 0&#125;,
  &#123;0, 0, 0, 0, 0, 0, 0, 0&#125;
&#125;;

int led4[8][8] = &#123;//字母U，1处是亮灯的led
  &#123;0, 0, 0, 0, 0, 0, 0, 0&#125;,
  &#123;0, 1, 1, 0, 0, 1, 1, 0&#125;,
  &#123;0, 1, 1, 0, 0, 1, 1, 0&#125;,
  &#123;0, 1, 1, 0, 0, 1, 1, 0&#125;,
  &#123;0, 1, 1, 0, 0, 1, 1, 0&#125;,
  &#123;0, 1, 1, 1, 1, 1, 1, 0&#125;,
  &#123;0, 0, 1, 1, 1, 1, 0, 0&#125;,
  &#123;0, 0, 0, 0, 0, 0, 0, 0&#125;
&#125;;

void setup() &#123;  // put your setup code here, to run once:for(int i = 0;i&lt; 8;i++)
    &#123;
        pinMode(R[i],OUTPUT);
        pinMode(C[i],OUTPUT);
      &#125;  // Serial.begin(9600);&#125;


void loop() &#123;  // put your main code here, to run repeatedly://    myDisplay(led);
     for(int i = 0 ; i &lt; 100 ; i++)        //循环显示100次  
      &#123;  
        myDisplay(led3);                   //显示字母“I”  
      &#125;  
      for(int i = 0 ; i &lt; 100 ; i++)         //循环显示100次  
      &#123;     
        myDisplay(led);                 //显示心形
      &#125; 
      for(int i = 0 ; i &lt; 100 ; i++)         //循环显示100次  
      &#123;     
        myDisplay(led4);                 //显示字母“U”
      &#125;  
&#125;//自定义函数//显示函数  void myDisplay(int Led[8][8])   
&#123;  
  for(int c = 0; c&lt;8;c++)  
  &#123;  
    digitalWrite(C[c],LOW);//选通第c列  

    //循环  
    for(int r = 0;r&lt;8;r++)  
    &#123;  
      digitalWrite(R[r],Led[r][c]);  
    &#125;  
    delay(1);  
    Clear();  //清空显示
  &#125;  
&#125;  

//清空显示  void Clear()                          
&#123;  
  for(int i = 0;i&lt;8;i++)  
  &#123;  
    digitalWrite(R[i],LOW);
    digitalWrite(C[i],HIGH);  
  &#125;  
&#125;</code></pre>
<p>完成！</p>
]]></content>
      <categories>
        <category>硬件</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
      </tags>
  </entry>
  <entry>
    <title>7段显示器 分别显示0-9数字</title>
    <url>/2019/6c5e986f.html</url>
    <content><![CDATA[<p> <em>在使用7段显示器前我们需要找到公共共阴和公共共阳首先，我们找个电源（3到5伏）和1个1K（几百的也欧的也行）的电阻， VCC串接个电阻后和GND接在任意2个脚上，组合有很多，但总有一个LED会发光的找到一个就够了，，然后用GND不动，VCC（串电阻）逐个碰剩下的脚，如果有多个LED（一般是8个），那它就是共阴的了。相反用VCC不动，GND逐个碰剩下的脚，如果有多个LED（一般是8个），那它就是共阳的了。</em></p>
<a id="more"></a>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/PrKAxd1BI8t9X4s.png"></p>
<p>代码：</p>
<pre><code>int i=0;
int j=0;
int k=0;

void setup()
&#123;
  for(i=3;i&lt;=10;i++)
  &#123;
    pinMode(i,OUTPUT);
  &#125;
  for(i=3;i&lt;=10;i++)
  &#123;
    digitalWrite(i,HIGH);
  &#125;
&#125;

void loop()
&#123;
  int num[10][7]=&#123;
    &#123;3,4,6,7,8,9&#125;,
    &#123;8,9&#125;,
    &#123;3,5,6,7,8&#125;,
    &#123;3,5,7,8,9&#125;,
    &#123;4,5,8,9&#125;,
    &#123;3,4,5,7,9&#125;,
    &#123;3,4,5,6,7,9&#125;,
    &#123;3,8,9&#125;,
    &#123;3,4,5,6,7,8,9&#125;,
    &#123;3,4,5,7,8,9&#125;
  &#125;;
  for(i=0;i&lt;10;i++)
  &#123;
    for(j=0;j&lt;7;j++)
    &#123;
      digitalWrite(num[i][j],LOW); 
    &#125;
    delay(500);
    for(k=3;k&lt;=9;k++)
    &#123;
      digitalWrite(k,HIGH);
    &#125;
    delay(500);
  &#125;
&#125;</code></pre>
<p>引脚图：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/ZxA6ftvBEJkHmcg.png"></p>
]]></content>
      <categories>
        <category>硬件</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
      </tags>
  </entry>
  <entry>
    <title>Arduino控制PS2无线手柄</title>
    <url>/2019/ba21a5d1.html</url>
    <content><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>   使用的是开源社区贡献的arduino PS2X库市面上也有不少PS2手柄，但是长得和PS2原装手柄有区别，这种手柄可以在PS2主机上使用，不一定可以配合此库使用，这也是因为这个库是逆向破解PS2协议的原因，所以肯定有哪里不太完美。</p>
<a id="more"></a>
<p><strong>先来看看硬件连接图</strong></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/7914Auzfl5pTnUX.png"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/ohsrScyCjzIwAx5.png"></p>
<p>然后把附件中的PS2X库安装到ArduinoIDE中。<a href="https://pan.baidu.com/s/1A6EaQkdnBRUo4W7WK5hKKg">点击下载附件</a> <code>提取码: 51pp</code> 我用的Arduino是1.8的版本</p>
<p>安装PS2X的教程：</p>
<p>选择项目–&gt;加载库–&gt;添加ZIP–&gt;选择附件中的ps2x_lib   即可</p>
<p>此代码是示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#include &lt;PS2X_lib.h&gt;</span><br><span class="line"></span><br><span class="line">#include &lt;PS2X_lib.h&gt;  &#x2F;&#x2F;for v1.6</span><br><span class="line"></span><br><span class="line">PS2X ps2x; &#x2F;&#x2F; create PS2 Controller Class</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;right now, the library does NOT support hot pluggable controllers, meaning </span><br><span class="line">&#x2F;&#x2F;you must always either restart your Arduino after you conect the controller, </span><br><span class="line">&#x2F;&#x2F;or call config_gamepad(pins) again after connecting the controller.</span><br><span class="line">int Left_motor_back&#x3D;9;       &#x2F;&#x2F;左电机后退(IN1)</span><br><span class="line">int Left_motor_go&#x3D;5;         &#x2F;&#x2F;左电机前进(IN2)</span><br><span class="line"></span><br><span class="line">int Right_motor_go&#x3D;6;        &#x2F;&#x2F; 右电机前进(IN3)</span><br><span class="line">int Right_motor_back&#x3D;10;    &#x2F;&#x2F; 右电机后退(IN4)</span><br><span class="line"></span><br><span class="line">int Right_motor_en&#x3D;8;      &#x2F;&#x2F; 右电机前进(EN2)</span><br><span class="line">int Left_motor_en&#x3D;7;      &#x2F;&#x2F; 右电机后退(EN1)</span><br><span class="line"></span><br><span class="line">int error &#x3D; 0; </span><br><span class="line">byte type &#x3D; 0;</span><br><span class="line">byte vibrate &#x3D; 0;</span><br><span class="line"></span><br><span class="line">void setup()&#123;</span><br><span class="line">Serial.begin(57600);</span><br><span class="line"> &#x2F;&#x2F;初始化电机驱动IO为输出方式</span><br><span class="line">  pinMode(Left_motor_go,OUTPUT); &#x2F;&#x2F; </span><br><span class="line">  pinMode(Left_motor_back,OUTPUT); &#x2F;&#x2F; </span><br><span class="line">  pinMode(Right_motor_go,OUTPUT);&#x2F;&#x2F; </span><br><span class="line">  pinMode(Right_motor_back,OUTPUT);&#x2F;&#x2F; </span><br><span class="line">&#x2F;&#x2F;CHANGES for v1.6 HERE!!! **************PAY ATTENTION*************</span><br><span class="line">  </span><br><span class="line">error &#x3D; ps2x.config_gamepad(13,11,10,12, true, true);   &#x2F;&#x2F;setup pins and settings:  GamePad(clock, command, attention, data, Pressures?, Rumble?) check for error</span><br><span class="line"></span><br><span class="line">if(error &#x3D;&#x3D; 0)&#123;</span><br><span class="line">   Serial.println(&quot;Found Controller, configured successful&quot;);</span><br><span class="line">   Serial.println(&quot;Try out all the buttons, X will vibrate the controller, faster as you press harder;&quot;);</span><br><span class="line">  Serial.println(&quot;holding L1 or R1 will print out the analog stick values.&quot;);</span><br><span class="line">  Serial.println(&quot;Go to [url]www.billporter.info[&#x2F;url] for updates and to report bugs.&quot;);</span><br><span class="line">&#125;</span><br><span class="line">   </span><br><span class="line">  else if(error &#x3D;&#x3D; 1)</span><br><span class="line">   Serial.println(&quot;No controller found, check wiring, see readme.txt to enable debug. visit [url]www.billporter.info[&#x2F;url] for troubleshooting tips&quot;);</span><br><span class="line">   </span><br><span class="line">  else if(error &#x3D;&#x3D; 2)</span><br><span class="line">   Serial.println(&quot;Controller found but not accepting commands. see readme.txt to enable debug. Visit [url]www.billporter.info[&#x2F;url] for troubleshooting tips&quot;);</span><br><span class="line">   </span><br><span class="line">  else if(error &#x3D;&#x3D; 3)</span><br><span class="line">   Serial.println(&quot;Controller refusing to enter Pressures mode, may not support it. &quot;);</span><br><span class="line">   </span><br><span class="line">   &#x2F;&#x2F;Serial.print(ps2x.Analog(1), HEX);</span><br><span class="line">   </span><br><span class="line">   type &#x3D; ps2x.readType(); </span><br><span class="line">     switch(type) &#123;</span><br><span class="line">       case 0:</span><br><span class="line">        Serial.println(&quot;Unknown Controller type&quot;);</span><br><span class="line">       break;</span><br><span class="line">       case 1:</span><br><span class="line">        Serial.println(&quot;DualShock Controller Found&quot;);</span><br><span class="line">       break;</span><br><span class="line">       case 2:</span><br><span class="line">         Serial.println(&quot;GuitarHero Controller Found&quot;);</span><br><span class="line">       break;</span><br><span class="line">     &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void loop()&#123;</span><br><span class="line">   &#x2F;* You must Read Gamepad to get new values</span><br><span class="line">   Read GamePad and set vibration values</span><br><span class="line">   ps2x.read_gamepad(small motor on&#x2F;off, larger motor strenght from 0-255)</span><br><span class="line">   if you don&#39;t enable the rumble, use ps2x.read_gamepad(); with no values</span><br><span class="line">   </span><br><span class="line">   you should call this at least once a second</span><br><span class="line">   *&#x2F;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">if(error &#x3D;&#x3D; 1) &#x2F;&#x2F;skip loop if no controller found</span><br><span class="line">  return; </span><br><span class="line">  </span><br><span class="line">if(type &#x3D;&#x3D; 2)&#123; &#x2F;&#x2F;Guitar Hero Controller</span><br><span class="line">   </span><br><span class="line">   ps2x.read_gamepad();          &#x2F;&#x2F;read controller </span><br><span class="line">   </span><br><span class="line">   if(ps2x.ButtonPressed(GREEN_FRET))</span><br><span class="line">     Serial.println(&quot;Green Fret Pressed&quot;);</span><br><span class="line">   if(ps2x.ButtonPressed(RED_FRET))</span><br><span class="line">     Serial.println(&quot;Red Fret Pressed&quot;);</span><br><span class="line">   if(ps2x.ButtonPressed(YELLOW_FRET))</span><br><span class="line">     Serial.println(&quot;Yellow Fret Pressed&quot;);</span><br><span class="line">   if(ps2x.ButtonPressed(BLUE_FRET))</span><br><span class="line">     Serial.println(&quot;Blue Fret Pressed&quot;);</span><br><span class="line">   if(ps2x.ButtonPressed(ORANGE_FRET))</span><br><span class="line">     Serial.println(&quot;Orange Fret Pressed&quot;);</span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">    if(ps2x.ButtonPressed(STAR_POWER))</span><br><span class="line">     Serial.println(&quot;Star Power Command&quot;);</span><br><span class="line">    </span><br><span class="line">    if(ps2x.Button(UP_STRUM))          &#x2F;&#x2F;will be TRUE as long as button is pressed</span><br><span class="line">     Serial.println(&quot;Up Strum&quot;);</span><br><span class="line">    if(ps2x.Button(DOWN_STRUM))</span><br><span class="line">     Serial.println(&quot;DOWN Strum&quot;);</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">    if(ps2x.Button(PSB_START))                   &#x2F;&#x2F;will be TRUE as long as button is pressed</span><br><span class="line">         Serial.println(&quot;Start is being held&quot;);</span><br><span class="line">    if(ps2x.Button(PSB_SELECT))</span><br><span class="line">         Serial.println(&quot;Select is being held&quot;);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    if(ps2x.Button(ORANGE_FRET)) &#x2F;&#x2F; print stick value IF TRUE</span><br><span class="line">    &#123;</span><br><span class="line">        Serial.print(&quot;Wammy Bar Position:&quot;);</span><br><span class="line">        Serial.println(ps2x.Analog(WHAMMY_BAR), DEC); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">else &#123; &#x2F;&#x2F;DualShock Controller</span><br><span class="line">  </span><br><span class="line">   ps2x.read_gamepad(false, vibrate);          &#x2F;&#x2F;read controller and set large motor to spin at &#39;vibrate&#39; speed</span><br><span class="line">    </span><br><span class="line">   if(ps2x.Button(PSB_START))                   &#x2F;&#x2F;will be TRUE as long as button is pressed</span><br><span class="line">         Serial.println(&quot;Start is being held&quot;);</span><br><span class="line">    if(ps2x.Button(PSB_SELECT))</span><br><span class="line">         Serial.println(&quot;Select is being held&quot;);</span><br><span class="line">         </span><br><span class="line">         </span><br><span class="line">    if(ps2x.Button(PSB_PAD_UP)) &#123;         &#x2F;&#x2F;will be TRUE as long as button is pressed</span><br><span class="line">       Serial.print(&quot;Up held this hard: &quot;);</span><br><span class="line">       Serial.println(ps2x.Analog(PSAB_PAD_UP), DEC);</span><br><span class="line">      &#125;</span><br><span class="line">      if(ps2x.Button(PSB_PAD_RIGHT))&#123;</span><br><span class="line">       Serial.print(&quot;Right held this hard: &quot;);</span><br><span class="line">        Serial.println(ps2x.Analog(PSAB_PAD_RIGHT), DEC);</span><br><span class="line">      &#125;</span><br><span class="line">      if(ps2x.Button(PSB_PAD_LEFT))&#123;</span><br><span class="line">       Serial.print(&quot;LEFT held this hard: &quot;);</span><br><span class="line">        Serial.println(ps2x.Analog(PSAB_PAD_LEFT), DEC);</span><br><span class="line">      &#125;</span><br><span class="line">      if(ps2x.Button(PSB_PAD_DOWN))&#123;</span><br><span class="line">       Serial.print(&quot;DOWN held this hard: &quot;);</span><br><span class="line">     Serial.println(ps2x.Analog(PSAB_PAD_DOWN), DEC);</span><br><span class="line">      &#125;   </span><br><span class="line">  </span><br><span class="line">    </span><br><span class="line">      vibrate &#x3D; ps2x.Analog(PSAB_BLUE);        &#x2F;&#x2F;this will set the large motor vibrate speed based on </span><br><span class="line">                                              &#x2F;&#x2F;how hard you press the blue (X) button    </span><br><span class="line">    </span><br><span class="line">    if (ps2x.NewButtonState())               &#x2F;&#x2F;will be TRUE if any button changes state (on to off, or off to on)</span><br><span class="line">    &#123;</span><br><span class="line">     </span><br><span class="line">       </span><br><span class="line">         </span><br><span class="line">        if(ps2x.Button(PSB_L3))</span><br><span class="line">         Serial.println(&quot;L3 pressed&quot;);</span><br><span class="line">        if(ps2x.Button(PSB_R3))</span><br><span class="line">         Serial.println(&quot;R3 pressed&quot;);</span><br><span class="line">        if(ps2x.Button(PSB_L2))</span><br><span class="line">         Serial.println(&quot;L2 pressed&quot;);</span><br><span class="line">        if(ps2x.Button(PSB_R2))</span><br><span class="line">         Serial.println(&quot;R2 pressed&quot;);</span><br><span class="line">        if(ps2x.Button(PSB_GREEN))</span><br><span class="line">         Serial.println(&quot;Triangle pressed&quot;);</span><br><span class="line">         </span><br><span class="line">    &#125;   </span><br><span class="line">         </span><br><span class="line">    </span><br><span class="line">    if(ps2x.ButtonPressed(PSB_RED))             &#x2F;&#x2F;will be TRUE if button was JUST pressed</span><br><span class="line">         Serial.println(&quot;Circle just pressed&quot;);</span><br><span class="line">         </span><br><span class="line">    if(ps2x.ButtonReleased(PSB_PINK))             &#x2F;&#x2F;will be TRUE if button was JUST released</span><br><span class="line">         Serial.println(&quot;Square just released&quot;);     </span><br><span class="line">    </span><br><span class="line">    if(ps2x.NewButtonState(PSB_BLUE))            &#x2F;&#x2F;will be TRUE if button was JUST pressed OR released</span><br><span class="line">         Serial.println(&quot;X just changed&quot;);    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    if(ps2x.Button(PSB_L1) || ps2x.Button(PSB_R1)) &#x2F;&#x2F; print stick values if either is TRUE</span><br><span class="line">    &#123;</span><br><span class="line">        Serial.print(&quot;Stick Values:&quot;);</span><br><span class="line">        Serial.print(ps2x.Analog(PSS_LY), DEC); &#x2F;&#x2F;Left stick, Y axis. Other options: LX, RY, RX  </span><br><span class="line">        Serial.print(&quot;,&quot;);</span><br><span class="line">        Serial.print(ps2x.Analog(PSS_LX), DEC); </span><br><span class="line">        Serial.print(&quot;,&quot;);</span><br><span class="line">        Serial.print(ps2x.Analog(PSS_RY), DEC); </span><br><span class="line">        Serial.print(&quot;,&quot;);</span><br><span class="line">        Serial.println(ps2x.Analog(PSS_RX), DEC); </span><br><span class="line">    &#125; </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">delay(50);</span><br><span class="line">     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>将示例代码上传到UNO板中</p>
<p>打开ps2无线手柄的开关  观察无线接收器的绿灯 与手柄的上的灯 都停止闪烁说明连接成功了。</p>
<p>打开串口监视器<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/uexpVlryBzYGQO8.png"></p>
<p>如图就是连接成功的显示</p>
<p>我们按下手柄的按键 则会显示对应文字<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/x6lF93sVwSdafk5.png"></p>
<p>这样就连接成功了！</p>
]]></content>
      <categories>
        <category>硬件</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos7 中yum命令无法执行</title>
    <url>/2019/bdebabc9.html</url>
    <content><![CDATA[<p>报错：</p>
<pre><code>**/usr/bin/yum: line 3: import: command not found

/usr/bin/yum: line 4: try:: command not found

/usr/bin/yum: line 5: import: command not found

/usr/bin/yum: line 6: except: command not found

/usr/bin/yum: line 24: syntax error near unexpected token `(&#39;

/usr/bin/yum: line 24: `&quot;&quot;&quot; % (sys.exc_value, sys.version)&#39;**</code></pre>
<a id="more"></a>
<p>原因：升级python3导致</p>
<p>解决方式：</p>
<pre><code>修改文件/usr/bin/yum、头中相应python为#!/usr/bin/python2.7</code></pre>
]]></content>
      <categories>
        <category>centos7</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS7下部署Django项目详细操作步骤</title>
    <url>/2019/591bf4a6.html</url>
    <content><![CDATA[<h3 id="服务器环境部署详细步骤"><a href="#服务器环境部署详细步骤" class="headerlink" title="服务器环境部署详细步骤"></a>服务器环境部署详细步骤</h3><p>详细步骤(下面步骤都是ROOT权限执行):</p>
<p>一、更新系统软件包</p>
<pre><code>yum update -y</code></pre>
<p>二、安装软件管理包和可能使用的依赖</p>
<pre><code>yum -y groupinstall &quot;Development tools&quot;
yum install openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel psmisc</code></pre>
<a id="more"></a>
<p>三、下载Pyhton3到/usr/local 目录</p>
<pre><code>cd /usr/local
wget https://www.python.org/ftp/python/3.6.6/Python-3.6.6.tgz</code></pre>
<p>解压</p>
<pre><code>tar -zxvf Python-3.6.6.tgz</code></pre>
<p>进入 Python-3.6.6路径</p>
<pre><code>cd Python-3.6.6</code></pre>
<p>编译安装到指定路径</p>
<pre><code>./configure --prefix=/usr/local/python3</code></pre>
<p>注意：/usr/local/python3 路径可以自己指定，自己记着就行，下边要用到。</p>
<p>安装python3</p>
<p>分别输入下面两条命令</p>
<pre><code>make
make install</code></pre>
<p>安装完成之后 建立软链接 添加变量 方便在终端中直接使用python3</p>
<pre><code>ln -s /usr/local/python3/bin/python3.6 /usr/bin/python3</code></pre>
<p>Python3安装完成之后pip3也一块安装完成，不需要再单独安装<br>同样给pip3建立软链接</p>
<pre><code>ln -s /usr/local/python3/bin/pip3.6 /usr/bin/pip3</code></pre>
<p>四、查看Python3和pip3安装情况</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/AKqNQsGImR1VpEn.png"></p>
<p>五、安装virtualenv ，建议大家都安装一个virtualenv，方便不同版本项目管理。</p>
<pre><code>pip3 install virtualenv</code></pre>
<p>建立软链接</p>
<pre><code>ln -s /usr/local/python3/bin/virtualenv /usr/bin/virtualenv</code></pre>
<p>安装成功在根目录下建立两个文件夹，主要用于存放env和网站文件的。(文件夹名字，和位置自己随意，记住就好)</p>
<pre><code>mkdir -p /data/env
mkdir -p /data/wwwroot</code></pre>
<p>六、切换到/data/env/下，创建指定版本的虚拟环境。</p>
<pre><code>virtualenv --python=/usr/bin/python3 pyweb</code></pre>
<p>然后进入/data/env/pyweb/bin<br>启动虚拟环境：</p>
<pre><code>source activate</code></pre>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/U9dNMgvF4uZGChw.png"></p>
<p>留意我标记的位置，出现(pyweb)，说明是成功进入虚拟环境。</p>
<p>七、虚拟环境里用pip3安装django和uwsgi</p>
<pre><code>pip3 install django
pip3 install uwsgi</code></pre>
<p>留意：uwsgi要安装两次，先在系统里安装一次，然后进入对应的虚拟环境安装一次。</p>
<p>给uwsgi建立软链接，方便使用</p>
<pre><code>ln -s /usr/local/python3/bin/uwsgi /usr/bin/uwsgi</code></pre>
<p>环境差不多了</p>
<p>我们将本地项目部署到服务器上</p>
<ol>
<li>备份本地数据库。使用sqlite数据库的话，直接打包数据库文件上传到服务器即可。使用Mysql数据库，要先在本地Mysql里备份导出数据，然后在服务器上安装Mysql数据库软件，Mysql安装具体操作请看：</li>
</ol>
<h3 id="CentOS7操作系统下快速安装MySQL5-7"><a href="#CentOS7操作系统下快速安装MySQL5-7" class="headerlink" title="CentOS7操作系统下快速安装MySQL5.7"></a>CentOS7操作系统下快速安装MySQL5.7</h3><p>在项目目录下用下面的命令把当前的环境依赖包导出到requirements.txt文件</p>
<pre><code>pip freeze &gt; requirements.txt</code></pre>
<p>3、把项目源码压缩打包。</p>
<p>4、把项目上传到服务器对应的目录里，解压。</p>
<p>5、创建新的虚拟环境（参照上面第六步）</p>
<p>6、进入虚拟环境然后进入项目路径安装requirements.txt里的依赖包</p>
<pre><code>pip3 install -r requirements.txt</code></pre>
<p>7、导入数据库到服务器。（如果用的是Mysql的话）</p>
<p>如果是Mysql数据库的，则在命令行里输入：</p>
<h3 id="本地导出Mysql"><a href="#本地导出Mysql" class="headerlink" title="本地导出Mysql"></a>本地导出Mysql</h3><p>django为你的数据库</p>
<pre><code>mysqldump -uroot -ppassword django&gt;django.sql</code></pre>
<h3 id="在服务器上输入："><a href="#在服务器上输入：" class="headerlink" title="在服务器上输入："></a>在服务器上输入：</h3><pre><code>#把django.sql上传到服务器，在服务器里用下面命令导入
mysql -uroot -ppassword
use dajngo;
source your Path\django.sql</code></pre>
<p>8、通过<code>python3 manage.py runserver</code> 运行一下项目，如果能正常启动则进行下一步，不能正常运行往上检查。</p>
<p>9、在项目根目录里添加uwsgi配置文件</p>
<p>我们网站项目路径是 <code>/data/wwwroot/mysite/</code>,在项目根目录下创建<code>mysite.xml</code>文件：</p>
<pre><code>touch mysite.xml</code></pre>
<p>创建完成后：</p>
<p>打开文件：</p>
<pre><code>vi mysite.xml</code></pre>
<p>添加下面内容：</p>
<pre><code>&lt;uwsgi&gt;    
   &lt;socket&gt;127.0.0.1:8997&lt;/socket&gt; &lt;!-- 内部端口，自定义 --&gt; 
   &lt;chdir&gt;/data/wwwroot/mysite/&lt;/chdir&gt; &lt;!-- 项目路径 --&gt;            
   &lt;module&gt;mysite.wsgi&lt;/module&gt;  &lt;!-- mysite为wsgi.py所在目录名--&gt; 
   &lt;processes&gt;4&lt;/processes&gt; &lt;!-- 进程数 --&gt;     
   &lt;daemonize&gt;uwsgi.log&lt;/daemonize&gt; &lt;!-- 日志文件 --&gt;
&lt;/uwsgi&gt;</code></pre>
<p>保存</p>
<p>注意<module>里的mysite，为wsgi.py所在的目录名。你的wsgi.py在哪个目录你就写那个目录</p>
<p>10、安装nginx和配置nginx.conf文件</p>
<p>进入home目录，执行下面命令：</p>
<pre><code>cd /home/
wget http://nginx.org/download/nginx-1.13.7.tar.gz</code></pre>
<p>下载完成后，执行解压命令：</p>
<pre><code>tar -zxvf nginx-1.13.7.tar.gz</code></pre>
<p>进入解压后的nginx-1.13.7文件夹，依次执行以下命令：</p>
<pre><code>./configure
make
make install</code></pre>
<p>nginx一般默认安装好的路径为<code>/usr/local/nginx</code><br>在<code>/usr/local/nginx/conf</code>/中先备份一下<code>nginx.conf</code>文件，以防意外。</p>
<pre><code>cp nginx.conf nginx.conf.bak</code></pre>
<p>然后打开<code>nginx.conf</code>，把原来的内容删除，直接加入以下内容：</p>
<pre><code>events &#123;
    worker_connections  1024;
&#125;http &#123;
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    server &#123;
        listen 80;
        server_name  www.yangkunpeng.cn; #改为自己的域名，没域名修改为127.0.0.1:80        
        charset utf-8;
        location / &#123;
           include uwsgi_params;
           uwsgi_pass 127.0.0.1:8997;  #端口要和uwsgi里配置的一样           
           uwsgi_param UWSGI_SCRIPT mysite.wsgi;  #wsgi.py所在的目录名+.wsgi           
           uwsgi_param UWSGI_CHDIR /data/wwwroot/mysite/; #项目路径           
        &#125;
        location /static/ &#123;
        alias /data/wwwroot/mysite/static/; #静态资源路径
        &#125;
    &#125;
&#125;</code></pre>
<p> 要留意备注的地方，要和UWSGI配置文件mysite.xml，还有项目路径对应上。<br>进入<code>/usr/local/nginx/sbin/</code>目录<br>执行<code>./nginx -t</code>命令先检查配置文件是否有错，没有错就执行以下命令：</p>
<pre><code>./nginx</code></pre>
<p>终端没有任何提示就证明nginx启动成功。可以使用你的服务器地址查看，成功之后就会看到一个nginx欢迎页面。</p>
<p>之后，在<code>settings.py</code>里设置：</p>
<p>1、关闭DEBUG模式。</p>
<pre><code>DEBUG = False </code></pre>
<p>2、ALLOWED_HOSTS设置为* 表示任何IP都可以访问网站。</p>
<pre><code>ALLOWED_HOSTS = [&#39;*&#39;]</code></pre>
<p>留意：一定要注意Uwsgi和Nginx配置文件里的项目路径和静态资源路径，填写正确了才能成功访问。不然会出现502错误。还有就是，修改Django文件和其它配置文件之后，一定要重启Uwsgi和Nginx，不然不生效。</p>
<p>Uwsgi和Nginx重启方法：</p>
<pre><code>#查看Uwsgi进程
ps -ef|grep uwsgi 
#用kill方法把uwsgi进程杀死，然后启动
uwsgikillall -9 uwsgi
#启动方法
uwsgi -x mysite.xml
#Nginx平滑重启方法
/usr/local/nginx/sbin/nginx -s reload</code></pre>
<p>然后在浏览器里访问服务器地址（域名），就能查看到项目。</p>
<p>部署完成后 admin后台管理样式会失效</p>
<h5 id="关于线上部署admin后台样式没有生效的问题："><a href="#关于线上部署admin后台样式没有生效的问题：" class="headerlink" title="关于线上部署admin后台样式没有生效的问题："></a>关于线上部署admin后台样式没有生效的问题：</h5><h4 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h4><pre><code>1、在settings.py尾部：

STATIC_ROOT  = os.path.join(BASE_DIR, &#39;static&#39;)#指定样式收集目录
#或
STATIC_ROOT = &#39;/www/mysite/mysite/static&#39;  #指定样式收集目录

2、收集CSS样式，在终端输入

python manage.py collectstatic
运行这个命令之后，就会自动把后台CSS样式收集到/static/目录下。刷新页面就能恢复样式！</code></pre>
<h4 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h4><p>在Python安装目录下（如果使用虚拟环境，则在虚拟环境目录下）找到<code>\Lib\site-packages\django\contrib\admin\templates</code>目录，把里面的admin目录复制到指定目录即可。</p>
<p>注意：收集或复制前一定先在settings里配置并指定<code>STATIC_ROOT</code>路径，<code>static/</code> 个目录可以自己定。指定的时候一定要在<code>settings.py</code>和<code>nginx</code>里指定新的路径。不然无法生效。</p>
]]></content>
      <categories>
        <category>centos7</category>
      </categories>
      <tags>
        <tag>django</tag>
      </tags>
  </entry>
  <entry>
    <title>整理：几款好用的Markdown编辑器</title>
    <url>/2019/920b4cfa.html</url>
    <content><![CDATA[<p>Markdown具有很多优点：</p>
<ul>
<li>写作中添加简单符号即完成排版，所见即所得。让你专注于文字而不是排版。</li>
<li>格式转换方便，Markdown 的文本你可以轻松转换为 html、pdf等。</li>
<li>以保存称纯文本</li>
</ul>
<p>&#160; &#160; &#160; &#160;支持Markdown的编辑器太多，功能也不完全一致，有的是用来进行基本的写作，有的是用来写代码的，有的甚至只是博客平台配套的编辑器。本文按照编辑器的平台进行简单的介绍。</p>
<a id="more"></a>
<ul>
<li>在线的Markdown编辑器</li>
</ul>
<ol>
<li><p><a href="http://dillinger.io/">dillinger</a> 漂亮强大，支持md, html, pdf 文件导出。支持dropbox, onedrive，google<br>drive, github. 来自国外，可能不够稳定。<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/tFWI7oSkVYypTfe.png"></p>
</li>
<li><p><a href="http://mahua.jser.me/">MaHua</a> 小众软件推荐，界面有些简陋<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/QN3CmIcuZ2S4f5s.png"></p>
</li>
<li><p><a href="http://www.jianshu.com/">简书</a> 一个很不错的博客平台，每几秒钟便会自动存入一个备份。可以直接从本地拖入照片生成链接，一直在不断优化。作为一个博客平台，需要注册账号后方能进行写作。<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/35ZRf4iEzG1uTry.png"></p>
</li>
<li><p><a href="http://soft.xiaoshujiang.com/">小书匠编辑器</a> 和 <a href="https://www.zybuluo.com/mdeditor">Cmd  Markdown</a> 也有web版，下文有介绍。</p>
</li>
</ol>
<ul>
<li>Chrome 插件,以下为chrome的插件</li>
</ul>
<p>&#160; &#160; &#160; &#160;<a href="http://marxi.co/">Marxico</a> 中文名<a href="http://maxiang.info/">马克飞象</a>，因为印象笔记不支持Markdown，而这款可以直接把文本存到印象笔记的编辑器对于重度印象笔记用户是个不错的选择。付费软件，可以免费试用。<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/5U1uTxlq4GR6ncO.png"></p>
<ul>
<li>支持多平台</li>
</ul>
<ol>
<li><a href="https://www.farbox.com/">FarBox</a> 一个支持Markdown写作语法的博客平台，让用户通过Dropbox（现在默认是自己的同步服务器）直接建立个人网站。FarBox编辑器免费，支持多平台（无web版，Linux版停止维护），个人认为是Windows平台最优雅的编辑器。多说一句，Farbox服务可以免费试用，在本地编辑器内写作自动同步发布在个人博客，对像笔者这样希望有个人博客但却不愿折腾的小白来说，是个不错的选择。<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/dwQvAD34xjprakt.png"></li>
</ol>
<ul>
<li><a href="https://www.zybuluo.com/mdeditor">Cmd Markdown</a> 作业部落出品，也是一款不错的工具和博客平台兼顾的产品。全平台且提供web版</li>
</ul>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/PWoxZHB8FODk2Jq.png"></p>
<ul>
<li><a href="http://soft.xiaoshujiang.com/">小书匠编辑器</a> 全平台覆盖并且有web版<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/BILqZb2TOrPgVmp.png"></li>
<li><a href="http://www.sublimetext.com/">Sublime Text</a>  界面简约大方，定位专业。可以免费试用，价格稍贵，70美元<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/YSgkyqWj8HTunVP.png"></li>
<li><a href="https://atom.io/">Atom</a> github出的编辑器；功能十分强大，支持各种编程语言；安装后会在添加右键菜单，图标丑；全平台，程序猿专用<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/2TDQuB3mcMR8Izo.png"></li>
<li>Windows平台编辑器</li>
</ul>
<ol start="2">
<li><a href="http://www.markdownpad.com/">MarkdownPad</a> 一款全功能的编辑器，被很多人称赞为windows 平台最好用的markdown编辑器<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/hIGzUSXvPRJW37M.png"></li>
<li><a href="http://git.oschina.net/elerao/Smark">Smark</a> 开源软件<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/o75Jf49CajE3uiT.png"></li>
<li><a href="http://www.mdcharm.com/">MdCharm</a> 功能完备；长相一般，隐藏菜单栏后也算简约。有Windows 和Linux版本。目前已开源，不再更新。<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/kR5Hwdcn2OyGZoE.png"></li>
<li> <a href="http://www.appinn.com/miu-markdown-editor/">Miu</a> 一款模仿mou 的windows平台markdown编辑器，小众推荐，必属精品，官网无法打开，好在小众提供了百度云下载。界面美观，功能不够成熟<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/U1x7Nb8SVun54Ak.png"></li>
</ol>
<ul>
<li>OS X平台</li>
</ul>
<p>没有Mac 没有试用，也就不做太多评价，下面整理了最受好评的几个。</p>
<ol>
<li><p><a href="http://25.io/mou/">Mou</a> 似乎提到 Mac 和 MD ,接下来的词一定是Mou，因为他们是一个姓么<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/fgUiVwdX3Jh5WOn.png"></p>
</li>
<li><p><a href="http://typora.io/">Typora</a> 有出Windows 和Linux版本的计划<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/YVGkrBTbvZE6qlz.png"></p>
</li>
<li><p><a href="http://macdown.uranusjr.com/">MacDown</a> 开源免费<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/Os8mPozfAa5JBTE.png"></p>
</li>
<li><p><a href="http://bywordapp.com/">Byword</a> 支持OS X, iOS 售价78元<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/NB9FGJLsA7fMrn3.png"></p>
</li>
<li><p><a href="https://ia.net/writer/ios">iA Writer</a> 支持OS X , iOS 及Android，未优化中文显示，知乎此<a href="http://www.zhihu.com/question/20129290">问题</a>中很多人认为<br>Byword比 iA 好 。售价68，pro版本128元<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/uligkYSsDZOcvCX.png"></p>
</li>
<li><p><a href="http://www.ulyssesapp.com/">Ulysses</a> 支持OS X , iPad, 少数派有一篇专门的<a href="http://sspai.com/27336">文章</a>介绍，售价 283元</p>
</li>
</ol>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/sCgEfumU2vj3ORn.png"><br>7. <a href="http://realmacsoftware.com/typed/">Typed</a> 少数有关于派测评：<a href="http://sspai.com/30271">情怀与功能不可兼得，极简 Markdown 写作软件： Typed</a> ，售价128元。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/LxRwMHJFgXcEdIa.png"></p>
<ul>
<li><p>关于优劣，<a href="http://www.zhihu.com/people/157025dba58a30bfda65c2789a6f3f35">@温国兵</a> 在<a href="http://www.zhihu.com/question/20004911/answer/33208755">知乎</a>上的一个答案中有简单介绍，有兴趣的可以去看看。</p>
</li>
<li><p>价格因素也是值得考虑的</p>
</li>
<li><p>少数派推荐了<a href="http://sspai.com/27792">7 款优秀 Markdown 编辑工具</a> （和上面介绍的七款不完全重合），也有不少介绍Mac上这些软件的<a href="http://sspai.com/search/?q=markdown">文章</a>，能让大家有个简单了解，需要注意饱含溢美之词是少数派的一贯风格，还是自己亲自试试几款的好。</p>
</li>
<li><p>Linux平台</p>
</li>
</ul>
<p>&#160; &#160; &#160; &#160;用<a href="http://lib.csdn.net/base/linux">Linux</a>的程序员根本就不屑于看这种文章。</p>
<p>&#160; &#160; &#160; &#160;还有开源软件<a href="http://sourceforge.net/p/retext/home/ReText/">ReText</a> , <a href="https://pandao.github.io/editor.md/">Editor.MD</a> 等　</p>
<ul>
<li>One More</li>
</ul>
<p>&#160; &#160; &#160; &#160;因为每个软件定位不同，关于能否具有导出多种格式，导出效果，界面是否优雅，功能是否够多等，没有进行很细致的说明，大家可以选择有兴趣的几款进行试用。</p>
<p>　　&#160; &#160; &#160; &#160;如果你是MD狂魔，可以去关注知乎上的Markdown 话题。（好像MD本身就很小众了….）</p>
<hr>
<p>Markdown软件列表<br>文库集成类</p>
<p>GitBook 集成GitHub</p>
<p>Madoko 集成Dropbox, Github和OneDrive。基于NodeJS，微软研究院出品</p>
<p>马克飞象 集成印象笔记，客户端基于Electron</p>
<p>简书</p>
<p>编辑器插件类</p>
<p>WebStorm Markdown插件</p>
<p>Sublime Text Markdown插件</p>
<p>Notepad++ HTML预览插件</p>
<p>独立软件类（待续）</p>
<p>MarkdownEditor(jijinggang) 基于C++，开源免费，国人开发</p>
<p>MarkDownEditor(chenguanzhou) 基于WPF+MVVC，开源免费，MetroUI风格，具有UWP版本，国人开发</p>
<p>Typora 基于Electron，免费，支持预览模式下编辑 。国人开发</p>
<p>Haroopad 基于Electron，开源免费。具有方便的语法提示窗口，最新版支持流程图和幻灯片。</p>
<p>转载From:<a href="http://blog.csdn.net/bat67/article/details/72804251">http://blog.csdn.net/bat67/article/details/72804251</a> 感谢原作者。</p>
]]></content>
      <categories>
        <category>整理</category>
      </categories>
  </entry>
  <entry>
    <title>面向对象之封装</title>
    <url>/2020/42291650.html</url>
    <content><![CDATA[<h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><ul>
<li>面向对象编程（OOP - Object Oriented Programing）</li>
</ul>
<h2 id="面向过程与面向对象的区别"><a href="#面向过程与面向对象的区别" class="headerlink" title="面向过程与面向对象的区别"></a>面向过程与面向对象的区别</h2><ul>
<li>面向过程与面向对象都是我们编程中编写程序的一种思维方式</li>
<li>面向过程的程序设计方式，是遇到一件事时，思考”我该怎么做”，然后一步步实现的过程</li>
<li>面向对象的程序设计方式，是遇到一件事时，思考”我该让谁来做”，然后那个”谁”就是对象</li>
</ul>
<h2 id="使用面向对象的好处"><a href="#使用面向对象的好处" class="headerlink" title="使用面向对象的好处"></a>使用面向对象的好处</h2><ul>
<li>面向对象思维方式是一种更加符合人们思考习惯的思想</li>
<li>面向对象中更多体现的是指挥着(指挥对象做事情)</li>
<li>面向对象思维方式将复杂的问题简单化</li>
</ul>
<h2 id="面向对象举例"><a href="#面向对象举例" class="headerlink" title="面向对象举例"></a>面向对象举例</h2><ul>
<li><p>超市</p>
<ul>
<li>客户<ul>
<li>姓名：小龙女</li>
<li>身高：160cm</li>
<li>身高：60kg</li>
<li>操作：购物</li>
</ul>
</li>
<li>收银员<ul>
<li>姓名：啊明</li>
<li>部门：财务部</li>
<li>员工编号：00001</li>
<li>操作：收银、打印账单、刷卡</li>
</ul>
</li>
</ul>
</li>
<li><p>汽车</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class Car &#123;</span><br><span class="line">	&#x2F;&#x2F; 颜色</span><br><span class="line">	String color;</span><br><span class="line">	&#x2F;&#x2F; 轮胎个数</span><br><span class="line">	int number;</span><br><span class="line">	public void run() &#123;</span><br><span class="line">		System.out.println(&quot;一辆颜色为&quot;+color+&quot;轮子数为&quot;+number+&quot;的车行驶在蜿蜒的马路上&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="类与对象的区别"><a href="#类与对象的区别" class="headerlink" title="类与对象的区别"></a>类与对象的区别</h2><ul>
<li>在程序中对事物的描述与该事物在现实中的形态保持一致。为了做到这一点，面向对象的思想中提出两个概念，即类和对象。其中 <strong>类是对某一类事物的抽象描述，而对象用于表示现实中该类事物的个体</strong></li>
</ul>
<h2 id="面向对象三大特性"><a href="#面向对象三大特性" class="headerlink" title="面向对象三大特性"></a>面向对象三大特性</h2><ul>
<li>封装<ul>
<li>只隐藏对象的属性和实现细节，仅对外提供公共访问方式</li>
<li>好处： 将变化隔离、便于使用、提高复用性、提高安全性</li>
<li>原则：将不需要对外提供的内容隐藏起来；把属性隐藏，提供公共方法对其访问</li>
</ul>
</li>
<li>继承<ul>
<li>子类自动拥有父类非私有的属性与方法</li>
<li>提高代码复用性；继承是多态的前提</li>
</ul>
</li>
<li>多态<ul>
<li>类的多种形态。是父类或接口定义的引用变量可以指向子类或具体实现类的实例对象</li>
<li>好处：提高了程序的扩展性</li>
<li>弊端：当父类引用指向子类对象时，虽提高了扩展性，但只能访问父类中具备的方法，不可访问子类中的方法；即访问的局限性</li>
<li>前提：实现或继承关系；覆写父类方法</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>Python3爬虫(四)--User Agent与代理IP</title>
    <url>/2019/ac32d860.html</url>
    <content><![CDATA[<h3 id="为什么要使用User-Agent"><a href="#为什么要使用User-Agent" class="headerlink" title="为什么要使用User Agent"></a>为什么要使用User Agent</h3><p>这个User Agent在系列文章第二篇中有简单的说过<a href="http://t.cn/Ai9l4nDA">python爬虫(二)-用urllib实现百度翻译</a>，今天详细说明一下</p>
<p>很多网站不喜欢被爬虫程序访问，所以会设置关卡阻止爬虫程序的访问，如过对方服务器检查到访问者是爬虫程序，也就是非人为点击访问的，就不会让你继续访问。此时通过设置User Agent来达到隐藏身份的目的，User Agent简称UA。</p>
<p>User Agent储存在headers中，服务器通过检测headers中的User Agent来判断是谁在访问，在python中如果不设置User Agent它会有默认的值，那么这个User Agent会带有python的字样，如果检测到User Agent是python就不会在让你继续访问。</p>
<a id="more"></a>
<h3 id="常见的User-Agent"><a href="#常见的User-Agent" class="headerlink" title="常见的User Agent"></a>常见的User Agent</h3><p> <strong>1. Android</strong>    </p>
<blockquote>
<ol>
<li>Mozilla/5.0 (Linux; Android 4.1.1; Nexus 7 Build/JRO03D) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.166 Safari/535.19</li>
<li>Mozilla/5.0 (Linux; U; Android 4.0.4; en-gb; GT-I9300 Build/IMM76D) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30</li>
<li>Mozilla/5.0 (Linux; U; Android 2.2; en-gb; GT-P1000 Build/FROYO) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1</li>
</ol>
</blockquote>
<p><strong>2. Firefox</strong></p>
<blockquote>
<ol>
<li>Mozilla/5.0 (Windows NT 6.2; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0</li>
<li>Mozilla/5.0 (Android; Mobile; rv:14.0) Gecko/14.0 Firefox/14.0</li>
</ol>
</blockquote>
<p><strong>3. Google Chrome</strong></p>
<blockquote>
<ol>
<li> Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.94 Safari/537.36</li>
<li>Mozilla/5.0 (Linux; Android 4.0.4; Galaxy Nexus Build/IMM76B) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.133 Mobile Safari/535.19</li>
</ol>
</blockquote>
<p><strong>4.ios</strong></p>
<blockquote>
<ol>
<li>Mozilla/5.0 (iPad; CPU OS 5_0 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9A334 Safari/7534.48.3</li>
<li>Mozilla/5.0 (iPod; U; CPU like Mac OS X; en) AppleWebKit/420.1 (KHTML, like Gecko) Version/3.0 Mobile/3A101a Safari/419.3</li>
</ol>
</blockquote>
<p>上面列举了Andriod、Firefox、Google Chrome、iOS的一些User Agent，直接copy就能用。</p>
<h3 id="设置User-Agent"><a href="#设置User-Agent" class="headerlink" title="设置User-Agent"></a>设置User-Agent</h3><p>我们还是使用urllib这个库举例，设置User-Agent有两种方法，第一种在<a href="http://t.cn/Ai9l4nDA">python爬虫(二)-用urllib实现百度翻译</a>中有说过这里不再赘述。<br><strong>这里说一下第二种方法：</strong></p>
<p>我们以百度首页为例，可以试一试不添加header，发现也能访问，但是访问此时过于频繁次数过多就会阻止你。这时候就需要添加header，直接copy一个上面列举的User-Agent</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import urllib.request as res</span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;www.baidu.com&quot;</span><br><span class="line">req &#x3D; res.Request(url)</span><br><span class="line">req.add_header(&quot;User-Agent&quot;,&quot;Mozilla&#x2F;5.0 (Windows NT 6.2; WOW64; rv:21.0) Gecko&#x2F;20100101 Firefox&#x2F;21.0&quot;)</span><br><span class="line">response &#x3D; res.urlopen(req)</span><br><span class="line">html &#x3D; response.read().decode(&#39;utf-8&#39;)</span><br><span class="line">print(html)</span><br></pre></td></tr></table></figure>
<p>运行结果就是将百度首页的源码全部抓下来了。<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/03/5cf4d878dda6657104.png"></p>
<h3 id="代理IP使用"><a href="#代理IP使用" class="headerlink" title="代理IP使用"></a>代理IP使用</h3><p>有些网站就算你添加header，要知道我们程序运行速度是极其快的，如果使用同一个IP频繁的去爬取，就会被认定这不是人为操作，对方服务器会将你的IP封了，你就访问不了。所谓道高一尺魔高一丈，好的程序都是在不断改善中成长的，这时候我们就需要用到代理IP，就算封了我们的IP，我们可以换一个IP继续爬。</p>
<p><strong>使用步骤：</strong></p>
<blockquote>
<p>1.调用urlib.request.ProxyHandler()，proxies参数为一个字典。<br>class urllib.request.ProxyHandler(proxies=None) </p>
</blockquote>
<blockquote>
<p>2.创建Opener(类似于urlopen，这个代开方式是我们自己定制的)<br>urllib.request.build_opener([handler, …])</p>
</blockquote>
<blockquote>
<p>3.安装Opener<br>urllib.request.install_opener(opener)</p>
</blockquote>
<p>详情查看<a href="https://docs.python.org/3/library/urllib.request.html">官方文档</a></p>
<h4 id="选取代理IP"><a href="#选取代理IP" class="headerlink" title="选取代理IP"></a>选取代理IP</h4><p>在写代码前，需要在代理IP网站上选区 IP，推荐使用西刺代理IP。<br>URL：<a href="http://www.xicidaili.com/">http://www.xicidaili.com/</a><br>随便选一个信号好点的，类型为HTTPS的IP  我选的 (112.85.169.252:9999)，因为这是免费公开的代理IP所以肯定有很多人用，如果出现连接失败的情况，多尝试几个IP。我就尝试了好几个才成功。<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/04/5cf66909e26d049404.png"><br>编写代码访问 <a href="https://ip.cn/index.php">https://ip.cn/index.php</a>  该网站是测试自己IP为多少的网址，服务器会返回访问者的IP。<br>我们可以先用浏览器打开这个网址查看我们自己的IP，这里可以看到我的ip是 <code>61.xx.xx.111</code><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/04/5cf669bdd71d966605.png"><br>然后将我们选好的IP，放到我们的代码中，然后用代码访问这个网站，看看返回的是不是我们代理的IP，<br>注意 <code>proxy_port = res.ProxyHandler(&#123;&#39;https&#39;:&#39;112.85.169.252:9999&#39;&#125;)</code> 这里要用https访问<br><strong>代码如下：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import urllib.request as res</span><br><span class="line">#访问的网址</span><br><span class="line">url &#x3D; &quot;https:&#x2F;&#x2F;ip.cn&#x2F;index.php&quot;</span><br><span class="line">#创建ProxyHandler</span><br><span class="line">proxy_port &#x3D; res.ProxyHandler(&#123;&#39;https&#39;:&#39;112.85.169.252:9999&#39;&#125;)</span><br><span class="line">#创建opener</span><br><span class="line">opener &#x3D; res.build_opener(proxy_port)</span><br><span class="line">#添加User-Agent   这个添加User-Agent也可以在下面的urlopen中添加</span><br><span class="line">opener.addheaders &#x3D; [(&#39;User-Agent&#39;,&#39;Mozilla&#x2F;5.0 (Windows NT 6.2; WOW64; rv:21.0) Gecko&#x2F;20100101 Firefox&#x2F;21.0&#39;)]</span><br><span class="line">#安装User Angent</span><br><span class="line">res.install_opener(opener)</span><br><span class="line">#使用自己安装好的opener</span><br><span class="line">response &#x3D; res.urlopen(url)</span><br><span class="line">html &#x3D; response.read().decode(&#39;utf-8&#39;)</span><br><span class="line">print(html)</span><br></pre></td></tr></table></figure>
<p><strong>看下结果：</strong><br>可以看到返回的IP就是我们选的代理IP，这样就说明代理成功了。<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/04/5cf66b8ed7a1170268.png"></p>
<p>我们还可以写一个IP列表，这样就不用我们经常手动更换IP<br>更改代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import urllib.request as res</span><br><span class="line">import random</span><br><span class="line">#访问的网址</span><br><span class="line">url &#x3D; &quot;https:&#x2F;&#x2F;ip.cn&#x2F;index.php&quot;</span><br><span class="line">#代理IP</span><br><span class="line">proxy_list &#x3D; [</span><br><span class="line">    &#123;&#39;https&#39;:&#39;112.85.171.133:9999&#39;&#125;,</span><br><span class="line">    &#123;&#39;https&#39;:&#39;121.17.174.121:9797&#39;&#125;,</span><br><span class="line">    &#123;&#39;https&#39;:&#39;114.217.229.53:8118&#39;&#125;,</span><br><span class="line">    &#123;&#39;https&#39;:&#39;112.85.169.252:9999&#39;&#125;</span><br><span class="line">]</span><br><span class="line"># 从列表中随机选取一个IP</span><br><span class="line">proxy &#x3D; random.choice(proxy_list)</span><br><span class="line">#查看随机出来的是那个IP</span><br><span class="line">print(proxy)</span><br><span class="line">#创建ProxyHandler</span><br><span class="line">proxy_port &#x3D; res.ProxyHandler(proxy)</span><br><span class="line">#创建opener</span><br><span class="line">opener &#x3D; res.build_opener(proxy_port)</span><br><span class="line">#添加User-Agent</span><br><span class="line">opener.addheaders &#x3D; [(&#39;User-Agent&#39;,&#39;Mozilla&#x2F;5.0 (Windows NT 6.2; WOW64; rv:21.0) Gecko&#x2F;20100101 Firefox&#x2F;21.0&#39;)]</span><br><span class="line">#安装User Angent</span><br><span class="line">res.install_opener(opener)</span><br><span class="line">#使用自己安装好的opener</span><br><span class="line">response &#x3D; res.urlopen(url)</span><br><span class="line">html &#x3D; response.read().decode(&#39;utf-8&#39;)</span><br><span class="line">print(html)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>这样就不用一直去ProxyHandler中更换IP了，每次运行就随机一个IP。以上就是User Agent与代理IP的使用基本方式了。</p>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>但是就算这样如果我们列表中的IP全部都被封了怎么办呢？<br>这就需要我们使用代理池了，有免费的也有收费的，例如我们用的西刺就是免费，我们可以写一个爬虫将上面的IP都抓取下来做一个代理池，只要IP被封，自动去代理池找能用的IP，这样就更方便了。</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringMVCHelloWorld</title>
    <url>/2020/e23bce6.html</url>
    <content><![CDATA[<p>下载引入jar包</p>
<h3 id="编写HelloContorller-java"><a href="#编写HelloContorller-java" class="headerlink" title="编写HelloContorller.java"></a>编写HelloContorller.java</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.ykp.springmvc.hello;</span><br><span class="line">import org.springframework.stereotype.Controller;</span><br><span class="line">import org.springframework.ui.ModelMap;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">&#x2F;&#x2F;@Controller 定义这个是借助xml中配置的 &lt;context:component-scan&gt;来识别Controller</span><br><span class="line">@Controller</span><br><span class="line">public class HelloContorller &#123;</span><br><span class="line">	&#x2F;&#x2F;@RequestMapping:浏览器访问的地址value&#x3D;&quot;&#x2F;hello&quot;</span><br><span class="line">	@RequestMapping(value&#x3D;&quot;&#x2F;hello&quot;)</span><br><span class="line">	public String hello(ModelMap model)&#123;</span><br><span class="line">		&#x2F;&#x2F;添加值</span><br><span class="line">		model.addAttribute(&quot;msg&quot;,&quot;Hello World SpringMVC&quot;);</span><br><span class="line">		&#x2F;&#x2F;转到对应jsp文件的名</span><br><span class="line">		return &quot;hello&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>web.xml配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;web-app xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">	xmlns&#x3D;&quot;http:&#x2F;&#x2F;java.sun.com&#x2F;xml&#x2F;ns&#x2F;javaee&quot;</span><br><span class="line">	xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;java.sun.com&#x2F;xml&#x2F;ns&#x2F;javaee http:&#x2F;&#x2F;java.sun.com&#x2F;xml&#x2F;ns&#x2F;javaee&#x2F;web-app_3_0.xsd&quot;</span><br><span class="line">	id&#x3D;&quot;WebApp_ID&quot; version&#x3D;&quot;3.0&quot;&gt;</span><br><span class="line">	&lt;display-name&gt;SpringMVC&lt;&#x2F;display-name&gt;</span><br><span class="line">	&lt;servlet&gt;</span><br><span class="line">		&lt;servlet-name&gt;springmvc&lt;&#x2F;servlet-name&gt;</span><br><span class="line">		&lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;&#x2F;servlet-class&gt;</span><br><span class="line">		&lt;load-on-startup&gt;1&lt;&#x2F;load-on-startup&gt;</span><br><span class="line">	&lt;&#x2F;servlet&gt;</span><br><span class="line">	&lt;servlet-mapping&gt;</span><br><span class="line">		&lt;servlet-name&gt;springmvc&lt;&#x2F;servlet-name&gt;</span><br><span class="line">		&lt;url-pattern&gt;&#x2F;&lt;&#x2F;url-pattern&gt;</span><br><span class="line">	&lt;&#x2F;servlet-mapping&gt;</span><br><span class="line">&lt;&#x2F;web-app&gt;</span><br></pre></td></tr></table></figure>

<p>Spring配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;</span><br><span class="line">	xmlns:mvc&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;mvc&quot; xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">	xmlns:p&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;p&quot; xmlns:context&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&quot;</span><br><span class="line">	xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans </span><br><span class="line">http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans-3.2.xsd </span><br><span class="line">http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context </span><br><span class="line">http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&#x2F;spring-context-3.2.xsd </span><br><span class="line">http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;mvc </span><br><span class="line">http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;mvc&#x2F;spring-mvc-3.2.xsd&quot;&gt;</span><br><span class="line">	&lt;!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 --&gt;</span><br><span class="line">	&lt;context:component-scan base-package&#x3D;&quot;com.ykp.springmvc.hello&quot; &#x2F;&gt;</span><br><span class="line">	&lt;!--</span><br><span class="line">		设置要跳转到的jsp的路径 (只是一个路径，文件名是HelloContorller类return出来的)</span><br><span class="line">		后缀p:suffix</span><br><span class="line">		 前缀p:prefix</span><br><span class="line">	 --&gt;</span><br><span class="line">	&lt;bean class&#x3D;&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;	p:prefix&#x3D;&quot;&#x2F;WEB-INF&#x2F;jsp&#x2F;&quot; p:suffix&#x3D;&quot;.jsp&quot; &#x2F;&gt;&lt;&#x2F;beans&gt;</span><br></pre></td></tr></table></figure>

<p>jsp文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Hello SpringMVC&lt;&#x2F;h1&gt;</span><br><span class="line">message:$&#123;msg&#125;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>我的目录结构</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/22/4fq5xwVTJzrKDGu.jpg"></p>
<p>到此所有配置完成</p>
<p>测试</p>
<p>访问地址：<a href="http://localhost:8099/SpringMVC/hello%EF%BC%88%E6%88%91%E7%9A%84%E7%AB%AF%E5%8F%A3%E5%8F%B7%E6%98%AF8099%EF%BC%89">http://localhost:8099/SpringMVC/hello（我的端口号是8099）</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/22/DZCL7eifG856FJN.jpg"></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫(零)--爬虫基础了解</title>
    <url>/2019/d5fa4a03.html</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>之前玩过几个星期的爬虫，由于工作原因就没有去研究了荒废了大半年了，现在基本都忘干净了。最近想重新学习下爬虫，因为我觉得爬虫特别有意思，特别是想要批量下载东西时，写个小爬虫分分钟的事就可以弄到手了。现在是互联网时代，垃圾信息特多。想要快速找到并且获得自己想要的资源爬虫肯定不可少咯！！！</p>
<p>因此以后有时间的话，就会把自己学爬虫的过程记录下来，见证技术的成长！！！顺便分享，希望能帮到需要的人。</p>
<h3 id="1-什么是爬虫"><a href="#1-什么是爬虫" class="headerlink" title="1. 什么是爬虫"></a>1. 什么是爬虫</h3><p>爬虫，即网络爬虫，大家可以理解为在网络上爬行的一直蜘蛛，互联网比作一张大网，二爬虫便是在这张网上派来爬去的蜘蛛咯，如果它遇到资源，那么它就会抓取下来。想抓什么？这个有你来控制它咯。</p>
<a id="more"></a>
<p>比如他在抓取一个网页，在这个网中他发现一条道路，其实就是指向网页的超链接，那么它就可以爬到另一张网上来获取数据。这样，整个连在一起的大网对这之蜘蛛来说触手可及，分分钟爬下来不是事。</p>
<h3 id="2-浏览网页额过程"><a href="#2-浏览网页额过程" class="headerlink" title="2. 浏览网页额过程"></a>2. 浏览网页额过程</h3><p>在用户浏览网页的过程中，我们可能会看到许多好看的图片，比如 <a href="http://image.baidu.com/">http://image.baidu.com/</a> ，我们会看到几张的图片以及百度搜索框，这个过程其实就是用户输入之后，经过DNS服务器，找到主机，想服务器发出一个请求，服务器经过解析后，发送给用户的浏览器HTML、JS、CSS等文件，浏览器解析出来，用户便可以看到形形色色的图片了。</p>
<p>因此，用户看到的网页实质是由HTML代码构成的，爬虫爬来的便是这些内容，通过分析和过滤这个HTML代码，实现对图片、文字等资源的获取</p>
<h3 id="3-URL的含义"><a href="#3-URL的含义" class="headerlink" title="3. URL的含义"></a>3. URL的含义</h3><p>URL，即统一资源定位符没也就是我们所说的网址，统一资源定位符是对可以从互联网上得到的资源的位置和访问方法的一种简明的表示，是互联网上的标准资源的地址。互联网上的每个文件都有一个唯一的URL，它包含的信息指出晚间的位置以及浏览器应该怎么处理他。</p>
<blockquote>
<p>URL的格式由三部分组成：<br>①第一部分是协议(或称为服务方式)。<br>②第二部分是存有该资源的主机IP地址(有时也包括端口号)。<br>③第三部分是主机资源的具体地址，如目录和文件名等。</p>
</blockquote>
<p>爬虫爬取数据时必须要有一个目标的URL才可以获取资源，因此，他是爬虫获取的基基本依据，准备理解它的涵义对爬虫学习有很大帮助。</p>
<h3 id="4-环境的配置"><a href="#4-环境的配置" class="headerlink" title="4.环境的配置"></a>4.环境的配置</h3><p>学习Python。当然少不了配置环境，最初我用的时PyCharm，比较好用但是比较吃内存，后来改用微软的VS code。不过我觉得PyCharm要比VS code好用一点。在windows下我用VS code。Linux下推荐用Eclipse for Python另外还有几款比较优秀的IDE，大家可以参考这篇文章<a href="http://www.oschina.net/news/57468/best-python-ide-for-developers">学习Python推荐的IDE</a> 好的开发工具是前进的推进器，希望大家可以找到适合自己的IDE</p>
<p>下一篇，就开始进入Python爬虫学习得殿堂了。</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>django  ImageField使用默认图片</title>
    <url>/2019/f3abe4d6.html</url>
    <content><![CDATA[<p>修改<code>models.py</code>：</p>
<pre><code>img = models.ImageField(upload_to=&#39;article_img&#39;,default=&quot;upimg/default.png&quot;)</code></pre>
<a id="more"></a>
<p><code>setting.py</code>文件：</p>
<p><strong>设置文件上传路径，图片上传、文件上传都会存放在此目录里</strong></p>
<pre><code>MEDIA_URL = &#39;/media/&#39;
MEDIA_ROOT = os.path.join(BASE_DIR, &#39;media&#39;)</code></pre>
<p>我的项目目录：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/CsNQiV1EvXSnl4O.png"></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>django</tag>
      </tags>
  </entry>
  <entry>
    <title>新的篇章</title>
    <url>/2019/4157f7a3.html</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">您好, 这里需要密码.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="24a972a8a72200bb3a7a0ef2613e4f354b94fefd876b2ea5da53a4918edd0efb"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>面向对象设计原则</title>
    <url>/2020/f9c29644.html</url>
    <content><![CDATA[<h1 id="面向对象设计原则"><a href="#面向对象设计原则" class="headerlink" title="面向对象设计原则"></a>面向对象设计原则</h1><ul>
<li>开 : 开闭原则</li>
<li>口 : 接口隔离原则</li>
<li>合 : 组合|聚合原则</li>
<li>里 : 里式替换原则</li>
<li>最 : 最少知识原则（迪米特法则）</li>
<li>单 : 单一职责原则</li>
<li>依 : 依赖倒置原则</li>
</ul>
<h2 id="开闭原则"><a href="#开闭原则" class="headerlink" title="开闭原则"></a>开闭原则</h2><ul>
<li>因为： 开放封闭原则主要体现在对扩展开放、对修改封闭，意味着有新的需求或变化时，可以对现有代码进行扩展，以适应新的情况。软件需求总是变化的，世界上没有一个软件的是不变的，因此对软件设计人员来说，必须在不需要对原有系统进行修改的情况下，实现灵活的系统扩展。</li>
<li>所以： 可以通过Template Method模式和Strategy模式进行重构，实现对修改封闭，对扩展开放的设计思路。 封装变化，是实现开放封闭原则的重要手段，对于经常发生变化的状态，一般将其封装为一个抽象，拒绝滥用抽象，只将经常变化的部分进行抽象</li>
</ul>
<h2 id="接口隔离原则"><a href="#接口隔离原则" class="headerlink" title="接口隔离原则"></a>接口隔离原则</h2><ul>
<li>因为： 提供尽可能小的单独接口，而不要提供大的总接口。暴露行为让后面的实现类知道的越少越好。</li>
<li>所以： 建立单一接口，不要建立庞大的接口，尽量细化接口，接口中的方法尽量少。也就是要为各个类建立专用的接口，而不要试图去建立一个很庞大的接口供所有依赖它的类去调用。依赖几个专用的接口要比依赖一个综合的接口更灵活。接口是设计时对外部设定的约定，通过分散定义多个接口，可以预防外来变更的扩散，提高系统的灵活性和可维护性。</li>
<li>从大局来说Java的接口可以实现多继承就是接口隔离原则的基础保障</li>
</ul>
<h2 id="组合-聚合复用原则"><a href="#组合-聚合复用原则" class="headerlink" title="组合|聚合复用原则"></a>组合|聚合复用原则</h2><ul>
<li>因为： 其实整个设计模式就是在讲如何类与类之间的组合/聚合。在一个新的对象里面通过关联关系（包括组合关系和聚合关系）使用一些已有的对象，使之成为新对象的一部分，新对象通过委派调用已有对象的方法达到复用其已有功能的目的。也就是，要尽量使用类的合成复用，尽量不要使用继承。</li>
<li>如果为了复用，便使用继承的方式将两个不相干的类联系在一起，违反里氏代换原则，哪是生搬硬套，忽略了继承了缺点。继承复用破坏数据封装性，将基类的实现细节全部暴露给了派生类，基类的内部细节常常对派生类是透明的，白箱复用；虽然简单，但不安全，不能在程序的运行过程中随便改变；基类的实现发生了改变，派生类的实现也不得不改变；从基类继承而来的派生类是静态的，不可能在运行时间内发生改变，因此没有足够的灵活性。</li>
<li>所以： 组合/聚合复用原则可以使系统更加灵活，类与类之间的耦合度降低，一个类的变化对其他类造成的影响相对较少，因此一般首选使用组合/聚合来实现复用；其次才考虑继承，在使用继承时，需要严格遵循里氏代换原则，有效使用继承会有助于对问题的理解，降低复杂度，而滥用继承反而会增加系统构建和维护的难度以及系统的复杂度，因此需要慎重使用继承复用</li>
</ul>
<h2 id="里式替换原则"><a href="#里式替换原则" class="headerlink" title="里式替换原则"></a>里式替换原则</h2><ul>
<li>因为： 里氏替换原则告诉我们，在软件中将一个基类对象替换成它的子类对象，程序将不会产生任何错误和异常，反过来则不成立，如果一个软件实体使用的是一个子类对象的话，那么它不一定能够使用基类对象。里氏替换原则是实现开闭原则的重要方式之一，由于使用基类对象的地方都可以使用子类对象，因此在程序中尽量使用基类类型来对对象进行定义，而在运行时再确定其子类类型，用子类对象来替换父类对象。</li>
<li>所以： 使用里氏替换原则时需要注意，子类的所有方法必须在父类中声明，或子类必须实现父类中声明的所有方法。尽量把父类设计为抽象类或者接口，让子类继承父类或实现父接口，并实现在父类中声明的方法，运行时，子类实例替换父类实例，我们可以很方便地扩展系统的功能，同时无须修改原有子类的代码，增加新的功能可以通过增加一个新的子类来实现。</li>
</ul>
<h2 id="迪米特法则"><a href="#迪米特法则" class="headerlink" title="迪米特法则"></a>迪米特法则</h2><ul>
<li>因为： 类与类之间的关系越密切，耦合度也就越来越大，只有尽量降低类与类之间的耦合才符合设计模式；对于被依赖的类来说，无论逻辑多复杂都要尽量封装在类的内部；每个对象都会与其他对象有耦合关系，我们称出现成员变量、方法参数、方法返回值中的类为直接的耦合依赖，而出现在局部变量中的类则不是直接耦合依赖，也就是说，不是直接耦合依赖的类最好不要作为局部变量的形式出现在类的内部。</li>
<li>所以： 一个对象对另一个对象知道的越少越好，即一个软件实体应当尽可能少的与其他实体发生相互作用，在一个类里能少用多少其他类就少用多少，尤其是局部变量的依赖类，能省略尽量省略。同时如果两个类不必彼此直接通信，那么这两个类就不应当发生直接的相互作用。如果其中一个类需要调用另一个类的某一方法的话，可以通过第三者转发这个调用</li>
</ul>
<h2 id="单一职责原则"><a href="#单一职责原则" class="headerlink" title="单一职责原则"></a>单一职责原则</h2><ul>
<li>可以降低类的复杂度，一个类只负责一项职责，其逻辑肯定要比负责多项职责简单的多；提高类的可读性，提高系统的可维护性；变更引起的风险降低，变更是必然的，如果单一职责原则遵守的好，当修改一个功能时，可以显著降低对其他功能的影响。需要说明的一点是单一职责原则不只是面向对象编程思想所特有的，只要是模块化的程序设计，都适用单一职责原则</li>
</ul>
<h2 id="依赖倒置原则"><a href="#依赖倒置原则" class="headerlink" title="依赖倒置原则"></a>依赖倒置原则</h2><ul>
<li>因为： 具体依赖抽象，上层依赖下层。假设B是较A低的模块，但B需要使用到A的功能，这个时候，B不应当直接使用A中的具体类；而应当由B定义一抽象接口，并由A来实现这个抽象接口，B只使用这个抽象接口；这样就达到了依赖倒置的目的，B也解除了对A的依赖，反过来是A依赖于B定义的抽象接口。通过上层模块难以避免依赖下层模块，假如B也直接依赖A的实现，那么就可能造成循环依赖。</li>
<li>所以： 采用依赖倒置原则可以减少类间的耦合性，提高系统的稳定性，减少并行开发引起的风险，提高代码的可读性和可维护性。</li>
</ul>
<p><strong>生命不息学习不止，搞懂设计模式则是需要时间的沉淀与知识的积累</strong></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>js jQuery点击网页出现会飘的文字</title>
    <url>/2019/8516ffa3.html</url>
    <content><![CDATA[<p>效果图</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/09/5cfc9e8d8c2b231467.gif"></p>
<a id="more"></a>
<p>上代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">  var a_idx &#x3D; 0;</span><br><span class="line">  $(document).ready(function ($) &#123;</span><br><span class="line">    $(&quot;body&quot;).click(function (e) &#123;</span><br><span class="line">        var red &#x3D; parseInt(Math.random()*257).toString(16);</span><br><span class="line">    var blue &#x3D; parseInt(Math.random()*257).toString(16);</span><br><span class="line">    var green&#x3D; parseInt(Math.random()*257).toString(16);</span><br><span class="line">    var color &#x3D; &#39;#&#39;+red+blue+green;</span><br><span class="line">      var a &#x3D; new Array(&quot;❤ 富强 ❤&quot;, &quot;❤ 民主 ❤&quot;, &quot;❤ 文明 ❤&quot;, &quot; ❤ 和谐 ❤&quot;, &quot;❤ 自由 ❤&quot;, &quot; ❤ 平等 ❤&quot;, &quot;❤ 公正 ❤&quot;, &quot;❤ 法治 ❤&quot;, &quot;❤ 爱国 ❤&quot;, &quot;❤ 敬业 ❤&quot;, &quot;❤ 诚信 ❤&quot;, &quot;❤ 友善 ❤&quot;);</span><br><span class="line">      var $i &#x3D; $(&quot;&lt;span&#x2F;&gt;&quot;).text(a[a_idx]);</span><br><span class="line">      a_idx &#x3D; (a_idx + 1) % a.length;</span><br><span class="line">      var x &#x3D; e.pageX,</span><br><span class="line">        y &#x3D; e.pageY;</span><br><span class="line">      $i.css(&#123;</span><br><span class="line">        &quot;z-index&quot;: 999,</span><br><span class="line">        &quot;top&quot;: y - 20,</span><br><span class="line">        &quot;left&quot;: x,</span><br><span class="line">        &quot;position&quot;: &quot;absolute&quot;,</span><br><span class="line">        &quot;font-weight&quot;: &quot;bold&quot;,</span><br><span class="line">        &quot;color&quot;: color</span><br><span class="line">      &#125;);</span><br><span class="line">      $(&quot;body&quot;).append($i);</span><br><span class="line">      $i.animate(&#123;</span><br><span class="line">        &quot;top&quot;: y - 180,</span><br><span class="line">        &quot;opacity&quot;: 0</span><br><span class="line">      &#125;, 1500, function () &#123;</span><br><span class="line">        $i.remove();</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>js jQuery实现点击浏览器标签切换网页标题</title>
    <url>/2019/2ec86465.html</url>
    <content><![CDATA[<p><strong>效果图</strong>：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/09/5cfc9e735b8cb54633.gif"></p>
<a id="more"></a>
<p>直接上代码</p>
<pre><code>&lt;script&gt;
    $(document).ready(function () &#123;
        document.addEventListener(&quot;visibilitychange&quot;, function()&#123;
        document.title = document.hidden ? &quot;回来呀老弟！！&quot; :&quot;来啦老弟！！&quot;;&#125;);
    &#125;)
&lt;/script&gt;</code></pre>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql 8.0.12压缩包解压后找不到data文件夹解决办法</title>
    <url>/2020/bfdf68bf.html</url>
    <content><![CDATA[<h2 id="下载mysql"><a href="#下载mysql" class="headerlink" title="下载mysql"></a>下载mysql</h2><p><a href="https://dev.mysql.com/downloads/mysql/">mysql下载地址</a>  免安装版 直接解压后发现没有data文件夹 <br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/22/wuG4cUoRI7rlYZf.jpg"></p>
<h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><p>解压出来是这样的，没有data文件夹<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/22/3gRKmWlPCZuyHn8.jpg"><br>解决方法：<br><code>mysqld --initialize-insecure --user=mysql</code></p>
<p>直接复制上面这条命令<br>然后cmd进入到 mysql解压出来bin的目录中：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/22/rs5mNRGP2W8SKL9.jpg"></p>
<p>等待一会  就发现data的这个目录了！<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/22/uR3WsPGzeAd4KHL.jpg"></p>
]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>linux服务器配置python3与python2共存</title>
    <url>/2019/b8e6f2d5.html</url>
    <content><![CDATA[<h4 id="话不多说直接动手。我用的是xshell-服务器系统是centos-7"><a href="#话不多说直接动手。我用的是xshell-服务器系统是centos-7" class="headerlink" title="话不多说直接动手。我用的是xshell 服务器系统是centos 7"></a>话不多说直接动手。我用的是xshell 服务器系统是centos 7</h4><p><strong>0.先从官网下载python源码</strong></p>
<pre><code>wget https://www.python.org/ftp/python/3.7.1/Python-3.7.1.tar.xz</code></pre>
<p><strong>1.解压</strong><br> 可以新建一个文件夹将下载的python放到这个文件里<br> 进入home文件夹<br> 输入：<code>cd /home</code><br> 接着输入：<code>mkdir python</code><br> 上面的命令完成后就会在home中新建了一个文件夹python<br> <a id="more"></a><br> 然后将下载的文件移动到我们新建的python文件中<br> 输入：c<code>d ~</code><br> 回到顶级目录<br> 然后输入： <code>mv Python-3.7.1.tar.xz /home/python</code><br> 这样就把python的压缩包移动到了我们新建的python文件夹中</p>
<p> 接着需要进入到新建的python文件夹<br> 输入：<code>cd /home/python</code><br> 进入到文件夹后 输入：<code>ls</code>  可以看到有我们的python压缩包<code>Python-3.7.1.tar.xz</code> 最后开始解压<br> 输入：<code>tar -xvJf Python-3.7.1.tar.xz</code><br> 解压完成后输入：l<code>s</code><br> 可以看到多了一个python的文件夹这就是python的源码了</p>
<p><strong>2.编译安装</strong><br>进入python源码的文件夹<br>输入：<code>cd Python-3.7.1</code><br>开始编译：<code>./configure prefix=/usr/local/python3</code><br>编译完成后开始安装： <code>make install</code>    需要等待一小会<br>安装完毕后 <code>/usr/local/</code>目录下就会有<code>python3</code>了<br>到这里python就安装完毕了<br><strong>3.重点来了</strong><br>由于linux系统都是自带python的，但是版本都是python2的，默认使用的是python2所以我们要更改一下将默认修改为python3</p>
<p><strong>3.1.查看系统默认的python版本</strong></p>
<p>我们先进入到<code>usr/bin</code>目录<br>输入：<code>ll python</code><br>输入完可以看到<code>python ---&gt; python2</code> 这个就是系统默认使用<code>python2.X</code>的版本<br>我们需要修改这个默认设置<br><strong>3.2.修改python默认版本</strong></p>
<p><strong>创建软链</strong>：<br>      输入：<code>ln -s /usr/local/python3/bin/python3 /usr/bin/python</code><br>      如果提示：<code>ln: failed to create symbolic link &#39;/usr/bin/python&#39;: File exists</code><br>      说明已经有链接链到的这个文件夹上，我们只需要删除他就可以了<br>      输入：<code>rm -rf /usr/bin/python</code><br>      删除后在输入一次：<code>ln -s /usr/local/python3/bin/python3 /usr/bin/python</code><br>      OK完成了<br>      你可以按照3.1的方法查看一下是不是修改好了<br>      或者也可输入：<code>python -V   与   python2 -V</code><br>      看看输出的版本是多少</p>
<pre><code>  在安装库时需要输入： python -m install XXXX  这样才是安装到python3的版本是
  直接输入：pip install XXXX 这个是安装到python2的版本上
  还有一种方法是给pip3创建软链：
  输入：ln -s /usr/local/python3/bin/pip3.6 /usr/bin/pip3           
  完成后安装库就只需要输入：pip3 install XXXXX  就可以了</code></pre>
]]></content>
      <categories>
        <category>centos7</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>git pull成功本地代码没更新</title>
    <url>/2020/abb6c0d3.html</url>
    <content><![CDATA[<p>由于本地的更改所以没有拉取成功，可以这样解决：<br>先使用<code>git stash</code>将本地修改储存起来。<br>然后再<code>git pull </code>就可以了呢<br><font color="red">PS : <em>建议使用完整的git pull</em>：</font><code>git pull orgin master</code></p>
]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>python3爬虫(八)--BeautifulSoup4的基本使用</title>
    <url>/2019/f0ba7350.html</url>
    <content><![CDATA[<h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><p>将一段文档传入BeautifulSoup 的构造方法,就能得到一个文档的对象, 可以传入一段字符串或一个文件句柄.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup &#x3D; BeautifulSoup(open(&quot;index.html&quot;))</span><br><span class="line">soup1 &#x3D; BeautifulSoup(&quot;&lt;html&gt;data&lt;&#x2F;html&gt;&quot;)</span><br><span class="line">print(soup)</span><br><span class="line">print(soup1)</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>打印虽让会有结果，然是会一些提示：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/17/5d0714b4231df84490.png"><br>提示说的是建议我们指定一个解析器，像这样：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup &#x3D; BeautifulSoup(open(&quot;index.html&quot;),features&#x3D;&quot;lxml&quot;)</span><br><span class="line">soup1 &#x3D; BeautifulSoup(&quot;&lt;html&gt;data&lt;&#x2F;html&gt;&quot;,features&#x3D;&quot;lxml&quot;)</span><br><span class="line">print(soup)</span><br><span class="line">print(soup1)</span><br></pre></td></tr></table></figure>
<p>如果不指定的话，Beautiful Soup会选择最合适的解析器来解析这段文档，具体可参考 <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html#xml">解析成XML</a> </p>
<h3 id="对象的种类"><a href="#对象的种类" class="headerlink" title="对象的种类"></a>对象的种类</h3><p>Beautiful Soup将复杂HTML文档转换成一个复杂的树形结构,每个节点都是Python对象,所有对象可以归纳为4种: Tag , NavigableString , BeautifulSoup , Comment .</p>
<h4 id="Tag"><a href="#Tag" class="headerlink" title="Tag"></a>Tag</h4><p>Tag 对象与XML或HTML原生文档中的tag相同:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">soup &#x3D; BeautifulSoup(&#39;&lt;b class&#x3D;&quot;boldest&quot;&gt;Extremely bold&lt;&#x2F;b&gt;&#39;)</span><br><span class="line">tag &#x3D; soup.b</span><br><span class="line">type(tag)</span><br><span class="line"># &lt;class &#39;bs4.element.Tag&#39;&gt;</span><br></pre></td></tr></table></figure>
<p>Tag有很多方法和属性，现在介绍一下tag中最重要的属性: name和attributes</p>
<h4 id="Name"><a href="#Name" class="headerlink" title="Name"></a>Name</h4><p>每个tag都有自己的名字,通过 .name 来获取:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tag.name</span><br><span class="line"># b</span><br></pre></td></tr></table></figure>
<p>如果改变了tag的name,那将影响所有通过当前Beautiful Soup对象生成的HTML文档:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tag.name &#x3D; &quot;blockquote&quot;</span><br><span class="line">tag</span><br><span class="line"># &lt;blockquote class&#x3D;&quot;boldest&quot;&gt;Extremely bold&lt;&#x2F;blockquote&gt;</span><br></pre></td></tr></table></figure>
<h4 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h4><p>一个tag可能有很多个属性. tag <b class="boldest"> 有一个 “class” 的属性,值为 “boldest” . tag的属性的操作方法与字典相同:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tag[&#39;class&#39;]</span><br><span class="line"># boldest</span><br></pre></td></tr></table></figure>
<p>也可以直接”点”取属性, 比如: .attrs :</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tag.attrs</span><br><span class="line"># &#123;class: boldest&#125;</span><br></pre></td></tr></table></figure>
<p>tag的属性可以被添加,删除或修改. 再说一次, tag的属性操作方法与字典一样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tag[&#39;class&#39;] &#x3D; &#39;verybold&#39;</span><br><span class="line">tag[&#39;id&#39;] &#x3D; 1</span><br><span class="line">tag</span><br><span class="line"># &lt;blockquote class&#x3D;&quot;verybold&quot; id&#x3D;&quot;1&quot;&gt;Extremely bold&lt;&#x2F;blockquote&gt;</span><br><span class="line"></span><br><span class="line">del tag[&#39;class&#39;]</span><br><span class="line">del tag[&#39;id&#39;]</span><br><span class="line">tag</span><br><span class="line"># &lt;blockquote&gt;Extremely bold&lt;&#x2F;blockquote&gt;</span><br><span class="line"></span><br><span class="line">tag[&#39;class&#39;]</span><br><span class="line"># KeyError: &#39;class&#39;</span><br><span class="line">print(tag.get(&#39;class&#39;))</span><br><span class="line"># None</span><br></pre></td></tr></table></figure>
<h3 id="多值属性"><a href="#多值属性" class="headerlink" title="多值属性"></a>多值属性</h3><p>HTML 4定义了一系列可以包含多个值的属性.在HTML5中移除了一些,却增加更多.最常见的多值的属性是 class (一个tag可以有多个CSS的class). 还有一些属性 rel , rev , accept-charset , headers , accesskey . 在Beautiful Soup中多值属性的返回类型是list:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">css_soup &#x3D; BeautifulSoup(&#39;&lt;p class&#x3D;&quot;body strikeout&quot;&gt;&lt;&#x2F;p&gt;&#39;)</span><br><span class="line">css_soup.p[&#39;class&#39;]</span><br><span class="line"># [&quot;body&quot;, &quot;strikeout&quot;]</span><br><span class="line"></span><br><span class="line">css_soup &#x3D; BeautifulSoup(&#39;&lt;p class&#x3D;&quot;body&quot;&gt;&lt;&#x2F;p&gt;&#39;)</span><br><span class="line">css_soup.p[&#39;class&#39;]</span><br><span class="line"># [&quot;body&quot;]</span><br></pre></td></tr></table></figure>
<p>如果某个属性看起来好像有多个值,但在任何版本的HTML定义中都没有被定义为多值属性,那么Beautiful Soup会将这个属性作为字符串返回</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">id_soup &#x3D; BeautifulSoup(&#39;&lt;p id&#x3D;&quot;my id&quot;&gt;&lt;&#x2F;p&gt;&#39;)</span><br><span class="line">id_soup.p[&#39;id&#39;]</span><br><span class="line"># &#39;my id&#39;</span><br></pre></td></tr></table></figure>
<p>将tag转换成字符串时,多值属性会合并为一个值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rel_soup &#x3D; BeautifulSoup(&#39;&lt;p&gt;Back to the &lt;a rel&#x3D;&quot;index&quot;&gt;homepage&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&#39;)</span><br><span class="line">rel_soup.a[&#39;rel&#39;]</span><br><span class="line"># [&#39;index&#39;]</span><br><span class="line">rel_soup.a[&#39;rel&#39;] &#x3D; [&#39;index&#39;, &#39;contents&#39;]</span><br><span class="line">print(rel_soup.p)</span><br><span class="line"># &lt;p&gt;Back to the &lt;a rel&#x3D;&quot;index contents&quot;&gt;homepage&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure>

<p>如果转换的文档是XML格式,那么tag中不包含多值属性</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xml_soup &#x3D; BeautifulSoup(&#39;&lt;p class&#x3D;&quot;body strikeout&quot;&gt;&lt;&#x2F;p&gt;&#39;, &#39;xml&#39;)</span><br><span class="line">xml_soup.p[&#39;class&#39;]</span><br><span class="line"># body strikeout</span><br></pre></td></tr></table></figure>
<h3 id="可以遍历的字符串"><a href="#可以遍历的字符串" class="headerlink" title="可以遍历的字符串"></a>可以遍历的字符串</h3><p>字符串常被包含在tag内.Beautiful Soup用 NavigableString 类来包装tag中的字符串:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tag.string</span><br><span class="line"># u&#39;Extremely bold&#39;</span><br><span class="line">type(tag.string)</span><br><span class="line"># &lt;class &#39;bs4.element.NavigableString&#39;&gt;</span><br></pre></td></tr></table></figure>
<p>tag中包含的字符串不能编辑,但是可以被替换成其它的字符串,用 replace_with() 方法:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tag.string.replace_with(&quot;No longer bold&quot;)</span><br><span class="line">tag</span><br><span class="line"># &lt;blockquote&gt;No longer bold&lt;&#x2F;blockquote&gt;</span><br></pre></td></tr></table></figure>

<p>一个 NavigableString 字符串与Python中的Unicode字符串相同,通过 unicode() 方法可以直接将 NavigableString 对象转换成Unicode字符串:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">unicode_string &#x3D; unicode(tag.string)</span><br><span class="line">unicode_string</span><br><span class="line"># u&#39;Extremely bold&#39;</span><br><span class="line">type(unicode_string)</span><br><span class="line"># &lt;type &#39;unicode&#39;&gt;</span><br></pre></td></tr></table></figure>
<h3 id="注释及特殊字符串"><a href="#注释及特殊字符串" class="headerlink" title="注释及特殊字符串"></a>注释及特殊字符串</h3><p>Tag , NavigableString , BeautifulSoup 几乎覆盖了html和xml中的所有内容,但是还有一些特殊对象.容易让人担心的内容是文档的注释部分:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">markup &#x3D; &quot;&lt;b&gt;&lt;!--Hey, buddy. Want to buy a used parser?--&gt;&lt;&#x2F;b&gt;&quot;</span><br><span class="line">soup &#x3D; BeautifulSoup(markup)</span><br><span class="line">comment &#x3D; soup.b.string</span><br><span class="line">type(comment)</span><br><span class="line"># &lt;class &#39;bs4.element.Comment&#39;&gt;</span><br></pre></td></tr></table></figure>
<p>Comment 对象是一个特殊类型的 NavigableString 对象:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">comment</span><br><span class="line"># Hey, buddy. Want to buy a used parser</span><br></pre></td></tr></table></figure>

<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>Beautifulsoup内容太多了，还想要更具体的学习 请参考 <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html#id9">Beautifulsoup文档</a>，这是中文的文档。</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3爬虫(六)--requests的高级操作</title>
    <url>/2019/19723458.html</url>
    <content><![CDATA[<h3 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;httpbin.org&#x2F;post&quot;</span><br><span class="line">files &#x3D; &#123;&#39;files&#39;:open(&quot;alipay.png&quot;,&#39;rb&#39;)&#125;</span><br><span class="line">response &#x3D; requests.post(url,files&#x3D;files)</span><br><span class="line">print(response.text)</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>结果：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/09/5cfc952da392592448.png"></p>
<h3 id="获取cookie"><a href="#获取cookie" class="headerlink" title="获取cookie"></a>获取cookie</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;www.baidu.com&quot;</span><br><span class="line">response &#x3D; requests.get(url)</span><br><span class="line">print(response.cookies)</span><br><span class="line">for k,v in response.cookies.items():</span><br><span class="line">    print(k,&quot;&#x3D;&quot;,v)</span><br></pre></td></tr></table></figure>
<p>结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;RequestsCookieJar[&lt;Cookie BDORZ&#x3D;27315 for .baidu.com&#x2F;&gt;]&gt;</span><br><span class="line">BDORZ &#x3D; 27315</span><br></pre></td></tr></table></figure>
<h3 id="会话维持"><a href="#会话维持" class="headerlink" title="会话维持"></a>会话维持</h3><p>cookie的一个作用就是可以用于模拟登陆，做会话维持</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">session &#x3D; requests.session()</span><br><span class="line">session.get(&#39;http:&#x2F;&#x2F;httpbin.org&#x2F;cookies&#x2F;set&#x2F;number&#x2F;12456&#39;)</span><br><span class="line">response &#x3D; session.get(&#39;http:&#x2F;&#x2F;httpbin.org&#x2F;cookies&#39;)</span><br><span class="line">print(response.text)</span><br></pre></td></tr></table></figure>
<p>结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;cookies&quot;: &#123;</span><br><span class="line">    &quot;number&quot;: &quot;12456&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>可以看到我们设置的cookie的值</p>
<h3 id="使用代理"><a href="#使用代理" class="headerlink" title="使用代理"></a>使用代理</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">url&#x3D; &quot;https:&#x2F;&#x2F;www.taobao.com&quot;</span><br><span class="line">proxies  &#x3D; &#123;</span><br><span class="line">    &quot;https&quot;:&quot;https:&#x2F;&#x2F;115.28.148.192:8118&quot;,</span><br><span class="line">&#125;</span><br><span class="line">headers  &#x3D; &#123;&quot;User-Angent&quot;:&quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;74.0.3729.131 Safari&#x2F;537.36&quot;&#125;</span><br><span class="line">response &#x3D; requests.get(url,headers &#x3D; headers,proxies &#x3D; proxies)</span><br><span class="line">print(response.status_code)</span><br></pre></td></tr></table></figure>
<h3 id="设置用户名和密码代理"><a href="#设置用户名和密码代理" class="headerlink" title="设置用户名和密码代理"></a>设置用户名和密码代理</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"> </span><br><span class="line">proxies &#x3D; &#123;</span><br><span class="line">    &quot;http&quot;: &quot;http:&#x2F;&#x2F;user:password@127.0.0.1:9743&#x2F;&quot;,</span><br><span class="line">&#125;</span><br><span class="line">response &#x3D; requests.get(&quot;https:&#x2F;&#x2F;www.taobao.com&quot;, proxies&#x3D;proxies)</span><br><span class="line">print(response.status_code)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>python3爬虫实例(一)--爬取酷狗TOP500的音乐信息</title>
    <url>/2019/3921d68a.html</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p> 学习完requests库与beautifulsoup这个库后，我们就可来搞一个简单的爬虫了，这次我们爬取酷狗音乐的TOP500的歌曲信息，包含排名，歌名，歌曲时长。分分钟爬取下来。</p>
<h3 id="分析URL链接"><a href="#分析URL链接" class="headerlink" title="分析URL链接"></a>分析URL链接</h3><p><a href="http://www.kugou.com/yy/rank/home/1-8888.html">http://www.kugou.com/yy/rank/home/1-8888.html</a> ，  这个是酷狗TOP500歌曲信息页面，我们发现这里并不能翻页，一页只能显示，22首歌曲，如果我们直接用这个链接就只能爬取这一页的22首歌曲的信息。所以我们要想办法。<br> 观察这个链接，看到这个1-8888.html 我们只需要修改这个1就可以实现换页，例如把1修改成2：<a href="http://www.kugou.com/yy/rank/home/2-8888.html">http://www.kugou.com/yy/rank/home/2-8888.html</a> ， 他就可显示下一页的歌曲信息，计算一下，每页22首，共有500 ，可以算出一共有23页，也就是23个URL<br> <a id="more"></a></p>
<h3 id="分析网页结构"><a href="#分析网页结构" class="headerlink" title="分析网页结构"></a>分析网页结构</h3><p>分析网页这个需要了解点html的基础知识，我们先将第一页的歌曲信息弄下来<br><a href="http://www.kugou.com/yy/rank/home/1-8888.html">http://www.kugou.com/yy/rank/home/1-8888.html</a> ，    打开链接 审查元素 点击 酷狗TOP500，<br>定位到显示歌曲的div可以看这个div的ul里面的li包含 这些歌曲所有的信息而且结构是一样的只有歌曲信息不同：</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/17/5d075192d629021290.png"><br>我们只需要知道一首歌的结构就行了<br>利用选择工具选中第一首歌曲，选中后就右边的源码就定位到了响应的地方如图：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/17/5d074cfb692d624313.png"><br>排名： 用选择工具选择 歌名旁边的数值，这个就是它的排名<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/17/5d074e922f03a49863.png"><br>这时候我们就需要用到beautifulsoup这个库了，用这个库可以快速的获取到这个文本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">url &#x3D; &quot;https:&#x2F;&#x2F;www.kugou.com&#x2F;yy&#x2F;rank&#x2F;home&#x2F;1-8888.html&quot;</span><br><span class="line">Headers &#x3D; &#123;</span><br><span class="line">&#39;User-Agent&#39;: &#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;70.0.3538.67 Safari&#x2F;537.36&#39;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response &#x3D; requests.get(url,headers &#x3D; Headers)</span><br><span class="line"></span><br><span class="line">#将页面源码解析</span><br><span class="line">soup &#x3D; BeautifulSoup(response.text,&#39;lxml&#39;)</span><br><span class="line"></span><br><span class="line">#获取到这页所有的排名  select查找的意思，span.pc_temp_num是查找span里面属性pc_temp_num</span><br><span class="line">ranks &#x3D; soup.select(&quot;span.pc_temp_num&quot;)</span><br><span class="line"></span><br><span class="line">#获取所有的歌名，div.pc_temp_songlist&gt;ul&gt;li&gt;a 这是歌名文本所在的位置</span><br><span class="line">titles &#x3D; soup.select(&quot;div.pc_temp_songlist&gt;ul&gt;li&gt;a&quot;)</span><br><span class="line"></span><br><span class="line">#获取所有歌曲时长</span><br><span class="line">times &#x3D; soup.select(&quot;div.pc_temp_songlist &gt; ul &gt; li &gt; span.pc_temp_tips_r &gt; span&quot;)</span><br><span class="line"></span><br><span class="line">#遍历输出第一页所有的歌曲信息</span><br><span class="line">for rank,title,time in zip(ranks,titles,times):</span><br><span class="line">    print(&quot;排名：&quot;+rank.text.strip()+&quot;-----歌名：&quot;+title.text.strip() +&quot;----时间：&quot;+time.text.strip())</span><br></pre></td></tr></table></figure>
<p><strong>结果：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">排名：1-----歌名：G.E.M.邓紫棋 - 来自天堂的魔鬼 (Live)----时间：4:06</span><br><span class="line">排名：2-----歌名：海来阿木、阿呷拉古、曲比阿且 - 别知己----时间：4:40</span><br><span class="line">排名：3-----歌名：隔壁老樊 - 多想在平庸的生活拥抱你 (Live)----时间：4:29</span><br><span class="line">排名：4-----歌名：陈雪凝 - 你的酒馆对我打了烊----时间：4:11</span><br><span class="line">排名：5-----歌名：蕾蕾的小麦霸们、张振轩 - 赢在江湖 (童声版)----时间：3:46</span><br><span class="line">排名：6-----歌名：魏新雨 - 余情未了----时间：3:36</span><br><span class="line">排名：7-----歌名：王力宏、谭维维 - 缘分一道桥----时间：4:06</span><br><span class="line">排名：8-----歌名：Yusee西 - 心如止水----时间：3:02</span><br><span class="line">排名：9-----歌名：陈雪凝 - 绿色----时间：4:29</span><br><span class="line">排名：10-----歌名：焦迈奇 - 我的名字----时间：4:11</span><br><span class="line">排名：11-----歌名：半吨兄弟 - 爱情错觉----时间：4:03</span><br><span class="line">排名：12-----歌名：Ice Paper - 心如止水----时间：3:05</span><br><span class="line">排名：13-----歌名：王琪 - 万爱千恩----时间：5:22</span><br><span class="line">排名：14-----歌名：王小帅 - 最近 (正式版)----时间：3:37</span><br><span class="line">排名：15-----歌名：杨胖雨 - 情深深雨濛濛----时间：2:35</span><br><span class="line">排名：16-----歌名：虎二 - 你一定要幸福----时间：4:19</span><br><span class="line">排名：17-----歌名：大壮 - 伪装----时间：5:01</span><br><span class="line">排名：18-----歌名：孤独诗人 - 渡我不渡她----时间：3:02</span><br><span class="line">排名：19-----歌名：王贰浪 - 像鱼----时间：4:45</span><br><span class="line">排名：20-----歌名：NCF-艾力 - 黎明前的黑暗 (女声版)----时间：2:25</span><br><span class="line">排名：21-----歌名：大欢 - 多年以后----时间：4:03</span><br><span class="line">排名：22-----歌名：彭十六elf - 戏影----时间：3:40</span><br></pre></td></tr></table></figure>
<p>这样就将第一页的所有歌曲信息都爬取下来了，只要第一页搞定，其他页也是相同的原理，只是URL不同而已。<br>修改代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">Headers &#x3D; &#123;</span><br><span class="line">&#39;User-Agent&#39;: &#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;70.0.3538.67 Safari&#x2F;537.36&#39;</span><br><span class="line">&#125;</span><br><span class="line">def get_info(url):</span><br><span class="line">    response &#x3D; requests.get(url,headers &#x3D; Headers)</span><br><span class="line">    soup &#x3D; BeautifulSoup(response.text,&#39;lxml&#39;)</span><br><span class="line">    ranks &#x3D; soup.select(&quot;span.pc_temp_num&quot;)</span><br><span class="line">    titles &#x3D; soup.select(&quot;div.pc_temp_songlist&gt;ul&gt;li&gt;a&quot;)</span><br><span class="line">    times &#x3D; soup.select(&quot;div.pc_temp_songlist &gt; ul &gt; li &gt; span.pc_temp_tips_r &gt; span&quot;)</span><br><span class="line">    for rank, title, time in zip(ranks, titles, times):</span><br><span class="line">        print(&quot;排名：&quot; + rank.text.strip() + &quot;-----歌名：&quot; + title.text.strip() + &quot;----时间：&quot; + time.text.strip())</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    urls &#x3D; [&#39;http:&#x2F;&#x2F;www.kugou.com&#x2F;yy&#x2F;rank&#x2F;home&#x2F;&#123;&#125;-8888.html&#39; .format(number)for number in range(1, 24)]</span><br><span class="line">    for url in urls:</span><br><span class="line">        get_info(url)</span><br></pre></td></tr></table></figure>
<p>结果：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/17/5d0765adc58c785194.gif"><br>完结！！！ 是不是超级简单！！！</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>python3爬虫(七)--了解Beautiful Soup 4</title>
    <url>/2019/22f91623.html</url>
    <content><![CDATA[<h3 id="Beautiful-Soup-4简介"><a href="#Beautiful-Soup-4简介" class="headerlink" title="Beautiful Soup 4简介"></a>Beautiful Soup 4简介</h3><p>Beautiful Soup 是一个可以从HTML或XML文件中提取数据的Python库.它能够通过你喜欢的转换器实现惯用的文档导航,查找,修改文档的方式.Beautiful Soup会帮你节省数小时甚至数天的工作时间.<br>Beautiful Soup 3 目前已经停止开发,推荐使用Beautiful Soup 4 详情查看 <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html">官方文档</a></p>
<a id="more"></a>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>如果你用的是新版的Debain或ubuntu,那么可以通过系统的软件包管理来安装:</p>
<pre><code>$ apt-get install Python-bs4</code></pre>
<p>Beautiful Soup 4 通过PyPi发布,所以如果你无法使用系统包管理安装,那么也可以通过 easy_install 或 pip 来安装.包的名字是 beautifulsoup4 ,这个包兼容Python2和Python3.</p>
<pre><code>$ easy_install beautifulsoup4

$ pip install beautifulsoup4</code></pre>
<p>在PyPi中还有一个名字是 BeautifulSoup 的包,但那可能不是你想要的,那是 Beautiful Soup3 的发布版本,因为很多项目还在使用BS3, 所以 BeautifulSoup 包依然有效.但是如果你在编写新项目,那么你应该安装的 beautifulsoup4 </p>
<h3 id="简单的例子"><a href="#简单的例子" class="headerlink" title="简单的例子"></a>简单的例子</h3><p>Beautiful Soup4 到底有什么用呢，先来看看下面的代码。是官方给出的一个小例子<br>这是 爱丽丝梦游仙境的 的一段内容  定义一个<code>html_doc</code> 值是一段html代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">html_doc &#x3D; &quot;&quot;&quot;</span><br><span class="line">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#39;s story&lt;&#x2F;title&gt;&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p class&#x3D;&quot;title&quot;&gt;&lt;b&gt;The Dormouse&#39;s story&lt;&#x2F;b&gt;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p class&#x3D;&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were</span><br><span class="line">&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;example.com&#x2F;elsie&quot; class&#x3D;&quot;sister&quot; id&#x3D;&quot;link1&quot;&gt;Elsie&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;example.com&#x2F;lacie&quot; class&#x3D;&quot;sister&quot; id&#x3D;&quot;link2&quot;&gt;Lacie&lt;&#x2F;a&gt; and</span><br><span class="line">&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;example.com&#x2F;tillie&quot; class&#x3D;&quot;sister&quot; id&#x3D;&quot;link3&quot;&gt;Tillie&lt;&#x2F;a&gt;</span><br><span class="line">and they lived at the bottom of a well.&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p class&#x3D;&quot;story&quot;&gt;...&lt;&#x2F;p&gt;</span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure>
<p>使用BeautifulSoup解析这段代码,能够得到一个 BeautifulSoup 的对象,并能按照标准的缩进格式的结构输出</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup &#x3D; BeautifulSoup(html_doc,features&#x3D;&quot;html.parser&quot;)</span><br><span class="line">print(soup.prettify())</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line"> &lt;head&gt;</span><br><span class="line">  &lt;title&gt;</span><br><span class="line">   The Dormouse&#39;s story</span><br><span class="line">  &lt;&#x2F;title&gt;</span><br><span class="line"> &lt;&#x2F;head&gt;</span><br><span class="line"> &lt;body&gt;</span><br><span class="line">  &lt;p class&#x3D;&quot;title&quot;&gt;</span><br><span class="line">   &lt;b&gt;</span><br><span class="line">    The Dormouse&#39;s story</span><br><span class="line">   &lt;&#x2F;b&gt;</span><br><span class="line">  &lt;&#x2F;p&gt;</span><br><span class="line">  &lt;p class&#x3D;&quot;story&quot;&gt;</span><br><span class="line">   Once upon a time there were three little sisters; and their names were</span><br><span class="line">   &lt;a class&#x3D;&quot;sister&quot; href&#x3D;&quot;http:&#x2F;&#x2F;example.com&#x2F;elsie&quot; id&#x3D;&quot;link1&quot;&gt;</span><br><span class="line">    Elsie</span><br><span class="line">   &lt;&#x2F;a&gt;</span><br><span class="line">   &lt;a class&#x3D;&quot;sister&quot; href&#x3D;&quot;http:&#x2F;&#x2F;example.com&#x2F;lacie&quot; id&#x3D;&quot;link2&quot;&gt;</span><br><span class="line">    Lacie</span><br><span class="line">   &lt;&#x2F;a&gt;</span><br><span class="line">   and</span><br><span class="line">   &lt;a class&#x3D;&quot;sister&quot; href&#x3D;&quot;http:&#x2F;&#x2F;example.com&#x2F;tillie&quot; id&#x3D;&quot;link3&quot;&gt;</span><br><span class="line">    Tillie</span><br><span class="line">   &lt;&#x2F;a&gt;</span><br><span class="line">and they lived at the bottom of a well.</span><br><span class="line">  &lt;&#x2F;p&gt;</span><br><span class="line">  &lt;p class&#x3D;&quot;story&quot;&gt;</span><br><span class="line">   ...</span><br><span class="line">  &lt;&#x2F;p&gt;</span><br><span class="line"> &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>
<h4 id="几个简单的浏览结构化数据的方法"><a href="#几个简单的浏览结构化数据的方法" class="headerlink" title="几个简单的浏览结构化数据的方法"></a>几个简单的浏览结构化数据的方法</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#获取title标签包含内容</span><br><span class="line">soup.title</span><br><span class="line">&lt;title&gt;The Dormouse&#39;s story&lt;&#x2F;title&gt;</span><br><span class="line"></span><br><span class="line">#获取标签名</span><br><span class="line">soup.title.name</span><br><span class="line">title</span><br><span class="line"></span><br><span class="line">#获取title的内容</span><br><span class="line">soup.title.string</span><br><span class="line">The Dormouse&#39;s story</span><br><span class="line"></span><br><span class="line">#获取title的父标签名</span><br><span class="line">soup.title.parent.name</span><br><span class="line">head</span><br><span class="line"></span><br><span class="line">#获取第一个P标签</span><br><span class="line">soup.p</span><br><span class="line">&lt;p class&#x3D;&quot;title&quot;&gt;&lt;b&gt;The Dormouse&#39;s story&lt;&#x2F;b&gt;&lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">#获取第一个P标签的class名</span><br><span class="line">soup.p[&#39;class&#39;]</span><br><span class="line">title</span><br><span class="line"></span><br><span class="line"># 获取第一个a标签</span><br><span class="line">soup.a</span><br><span class="line"> &lt;a class&#x3D;&quot;sister&quot; href&#x3D;&quot;http:&#x2F;&#x2F;example.com&#x2F;elsie&quot; id&#x3D;&quot;link1&quot;&gt;Elsie&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line"> # 获取所有a标签</span><br><span class="line">soup.find_all(&#39;a&#39;)</span><br><span class="line">[&lt;a class&#x3D;&quot;sister&quot; href&#x3D;&quot;http:&#x2F;&#x2F;example.com&#x2F;elsie&quot; id&#x3D;&quot;link1&quot;&gt;Elsie&lt;&#x2F;a&gt;,</span><br><span class="line">&lt;a class&#x3D;&quot;sister&quot; href&#x3D;&quot;http:&#x2F;&#x2F;example.com&#x2F;lacie&quot; id&#x3D;&quot;link2&quot;&gt;Lacie&lt;&#x2F;a&gt;,</span><br><span class="line"> &lt;a class&#x3D;&quot;sister&quot; href&#x3D;&quot;http:&#x2F;&#x2F;example.com&#x2F;tillie&quot; id&#x3D;&quot;link3&quot;&gt;Tillie&lt;&#x2F;a&gt;]</span><br><span class="line"></span><br><span class="line">#获取id为link3的标签</span><br><span class="line">soup.find(id&#x3D;&quot;link3&quot;)</span><br><span class="line"># &lt;a class&#x3D;&quot;sister&quot; href&#x3D;&quot;http:&#x2F;&#x2F;example.com&#x2F;tillie&quot; id&#x3D;&quot;link3&quot;&gt;Tillie&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure>
<h4 id="从文档中找到所有a标签的链接"><a href="#从文档中找到所有a标签的链接" class="headerlink" title="从文档中找到所有a标签的链接:"></a>从文档中找到所有a标签的链接:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for link in soup.find_all(&#39;a&#39;):</span><br><span class="line">    print(link.get(&#39;href&#39;))</span><br><span class="line">    </span><br><span class="line">  http:&#x2F;&#x2F;example.com&#x2F;elsie</span><br><span class="line">  http:&#x2F;&#x2F;example.com&#x2F;lacie</span><br><span class="line">  http:&#x2F;&#x2F;example.com&#x2F;tillie</span><br></pre></td></tr></table></figure>
<h4 id="从文档中获取所有文字内容"><a href="#从文档中获取所有文字内容" class="headerlink" title="从文档中获取所有文字内容:"></a>从文档中获取所有文字内容:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(soup.get_text())</span><br><span class="line"></span><br><span class="line">The Dormouse&#39;s story</span><br><span class="line">The Dormouse&#39;s story</span><br><span class="line">Once upon a time there were three little sisters; and their names were</span><br><span class="line">Elsie,</span><br><span class="line">Lacie and</span><br><span class="line">Tillie;</span><br><span class="line">and they lived at the bottom of a well.</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h3 id="安装解析器"><a href="#安装解析器" class="headerlink" title="安装解析器"></a>安装解析器</h3><p>Beautiful Soup支持Python标准库中的HTML解析器,还支持一些第三方的解析器,其中一个是 lxml .根据操作系统不同,可以选择下列方法来安装lxml:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ apt-get install Python-lxml</span><br><span class="line"></span><br><span class="line">$ easy_install lxml</span><br><span class="line"></span><br><span class="line">$ pip install lxml</span><br></pre></td></tr></table></figure>
<p>另一个可供选择的解析器是纯Python实现的 html5lib , html5lib的解析方式与浏览器相同,可以选择下列方法来安装html5lib:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ apt-get install Python-html5lib</span><br><span class="line"></span><br><span class="line">$ easy_install html5lib</span><br><span class="line"></span><br><span class="line">$ pip install html5lib</span><br></pre></td></tr></table></figure>



<p>它们的优缺点:<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/13/5d026efd05eb812920.png"></p>
<p>推荐使用lxml作为解析器,因为效率更高. 在Python2.7.3之前的版本和Python3中3.2.2之前的版本,必须安装lxml或html5lib, 因为那些Python版本的标准库中内置的HTML解析方法不够稳定.</p>
<p>提示: 如果一段HTML或XML文档格式不正确的话,那么在不同的解析器中返回的结果可能是不一样的,查看 <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html#id49">解析器之间的区别</a> 了解更多细节</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>python控制arduino uno R3--------pyfirmata篇</title>
    <url>/2019/98c03907.html</url>
    <content><![CDATA[<p>1.下载pyfirmata</p>
<p>   链接：<a href="https://github.com/tino/pyFirmata">https://github.com/tino/pyFirmata</a><br>   windows下：<code>pip install pyfirmata</code><br>2.下载arduinoIDE</p>
<p>   <a href="https://coding.net/u/coloz/p/arduino-installer/git/raw/master/1.8.7/arduino-1.8.7-windows.exe">窗口版下载</a></p>
<p>   <a href="https://coding.net/u/coloz/p/arduino-installer/git/raw/master/1.8.7/arduino-1.8.7-macosx.zip">MAC下载</a></p>
<p>  <a href="https://pan.baidu.com/s/1MnqSQWi0Fjfdil1GZT64FQ">网盘下载</a></p>
<a id="more"></a>
<p>准备工作完成后打开arduinoIDE：<br>      <strong>选择我们对应的开发版</strong><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/zoWahrNKlSDg4m9.png"><br><strong>接着将的Arduino的版接入电脑找到端口中的对应的COM3</strong></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/8iy95huQcg4qdjV.png"><br><strong>安装求最后安装标准FIRMATA</strong></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/vteaFLTIZbnsXOM.png"></p>
<p>这样准备工作就完成了接下来就是开始写的Python的代码了：</p>
<pre><code>from pyfirmata import Arduino,utilimport time
board = Arduino(&#39;COM3&#39;) while 1:
     board.digital[13].write(0) #向端口13写入0   0代表灭灯
     time.sleep(1)
     board.digital[13].write(1) #向端口13写入1   1代表亮灯
     time.sleep(1)</code></pre>
<p>   运行代码就会看到Arduino的13号脚LED灯间隔一秒一闪一闪了！</p>
<p>大功告成</p>
]]></content>
      <categories>
        <category>硬件</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫(一)-urllib的基本使用</title>
    <url>/2019/794500f6.html</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>python之所以强大主要是因为他有许多的开源库可以使用，爬虫的库就有很多，具体可以自行了解一下。</p>
<p>为了方便我们这次使用的IDE就是用sublime text 3 ，sublime text 3并不支持python程序，所以我们需要配置一下。具体配置教程请查看<a href="https://www.jianshu.com/p/a401a0bfddf7">sublime text 3 打造成python IDE 环境</a> </p>
<p>学习python爬虫当少不了，python的一些基础。<br>可以在通过如下方式进行学习：</p>
<p><strong>(1)廖雪峰Python3教程(文档)：</strong><br>这个也是我的入门教程<br>    URL：<a href="http://www.liaoxuefeng.com/">http://www.liaoxuefeng.com/</a></p>
<a id="more"></a>    
<p><strong>(2)菜鸟教程Python3教程(文档)：</strong><br>    URL：<a href="http://www.runoob.com/python3/python3-tutorial.html">http://www.runoob.com/python3/python3-tutorial.html</a></p>
<p><strong>(3)鱼C工作室Python教程(视频)：</strong><br>    小甲鱼老师很厉害，讲课风格幽默诙谐，如果时间充裕可以考虑看视频。<br>URL：<a href="http://www.fishc.com/">http://www.fishc.com/</a></p>
<h3 id="urllib简介"><a href="#urllib简介" class="headerlink" title="urllib简介"></a>urllib简介</h3><p>在Python 2中，有urllib和urllib2两个库来实现请求的发送。而在Python 3中，已经不存在urllib2这个库了，统一为urllib，其官方文档链接为：<a href="https://docs.python.org/3/library/urllib.html">https://docs.python.org/3/library/urllib.html</a>。</p>
<p>首先，了解一下urllib库，它是Python内置的HTTP请求库，也就是说不需要额外安装即可使用。它包含如下4个模块：</p>
<blockquote>
<p> <strong>request</strong>：最基本的HTTP请求模块，可用来模拟发送请求。传入URL以及额外的参数就可以实现想浏览器那样访问网站<br><strong>error</strong>：异常处理模块，请求错误时，我们可以捕获这些异常，在进行重试以保证程序不意外终止<br><strong>parse</strong>：一个工具模块，提供URL处理方法，比如拆分，解析，合并<br><strong>robotparser</strong>：主要用来识别网站的robots.txt文件，然后判断哪些网站可以爬，用得少。</p>
</blockquote>
<p>我们主要用的就前三个。</p>
<h3 id="爬虫的简单实例"><a href="#爬虫的简单实例" class="headerlink" title="爬虫的简单实例"></a>爬虫的简单实例</h3><p>使用urllib.request.urlopen()可以轻松打开一个网站并获取源码。</p>
<blockquote>
<p>urllib.request.urlopen(url, data=None, [timeout, ]*, cafile=None, capath=None, cadefault=False, context=None)</p>
</blockquote>
<p>urlopen有几个默认的参数具体可查看官方文档</p>
<p>了解了这些信息后，我们就可以写一个简单的爬虫小程序，在sublime text中新建一个urllib_test.py的文件输入如下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rom urllib import request</span><br><span class="line">response &#x3D; urllib.request.urlopen(&#39;https:&#x2F;&#x2F;www.python.org&#39;)</span><br><span class="line">html &#x3D; response.read()</span><br><span class="line">html &#x3D; html.decode(&quot;utf-8&quot;)</span><br><span class="line">print(html)</span><br></pre></td></tr></table></figure>
<p>urllib使用equest.urlopen()打开和读取URL信息，返回的对象response如同一个文本对象，我们可调用read方法进行读取，decode(“utf-8”)将编码换成通用的utf-8.然后利用print函数将其打印出来。<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/05/31/5cf14beb6d11f87271.png"><br>上图就是我们利用python写的一个简单的小爬虫，爬取下来的网页源码。</p>
<p>其实这些源码就是浏览器接收到<a href="https://www.python.org/">https://www.python.org</a>  这个网站服务发送的内容，只不过通过浏览器解析后将这些代码转换成了界面信息给我们浏览<br>当然这些源码信息我们用浏览器的审查元素也可以到，例如我们使用谷歌浏览器在页面右键选择检查，也就是审查元素(不是所有页面都可以审查元素的，例如起点中文网付费章节就不行.)</p>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>感觉啥都没写不知不觉就0点了，只有自己写才能体会别人每篇文章写出来都不容易呀，写文章真的很耗时间，但是能让人印象更深。时间不早啦，今天就写这么多了，后面还有更好玩的等着我去学习呢！</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫(三)-urllib.error异常</title>
    <url>/2019/6f6b0998.html</url>
    <content><![CDATA[<h3 id="urllib-error"><a href="#urllib-error" class="headerlink" title="urllib.error"></a>urllib.error</h3><p>urllib.error异常可以接收urllib.request尝试的异常,urllib.error有两个方法，URLError和HTTPError如下图所示：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/03/5cf4b01834b7660294.png"></p>
<a id="more"></a>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/03/5cf4b0723cc0293255.png"></p>
<p> URLError是OSError的一个子类，HTTPError是URLError的一个子类，服务器上HTTP的响应会返回一个状态码，根据这个HTTP状态码，我们可以知道我们的访问是否成功。常见的状态码200表示成功，还有404等，具体自行了解</p>
<h3 id="URLError异常"><a href="#URLError异常" class="headerlink" title="URLError异常"></a>URLError异常</h3><p> 让我们先看下URLError的异常，代码如下所示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import urllib.request as res</span><br><span class="line">import urllib.error as uer</span><br><span class="line">#一个不存在的网址</span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;www.www.www&quot;</span><br><span class="line">req &#x3D; res.Request(url)</span><br><span class="line">try:</span><br><span class="line">    response &#x3D; res.urlopen(req)</span><br><span class="line">    html &#x3D; response,read().decode(&#39;utf-8&#39;)</span><br><span class="line">    print(html)</span><br><span class="line">except uer.URLError as e:</span><br><span class="line">    print(e.reason)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>可以看到结果：</p>
<blockquote>
<p> <strong>获取地址信息失败</strong><br> <img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/03/5cf4b1bfc125a51857.png"></p>
</blockquote>
<h3 id="HTTPError异常"><a href="#HTTPError异常" class="headerlink" title="HTTPError异常"></a>HTTPError异常</h3><p>再看下HTTPError异常，代码如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import urllib.request as res</span><br><span class="line">import urllib.error as uer</span><br><span class="line">#一个不存在的页面</span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;www.douyu.com&#x2F;ykp.html&quot;</span><br><span class="line">req &#x3D; res.Request(url)</span><br><span class="line">try:</span><br><span class="line">    response &#x3D; res.urlopen(req)</span><br><span class="line">except uer.HTTPError as e:</span><br><span class="line">    print(e.code)</span><br></pre></td></tr></table></figure>
<p>运行之后，我们可以看到404，这说明请求的资源没有在服务器上找到，<a href="http://www.douyu.com/">www.douyu.com</a> 这个服务器是存在的，但是我们要查找的ykp.html资源是没有的，所以抛出404异常。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/03/5cf4b440c730c96658.png"></p>
<h3 id="URLError和HTTPError混合使用"><a href="#URLError和HTTPError混合使用" class="headerlink" title="URLError和HTTPError混合使用"></a>URLError和HTTPError混合使用</h3><p><strong>有一点需要注意：</strong></p>
<p>如果想用HTTPError和URLError一起捕获异常，那么需要将HTTPError放在URLError的前面，因为HTTPError是URLError的一个子类。如果URLError放在前面，出现HTTP异常会先响应URLError，这样HTTPError就捕获不到错误信息了。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/03/5cf4b69e468f547608.png"><br>如果不用上面的方法，也可以使用hasattr函数判断URLError含有的属性，如果含有reason属性表明是URLError，如果含有code属性表明是HTTPError。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import urllib.request as res</span><br><span class="line">import urllib.error as uer</span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;www.douyu.com&#x2F;ykp.html&quot;</span><br><span class="line">req &#x3D; res.Request(url)</span><br><span class="line">try:</span><br><span class="line">    response &#x3D; res.urlopen(req)</span><br><span class="line">except uer.URLError as e:</span><br><span class="line">    if hasattr(e,&#39;code&#39;):</span><br><span class="line">        print(&quot;HTTPError&quot;)</span><br><span class="line">        print(e.code)</span><br><span class="line">    elif hasattr(e,&#39;reason&#39;):</span><br><span class="line">        print(&quot;URLError&quot;)</span><br><span class="line">        print(e.reason)</span><br></pre></td></tr></table></figure>
<p>运行结果：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/03/5cf4b81e5a64215238.png"></p>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>用了三篇文章的内容写urllib这个库，基本使用方式就差不多就这样，如果还想深入的学习这个库可自行查看<a href="https://docs.python.org/3/library/urllib.html">官方文档</a>  下次我们就开始学习其他的爬虫库了</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫实例(二)--爬取猫眼电影最受期待排行榜</title>
    <url>/2019/ec8f6773.html</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>这次使用的还是requests+beautifulsoup这两个库，方法也可之前 <a href="http://t.cn/AiNB2OYu">爬取酷狗TOP500音乐信息</a>一样，分析链接，然后分析网页结构。抓取电影的  排名，片名，上映时间，主演</p>
<h3 id="分析链接"><a href="#分析链接" class="headerlink" title="分析链接"></a>分析链接</h3><p><a href="https://maoyan.com/board/6">https://maoyan.com/board/6</a> 这个链接就是猫眼最受期待电影排行榜，这个跟酷狗不一样这个有翻页，可以很快的观察出每一的链接，一共5页。</p>
<p>我们可以先点击第二页观察连接：<a href="https://maoyan.com/board/6?offset=10">https://maoyan.com/board/6?offset=10</a>    ，发现多了一个 ?offset=10 我们继续点击第三页观察链接：<a href="https://maoyan.com/board/6?offset=20">https://maoyan.com/board/6?offset=20</a>     ，发现链接的?offset=10变成的?offset=20</p>
<a id="more"></a>
<p>在点击第一页 观察链接：<a href="https://maoyan.com/board/6?offset=0">https://maoyan.com/board/6?offset=0</a>   ，可以看到?offset=0  可以总结出  每点击下一页offset的值增加10，总共有5页，所以我们总共有5个链接，每页有10个电影，总共50个电影</p>
<h3 id="分析网页结构"><a href="#分析网页结构" class="headerlink" title="分析网页结构"></a>分析网页结构</h3><p>回到第一页，打开审查元素，选中第一个电影。可以看到10个dd的标签，每个标签里面都对应一部电影的信息<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/19/5d0a50809e73074722.png"><br>打开第一个dd标签，可以看到 片名，片名，主演和上映时间等信息：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/19/5d0a5173488fe11254.png"></p>
<p>以获取排名举例，其他信息都是一样的操作<br>选中排名的 <strong>i</strong> 标签，右键–&gt; copy–&gt; copy selector,可以得到一串代码，我们就需要利用beautifulsoup通过这串代码定位到排名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#app &gt; div &gt; div &gt; div.main &gt; dl &gt; dd:nth-child(1) &gt; i</span><br></pre></td></tr></table></figure>
<p>copy下来的只是对应这一个电影的排名，我们需要获取到所有排名，所以我们需要将复制的代码修改如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#app &gt; div &gt; div &gt; div.main &gt; dl &gt; dd &gt; i</span><br></pre></td></tr></table></figure>
<p>这样就可以获取当前页所有电影的排名</p>
<p>其他信息也是相同的操作，选中对应的标签，右键–&gt; copy–&gt; copy selector 然后删除dd后面的 <code>:nth-child(1)</code>  这几个字符</p>
<p>完整代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">Headers &#x3D; &#123;</span><br><span class="line">&#39;User-Agent&#39;: &#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;70.0.3538.67 Safari&#x2F;537.36&#39;</span><br><span class="line">&#125;</span><br><span class="line">def get_info(url):</span><br><span class="line">    response &#x3D; requests.get(url,headers &#x3D; Headers)</span><br><span class="line">    soup &#x3D; BeautifulSoup(response.text,&#39;lxml&#39;)</span><br><span class="line">    ranks &#x3D; soup.select(&quot;#app &gt; div &gt; div &gt; div.main &gt; dl &gt; dd &gt; i&quot;)</span><br><span class="line">    titles &#x3D; soup.select(&quot;#app &gt; div &gt; div &gt; div.main &gt; dl &gt; dd &gt; div &gt; div &gt; div.movie-item-info &gt; p.name &gt; a&quot;)</span><br><span class="line">    stars &#x3D; soup.select(&quot;#app &gt; div &gt; div &gt; div.main &gt; dl &gt; dd &gt; div &gt; div &gt; div.movie-item-info &gt; p.star&quot;)</span><br><span class="line">    times &#x3D; soup.select(&quot;#app &gt; div &gt; div &gt; div.main &gt; dl &gt; dd &gt; div &gt; div &gt; div.movie-item-info &gt; p.releasetime&quot;)</span><br><span class="line">    wants &#x3D; soup.select(&quot;#app &gt; div &gt; div &gt; div.main &gt; dl &gt; dd &gt; div &gt; div &gt; div.movie-item-number.wish &gt; p.month-wish &gt; span &gt; span&quot;)</span><br><span class="line">    for rank,title,star,time,want in zip(ranks,titles,stars,times,wants):</span><br><span class="line">        print(&quot;排名：&quot; + rank.text.strip()+&quot;----&quot;+&quot;片名：&quot; +title.text.strip()+&quot;-----&quot;+star.text.strip()+&quot;----&quot;+time.text.strip())</span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    #生成对应的5个页面的链接</span><br><span class="line">    urls &#x3D; [&#39;https:&#x2F;&#x2F;maoyan.com&#x2F;board&#x2F;6?offset&#x3D;&#123;&#125;&#39; .format(offset*10)for offset in range(6)]</span><br><span class="line">    for url in urls:</span><br><span class="line">        get_info(url)</span><br></pre></td></tr></table></figure>
<p>结果：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/19/5d0a54c7949b260142.gif"></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫(二)-用urllib实现百度翻译</title>
    <url>/2019/175951a3.html</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>上一篇内容，已经学会了使用简单的语句对网页进行抓取。接下来，详细看下urlopen的两个重要参数url和data，学习如何发送数据data。我们想做一个百度翻译就需要向百度翻译的服务器发送我们想要翻译的内容。</p>
<p>上一篇我们说过 urllib有几个默认的参数，出了几个默认的参数外 出了url 这次我需要用到一个data</p>
<blockquote>
<p>urllib.request.urlopen(url, data=None, [timeout, ]*, cafile=None, capath=None, cadefault=False, context=None)</p>
</blockquote>
<h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/02/5cf2a35f6234d44513.gif"></p>
<a id="more"></a>
<h3 id="urlopen的url参数"><a href="#urlopen的url参数" class="headerlink" title="urlopen的url参数"></a>urlopen的url参数</h3><p> url不仅可以是一个字符串，例如:<a href="http://www.baidu.com/">http://www.baidu.com</a> url也可以是一个Request对象.</p>
<p> urlopen()返回的对象，除了<code>read()</code>方法外，还有<code>geturl()</code>方法、<code>info()</code>方法、<code>getcode()</code>方法。、</p>
<blockquote>
<p><code>geturl()</code>：返回的是一个url的字符串；<br><code>info()</code>：返回的是一些meta标记的元信息，包括一些服务器的信息；<br><code>getcode()</code>：返回的是HTTP的状态码，如果返回200表示请求成功。</p>
</blockquote>
<h3 id="urlopen的data参数"><a href="#urlopen的data参数" class="headerlink" title="urlopen的data参数"></a>urlopen的data参数</h3><p>我们可以使用data向服务器发送数据，我们这篇要制作的百度翻译就通过data向百度翻译的服务器发送数据，然后或去百度翻译服务器返回的结果。最终将显示出来。<br>data参数有自己的格式，它是一个基于application/x-<a href="http://www.form-urlencoded的格式,具体格式我们不用了解,/">www.form-urlencoded的格式，具体格式我们不用了解，</a> 因为我们可以使用urllib.parse.urlencode()函数将字符串自动转换成上面所说的格式。</p>
<h3 id="制作百度翻译"><a href="#制作百度翻译" class="headerlink" title="制作百度翻译"></a>制作百度翻译</h3><p>首先使用 Chrome 浏览器打开 <a href="https://fanyi.baidu.com/">百度翻译</a>，这里，我们选择 Chrome 浏览器自带的开发者工具对网站进行抓包分析<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/01/5cf29b69261f959885.png"></p>
<h5 id="1-抓包分析"><a href="#1-抓包分析" class="headerlink" title="1. 抓包分析"></a>1. 抓包分析</h5><p>打开 Network 选项卡进行监控，并选择 XHR 作为 Filter 进行过滤</p>
<p>然后，我们在输入框中输入待翻译的文字进行测试，可以看到如下图红色框中的内容</p>
<p>我们主要分析 sug  但是下面有好多sug我们要查看哪一个呢，之所以有这么多sug是因为百度翻译默认开启的是实施翻译，也就是你输入一个字你在打拼音的是时候每按下一个字母他就会翻译一次，直到这个后我们就可以知道，最后一个sug就是我们完整的文字。<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/01/5cf29d16beffb10286.png"><br>我们可以验证一下 点击最下面的那个sug，我们可以看到下图红色框框的内容就是我们请求的URL。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/01/5cf29e8be3eda32405.png"><br>滚到最下面我们可以看到我们输入的翻译内容  “你好”，这个For Data就是发送到百度翻译服务器的内容，然后服务器会返回对应的翻译给带浏览器，最后显示在浏览器上给我们看。<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/01/5cf29f0ce583975949.png"></p>
<p>我们还可看到一个 request Headers 中有一个：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user-agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;74.0.3729.131 Safari&#x2F;537.36</span><br></pre></td></tr></table></figure>
<p>这个user-agent的意思是告诉服务器我使用谷歌浏览器访问的，有些网站会有反爬虫，如果发现你是爬虫访问的就会阻止你，我们只要加上这个user-agent就可以让服务器以为我们是用户通过浏览器访问的<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/01/5cf29fd536d1f79229.png"><br>记住上面三个数据，下面我们就要用到。<br>直接上完整代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line">import urllib.parse</span><br><span class="line">import json</span><br><span class="line"># 请求的网址</span><br><span class="line">Request_URL &#x3D; &quot;https:&#x2F;&#x2F;fanyi.baidu.com&#x2F;sug&quot;</span><br><span class="line">while True:</span><br><span class="line">    text &#x3D; input(&quot;翻译内容&quot;)</span><br><span class="line">    #表单数据（需要翻译的内容）</span><br><span class="line">    Form_Data &#x3D; &#123;</span><br><span class="line">            &quot;kw&quot;: text</span><br><span class="line">        &#125;</span><br><span class="line">    #创建一个User-Agent</span><br><span class="line">    head &#x3D; &#123;&quot;User-Agent&quot;:&quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;74.0.3729.131 Safari&#x2F;537.36&quot;&#125;</span><br><span class="line">   #使用urlencode方法转换标准格式</span><br><span class="line">    data &#x3D; urllib.parse.urlencode(Form_Data).encode(&#39;utf-8&#39;)</span><br><span class="line">    # 构造请求对象</span><br><span class="line">    req &#x3D; urllib.request.Request(Request_URL,data,head)</span><br><span class="line">	# 发送请求，获得响应</span><br><span class="line">    req &#x3D; urllib.request.urlopen(req)</span><br><span class="line">	# 获取服务器响应数据</span><br><span class="line">    req_data &#x3D; req.read().decode(&quot;utf-8&quot;)</span><br><span class="line">    #使用json解析数据</span><br><span class="line">    html &#x3D; json.loads(req_data)</span><br><span class="line">	#找到想要的结果</span><br><span class="line">    results &#x3D; html[&#39;data&#39;][0][&#39;v&#39;]</span><br><span class="line">    #打印结果</span><br><span class="line">    print(results)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/02/5cf2a35f6234d44513.gif"><br>如果还想要具体一点的结果可以使用 正则或者 <code>split()</code>方法 这里就不详细说明了。</p>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>如果还想增加一点难度，可以试一试<a href="http://fanyi.youdao.com/">有道翻译</a> 方法类似，有兴趣的话可以自己尝试一下。</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>构造函数与this关键字</title>
    <url>/2019/d660badb.html</url>
    <content><![CDATA[<h1 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h1><ul>
<li>在开发中经常需要在创建对象的同时明确对象的属性值，比如员工入职公司就要明确他的姓名、年龄等属性信息</li>
<li>那么，创建对象就要明确属性值，那怎么解决呢？也就是在创建对象的时候就要做的事情，当使用new关键字创建对象时，怎么给对象的属性初始化值呢？这就要学习Java另外一门小技术，构造方法</li>
<li>那什么是构造方法呢？从字面上理解即为构建创造时用的方法，即就是对象创建时要执行的方法。既然是对象创建时要执行的方法，那么只要在new对象时，知道其执行的构造方法是什么，就可以在执行这个方法的时候给对象进行属性赋值</li>
</ul>
<h2 id="构造方法格式"><a href="#构造方法格式" class="headerlink" title="构造方法格式"></a>构造方法格式</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">修饰符 构造方法名(参数列表)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="构造方法的体现"><a href="#构造方法的体现" class="headerlink" title="构造方法的体现"></a>构造方法的体现</h2><ul>
<li>构造方法没有返回值类型。也不需要写返回值。因为它是为构建对象的，对象创建完，方法就执行结束</li>
<li>构造方法名称必须和类型保持一致</li>
<li>构造方法没有具体的返回值</li>
</ul>
<h2 id="构造方法的代码体现"><a href="#构造方法的代码体现" class="headerlink" title="构造方法的代码体现"></a>构造方法的代码体现</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Person &#123;</span><br><span class="line">        &#x2F;&#x2F; Person的成员属性age和name</span><br><span class="line">        int age;</span><br><span class="line">        String name;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; Person的构造方法，拥有参数列表</span><br><span class="line">        Person(int age, String name) &#123;</span><br><span class="line">	        &#x2F;&#x2F; 接受到创建对象时传递进来的值，将值赋给成员属性</span><br><span class="line">	        this.age &#x3D; age;</span><br><span class="line">	        this.name &#x3D; name;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        public void speak() &#123;</span><br><span class="line">	        System.out.println(&quot;name&#x3D;&quot; + name + &quot;,age&#x3D;&quot; + age);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h1 id="this-关键字"><a href="#this-关键字" class="headerlink" title="this 关键字"></a>this 关键字</h1><ul>
<li>this 代表使用者</li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>启动redis报错Creating Server TCP listening socket 127.0.0.1_6379_ bind_ No error</title>
    <url>/2019/b62f15c9.html</url>
    <content><![CDATA[<h3 id="启动redis"><a href="#启动redis" class="headerlink" title="启动redis"></a>启动redis</h3><p>1.启动服务：<code>redis-server.exe redis.windows.conf2</code>.<br>新开cmd窗口：<code>redis-cli</code><br>如果报错<code>Creating Server TCP listening socket 127.0.0.1:6379: bind: No error</code><br>分别输入：</p>
<pre><code>redis-cli.exe
shutdown  
exit
redis-server.exe redis.windows.conf</code></pre>
<a id="more"></a>
<p>如果输入 shutdown 报错：<code>(error) NOAUTH Authentication required.</code><br>说明没有用密码链接：<br>    请输入： <code>AUTH &quot;password&quot;</code> </p>
<p>查看reids内容</p>
<pre><code>kyes *</code></pre>
<p><strong>启动关闭redis</strong><br>启动服务：<code>redis-server --service-start</code><br>停止服务：<code>redis-server --service-stop</code><br>安装redis相关的库</p>
<pre><code>pip install django-redis
pip install django-redis-sessions</code></pre>
<p>在setting中配置redis缓存session</p>
<pre><code>SESSION_ENGINE = &#39;redis_sessions.session&#39;
SESSION_REDIS = &#123;
    &#39;host&#39;: &#39;localhost&#39;,
    &#39;port&#39;: 6379,
    &#39;db&#39;: 0,
    &#39;password&#39;: &#39;123456&#39;,
    &#39;prefix&#39;: &#39;session&#39;,
    &#39;socket_timeout&#39;: 10&#125;</code></pre>
]]></content>
      <categories>
        <category>centos7</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>struts2入门例子登录demo</title>
    <url>/2020/e6d89b39.html</url>
    <content><![CDATA[<p>1.下载所需的jar包<br>下载地址：<a href="https://struts.apache.org/download.cgi#struts25101">https://struts.apache.org/download.cgi#struts25101</a><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/22/GFVYjInhaiRHocf.jpg"></p>
<p>下载完后解压，在lid文件夹里面找以下这几个jar包，基本功能就只需要这些:<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/22/znC1gIx3QtNGqy8.jpg"></p>
<p>复制这些jar包到你新建的web项目WebContent/WEB-INF/lib下</p>
<p>右击你的web项目如图：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/22/zoieM8CPXKyWxhR.jpg"></p>
<p>在WEB-INF/lib目录下有你刚才复制过来的jar包</p>
<p>全部选中点击OK，jar就全部导入进来了</p>
<p>接下来就开始下代码了</p>
<p>配置web.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;web-app xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot; xmlns&#x3D;&quot;http:&#x2F;&#x2F;java.sun.com&#x2F;xml&#x2F;ns&#x2F;javaee&quot; xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;java.sun.com&#x2F;xml&#x2F;ns&#x2F;javaee http:&#x2F;&#x2F;java.sun.com&#x2F;xml&#x2F;ns&#x2F;javaee&#x2F;web-app_3_0.xsd&quot; id&#x3D;&quot;WebApp_ID&quot; version&#x3D;&quot;3.0&quot;&gt;</span><br><span class="line">    &lt;welcome-file-list&gt; </span><br><span class="line">    &lt;welcome-file&gt;index.jsp&lt;&#x2F;welcome-file&gt; </span><br><span class="line">  &lt;&#x2F;welcome-file-list&gt;</span><br><span class="line">  &lt;filter&gt; </span><br><span class="line">    &lt;filter-name&gt;struts2&lt;&#x2F;filter-name&gt; </span><br><span class="line">    &lt;filter-class&gt;org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter&lt;&#x2F;filter-class&gt; </span><br><span class="line">  &lt;&#x2F;filter&gt; </span><br><span class="line">  &lt;filter-mapping&gt; </span><br><span class="line">    &lt;filter-name&gt;struts2&lt;&#x2F;filter-name&gt; </span><br><span class="line">    &lt;url-pattern&gt;&#x2F;*&lt;&#x2F;url-pattern&gt; </span><br><span class="line">  &lt;&#x2F;filter-mapping&gt;</span><br><span class="line"> </span><br><span class="line">&lt;&#x2F;web-app&gt;</span><br></pre></td></tr></table></figure>

<p>写DemoLog.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.strtus2.action;</span><br><span class="line"> </span><br><span class="line">import com.opensymphony.xwork2.Action;</span><br><span class="line"> </span><br><span class="line">public class DemoLog implements Action &#123;</span><br><span class="line">   private String uname;</span><br><span class="line">   private String upass;</span><br><span class="line">	@Override</span><br><span class="line">	public String execute() throws Exception &#123;</span><br><span class="line">		System.out.println(&quot;姓名：&quot;+uname);</span><br><span class="line">		System.out.println(&quot;密码：&quot;+upass);</span><br><span class="line">		if(uname.equals(&quot;ykp&quot;)&amp;&amp;upass.equals(&quot;123&quot;))&#123;</span><br><span class="line">			</span><br><span class="line">			return SUCCESS;</span><br><span class="line">		&#125;</span><br><span class="line">		return &quot;error&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getUname() &#123;</span><br><span class="line">		return uname;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setUname(String uname) &#123;</span><br><span class="line">		this.uname &#x3D; uname;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getUpass() &#123;</span><br><span class="line">		return upass;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setUpass(String upass) &#123;</span><br><span class="line">		this.upass &#x3D; upass;</span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>struts.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt; </span><br><span class="line">&lt;!DOCTYPE struts PUBLIC &quot;-&#x2F;&#x2F;Apache Software Foundation&#x2F;&#x2F;DTD Struts Configuration 2.0&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;struts.apache.org&#x2F;dtds&#x2F;struts-2.0.dtd&quot; &gt;</span><br><span class="line">&lt;struts&gt;</span><br><span class="line">	&lt;package name&#x3D;&quot;default&quot; namespace&#x3D;&quot;&#x2F;&quot; extends&#x3D;&quot;struts-default&quot;&gt;</span><br><span class="line">		&lt;action name&#x3D;&quot;login&quot; class&#x3D;&quot;com.strtus2.action.DemoLog&quot;&gt;</span><br><span class="line">			&lt;result name&#x3D;&quot;success&quot;&gt;&#x2F;Helloworld.jsp&lt;&#x2F;result&gt;</span><br><span class="line">			&lt;result name&#x3D;&quot;error&quot;&gt;&#x2F;error.jsp&lt;&#x2F;result&gt;</span><br><span class="line">		&lt;&#x2F;action&gt;</span><br><span class="line">	&lt;&#x2F;package&gt;</span><br><span class="line">&lt;&#x2F;struts&gt;</span><br></pre></td></tr></table></figure>

<p>三个jsp文件<br>error.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;utf-8&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;utf-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD HTML 4.01 Transitional&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html4&#x2F;loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;登陆出错&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>Helloword.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;utf-8&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;utf-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD HTML 4.01 Transitional&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html4&#x2F;loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"> </span><br><span class="line">&lt;h1&gt;Hello Strtus2！！！！你好&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>


<p>index.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;utf-8&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;utf-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD HTML 4.01 Transitional&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html4&#x2F;loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;login&quot;&gt; </span><br><span class="line">      用户名:&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;uname&quot;&gt;&lt;br&gt; </span><br><span class="line">      密 码:&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;upass&quot;&gt;&lt;br&gt; </span><br><span class="line">      &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;登陆&quot; &#x2F;&gt; </span><br><span class="line">    &lt;&#x2F;form&gt; </span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>
<p>现在基本完成了 可以运行了!</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>struts2</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云centos服务器配置mysql与Navicat for MySQL远程连接</title>
    <url>/2019/6c7383ad.html</url>
    <content><![CDATA[<p><strong>1.下载mysql：</strong></p>
<pre><code>输入命令：wget [http://dev.mysql.com/get/mysql80-community-release-el7-1.noarch.rpm](http://dev.mysql.com/get/mysql80-community-release-el7-1.noarch.rpm)</code></pre>
<p><strong>2. 安装mysql rpm包：</strong></p>
<pre><code>输入命令：yum localinstall mysql80-community-release-el7-1.noarch.rpm</code></pre>
<a id="more"></a>
<p>看到安装MySQL8.0安装完成后可到/etc/yum.repos.d/目录下看到：</p>
<pre><code> mysql-community.repo
 mysql-community-source.repo</code></pre>
<p><strong>3. 安装MySQL：</strong></p>
<pre><code>yum install mysql-community-server</code></pre>
<p>等待安装成功  安装成功后会随机给一个密码 </p>
<p><strong>4.查看随机密码：</strong></p>
<p><strong>输入命令：</strong></p>
<pre><code>sudo grep &#39;temporary password&#39; /var/log/mysqld.log</code></pre>
<p>记住你的随机密码修改密码要用到<br>随机密码是一串随机字符穿  符号字母数字可能都有</p>
<p><strong>5.修改密码</strong></p>
<p>   登陆mysql输入下面的命令:</p>
<pre><code>mysql -uroot -p</code></pre>
<p>然后输入你的mysql登录密码 </p>
<p>2.开始修改： </p>
<p><strong>注意</strong>: MySQL8.0修改密码需要有大小写字母、数字、特殊字符组合 </p>
<p>输入修改命令： </p>
<pre><code>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;你的新密码&#39;;</code></pre>
<p>以上就是修改数据库密码</p>
<p>还有一种方法可以去除密码效验强度：</p>
<p>临时办法可以去除密码强度校验（不过下次登录又得用一遍，好处是不需要重启）输入下面命令即可：</p>
<pre><code>set global validate_password_policy=0;</code></pre>
<p>完成后就是设置简单的密码了！</p>
<p><strong>远程链接阿里云服务器数据库</strong></p>
<p>我使用的是使用Navicat for MySQL</p>
<p>正常情况如下</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/4vICOjEdasxiumD.png"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/lvhkXwCof37tS1M.png"></p>
<p><strong>我遇到的错误</strong></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/KazrBFuc582nkvm.png"></p>
<p><strong>我的解决方法：</strong></p>
<p><strong>方法一：</strong></p>
<p>执行命令：</p>
<pre><code>cat /etc/ssh/sshd_config
vi  /etc/ssh/sshd_config</code></pre>
<p>将：PasswordAuthentication 的默认值为 yes</p>
<pre><code>PermitRootLogin 设置 yes
AllowTcpForwarding 设置 yes</code></pre>
<p>去点前面的#号</p>
<pre><code>执行完重启： service sshd restart</code></pre>
<p><strong>方法二：</strong></p>
<p><strong>1.查看sshd是否正确在运行</strong> </p>
<pre><code>netstat -anp| grep sshd</code></pre>
<p><strong>2.如果没有运行使用 service sshd restart 重启服务</strong> 对我无效 我的显示正常运行</p>
<p><strong>方法三：</strong></p>
<p><strong>1. 查看本机是否安装SSH软件包</strong> </p>
<pre><code>执行：rpm -qa | grep ssh</code></pre>
<p>如果现实下面这些说明安装成功了：</p>
<pre><code>openssh-server-6.6.1p1-12.el7_1.x86_64 
openssh-clients-6.6.1p1-12.el7_1.x86_64 
libssh2-1.4.3-8.el7.x86_64 
openssh-6.6.1p1-12.el7_1.x86_64</code></pre>
<p>如果没有 需要安装：</p>
<pre><code>yum install openssh-server</code></pre>
<p><strong>2. 开启 SSH 服务</strong></p>
<pre><code>执行：service sshd start</code></pre>
<p>看到下面这句话说明你成功了</p>
<pre><code>Redirecting to /bin/systemctl start sshd.service</code></pre>
<p>查看TCP 22端口是否打开</p>
<pre><code>netstat -ntpl | grep 22 </code></pre>
<p>看下面这句说明打开了</p>
<pre><code> tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN 17816/sshd</code></pre>
<p>还有方法说  mysql授权的问题但是 对我没用：</p>
<p>Mysql授权可参考<a href="http://www.jb51.net/article/42441.htm">http://www.jb51.net/article/42441.htm</a><br>对我无用</p>
<p>以上都对我无效 但是错误变了</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/Pwty5LkulDp6vIj.png"></p>
<p><strong>参数 PasswordAuthentication 的默认值为 yes，SSH服务将其值置为 no 以禁用密码验证登录，导致此类故障。需要修改 PasswordAuthentication 配置解决此问题。执行命令：cat /etc/ssh/sshd_config  执行完重启服务器</strong></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/11/14/iN8MRIhgYVl71tq.png">** </p>
<p>OK！  解决了！</p>
]]></content>
      <categories>
        <category>centos7</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>哈哈哈哈哈！！</title>
    <url>/2019/1260caaa.html</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">您好, 这里需要密码.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="37ee889f9517696d35605c251d044706e226e62bc874c2fb64c894cb39d8c345">5e3957a17dd6d424483d8fa10d343c3d152c54e533fece45aef30fb882fb52ae2f702ccb94a4b535c3dbc3ac3bf667dd4a410bf93700ea5f9933d90f1d6dd56b60165a18bb900027f23301e49000af3c74bf31a2c478949670f50be78ed6f472d3887437ec0af41b31f5135ed5d3ddb50f5c11fb678ede52c0bd7cb4e221b7d6866a08d83c8f502519800d0c18ba62b8de2096f15ff5f08f723e740ec1c69916ba4299c2b4fe64398629034bc8debfe74639086e62a047328bab7e1a6f7444538d86e531a9fd5e4a66876a60199a2c4123e4deba34e09edf9e772ca2b41f17d3130772874eede3391c2b23f66eed45628f6ec1158464836b6d32423fd77f46a06a93005a8521f35a3ced995cba3c4302acef486dc829938e28d54e02eb4acff43adb485e3fc4645e26895882ae7c61493a65dc5bca3ac63f4eb9ded5ff548c51d483ec2e8b0516ee3a97a6cf3b23d6d51330780e5acebc71f9e4d4494607daa88a16bca59042efef229839f9c9a274c6f66d2bc7dbbdf72360225ade670d089ea60c3fad18806cdbfe2a9b83cd4bf59d9b15084e4eadb0fbf5ce8c484e735f3bd22498836ce6c41e3c252bbc18bfef58ad731406efad8f4f7b896ef4c9cfdf9e85d493584e70fac25de211cfd4358536a8c87a7b4878e36e3aca47da7173fd2f7627043be5398d2dc9d21ebbc834d8ced8903f524e33a5c9106d805ffee99f6556a1d1eacb629e342f3672dd11b05c2475c1a4811a0d13ad2c655a0546f9aab469d6ed7b7e3983ac1d6c1c4a061566cc4bb573b66fa815e2f48fa109b7d0116cb7fd56b003bd61df5003d1460d577c4708d6570227c7f1235c82308e8c6c36a36f7608c0a1bd7077ce385dd9b32f155c952a08bfa78e0fba175ae61412b8aa74b92bfb30fe80d513adb7ea71852f2608d46eaf4e003e137aabd3ccad6c968cfd7beb2c352fb64430df9a671cceb2ad7d764bea81830b1d745d818895363201b6e55ec898f4405b29459e219465ee6174f45b27eb41df5bf6118e36e7320cefb67c198e1d94a93539de37d8037f5105a05517e0778baf00e02ef6f1ae15b20d4af9bacec393c5309f30db17b10bdf96e51c9a991caf1d5de2a1a4969da8f71c1e290977bbb25d6e31b8953565a70395cdfc1c6ad060caaed4f755bbcb9e3bc142f599960406f2446ad46f30d76ad8b58695a14f72658190ecd547309ea0d67b3aba0bcc31efcd697fc22a6977bb7129842d374cd192f557c4c4ef01d8920e073d243cc4b755bd4f52a3c62a4fd161cc67e22420aaddc279c5001c94290db354d8c8b7c17eb1422fdbabc9595642f666c878a1a87ab302eb66eba8a31503aaea491cd9e2d68ae25b24378e34e894cf60a13d17f06541cba7799a9c72cd360e312c5a9cf76ec8aaf7590ce3a4eec4e4f4d94c020ab4b068cd58476e551f4c9f6a3a2637306e93fa929394190c7eea57a7c220d6226fa8b6a35f165bee2df28a96a81440b8c0025313c4211d41e46c5a3915e3e84ea73c0cdac337135586930eba657c40971267cb540ba18cf9dcc130a3ff637fa932c2a63ea43e872adbbe8dae3315fcdcf3d3682600b2566d6a1499c8da62a298bded141c45298bb1978d32d1956a7c6036ab4d20dc53d5b023685f8dc7970d92973aac3e82c6b23c67c0055246b346d05fa6f232eba8885861dc6186037827e9b13e9e5b0160906e489767fc4abd2246d48bc6d9da8924c4d47cbb3b96e948f8facd43e3b638002ee62bf6d6cc7089858948d6da40f3a85c9ce840ec226a07c13aacdedbe5cc348b9b96d63db4425cc46836bc8bccb10b949b2b0b74e22344f8ec856718ddc898083751fa3993af0c106a7471922e059ca888d2a7f907f18715ebc9249b2b7d29258656dbf30dbfba4ba26e3a62bfd226f22b592b98887c475da9fb7dc027593e401ac9962df542ee1405f8f32950869b2c51382c06995779a79c55d494bac61fbb041034bbead3cd82184d4eb9c6fe74cfc7da8bee6d00eb06afdb9dbfb8e25f9c6160b7313cea3c983f373980ec6b1153cc44c5c32a05be100d696216b60905c28acffcfd36d2b3c5ecfe178f83976df7118abcc0b81881f50c3f96a0a4d421e726e3276786f18eb667fa55a9788be18804eb979d288454521705568923961f8b0cf5c174ce6acf6405a6db9909a0ba2b5e71b35e15b377988f128c4cf8d561aeb34a74f1f0e90221eb7fb09b7f1875fc9c49af7a04a266a6a61c8910a0effabb1b54297ce9b3264d0596fcca415647c01972466db25fbb48e309be56ad3ebfeaec365622034eeb4ad9fe1d617d196e187dca9bfc0dd664a6b6096458a9c8edb5c93bab739162f8f4bdf7c4145bfd29941436a74e590ced175eee84a6dbb77d90e65e2d642ef7174f2510a6a3b145ddd707ffdb8f93eb5ef8787132ed2699915ce48d681157899b3866e60b19c313e06fb4e0fac1e90efe7416c8ea616a5ce017178357f0df22034a5d22b2ede123d3ee6e0bc7bc1426cb1156c3d8a426e6720a3ee298f587ae27adfaa2a468b813b3ab49559f0f098074addc84400ba07268bb6538ade964cd383c8d710ec58604a2033fc7b2fcd83e77ebe49cda2bb97768e74a0453038491f2816e04fd168cb9f6ca1a76fac5d25bb80b7731e847433c5f1a0a632fb9494e2271add9161952e6a437fe09b8400d</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>python3爬虫(五)--requests库的基本使用</title>
    <url>/2019/dc79fa45.html</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>前面几篇学习了，urllib的这个库，这个库用起来有点麻烦，发送请求，添加header等等，这篇来介绍下requests这个库，Requests是用python语言基于urllib编写的，采用的是Apache2 Licensed开源协议的HTTP库，Requests它会比urllib更加方便，可以节约我们大量的工作。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install requests</span><br></pre></td></tr></table></figure>
<h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>先看一个简单的小例子，来看看requests的威力</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">r &#x3D; requests.get(&#39;http:www.baidu.com&#39;)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure>
<p>这样就可以把百度的首页源码给抓 下来，对你没看错，就这几行代码。是不是比urllib方便多了。又方便又简单。<br>r是我们请求返回的一个response的一个对象</p>
<a id="more"></a>
<h3 id="requests库的方法"><a href="#requests库的方法" class="headerlink" title="requests库的方法"></a>requests库的方法</h3><p>requests的库主要有以下7个方法</p>
<p>|  方法| 解释 |<br>|–|–|–|<br>|requests.request()  | 构造一个请求，支持以下各种方法|<br>|requests.get()|获取html的主要方法|<br>|requests.head()|获取html头部信息的主要方法|<br>|requests.post()|向html网页提交post请求的方法|<br>|equests.put()|向html网页提交put请求的方法|<br>|equests.patch()|向html提交局部修改的请求|<br>|requests.delete()|向html提交删除请求|</p>
<h4 id="requests-get-方法"><a href="#requests-get-方法" class="headerlink" title="requests.get()方法"></a>requests.get()方法</h4><p>这个方法是我们平时最常用的方法之一，通过这个方法我们可以了解到其他的方法，所以我们详细介绍这个方法。<br>具体参数是：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">r&#x3D;requests.get(url,params,**kwargs)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>url:就是需要爬取的网站地址<br>params: 就是参数的意思，url中的参数，字典或者字节流格式。<br><strong>kwargs: 关键字参数，params中传的字典类型<br>**看看</strong> <strong>**kwargs:</strong></p>
</blockquote>
<p><strong>params</strong>：字典或字节序列， 作为参数增加到url中,使用这个参数可以把一些键值对以?key1=value1&amp;key2=value2的模式增加到url中<br>例子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kw &#x3D; &#123;&#39;key1&#39;:&#39; values&#39;, &#39;key2&#39;: &#39;values&#39;&#125;</span><br><span class="line">r &#x3D; requests.get(&#39;http:&#x2F;&#x2F;www.baidu.com&#39;, params&#x3D;kw)</span><br></pre></td></tr></table></figure>
<p>其中response对象有以下属性：</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>r.status_code</td>
<td>http请求的返回状态，若为200则表示请求成功。</td>
</tr>
<tr>
<td>r.text</td>
<td>http响应内容的字符串形式，即返回的页面内容</td>
</tr>
<tr>
<td>r.encoding</td>
<td>从http header 中猜测的相应内容编码方式</td>
</tr>
<tr>
<td>r.apparent_encoding</td>
<td>从内容中分析出的响应内容编码方式（备选编码方式）</td>
</tr>
<tr>
<td>r.content</td>
<td>http响应内容的二进制形式</td>
</tr>
</tbody></table>
<h3 id="带参数的get请求"><a href="#带参数的get请求" class="headerlink" title="带参数的get请求"></a>带参数的get请求</h3><p>开篇说了一个简单的get请求，现在来看看带参数的get请求是怎样的。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">url &#x3D; &#39;http:&#x2F;&#x2F;httpbin.org&#x2F;get&#39;</span><br><span class="line">data &#x3D; &#123;</span><br><span class="line">    &#39;name&#39;: &#39;lisi&#39;,</span><br><span class="line">    &#39;age&#39;: &#39;18&#39;</span><br><span class="line">&#125;</span><br><span class="line">r &#x3D; requests.get(url,params&#x3D;data)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure>
<p>可以看到返回的结果中，带有我们的参数。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;args&quot;: &#123;</span><br><span class="line">    &quot;age&quot;: &quot;18&quot;, </span><br><span class="line">    &quot;name&quot;: &quot;lisi&quot;</span><br><span class="line">  &#125;, </span><br><span class="line">  &quot;headers&quot;: &#123;</span><br><span class="line">    &quot;Accept&quot;: &quot;*&#x2F;*&quot;, </span><br><span class="line">    &quot;Accept-Encoding&quot;: &quot;gzip, deflate&quot;, </span><br><span class="line">    &quot;Host&quot;: &quot;httpbin.org&quot;, </span><br><span class="line">    &quot;User-Agent&quot;: &quot;python-requests&#x2F;2.20.0&quot;</span><br><span class="line">  &#125;, </span><br><span class="line">  &quot;origin&quot;: &quot;61.140.125.81, 61.140.125.81&quot;, </span><br><span class="line">  &quot;url&quot;: &quot;https:&#x2F;&#x2F;httpbin.org&#x2F;get?name&#x3D;lisi&amp;age&#x3D;18&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Json数据"><a href="#Json数据" class="headerlink" title="Json数据"></a>Json数据</h3><p>在requests中 <code>requests.json()</code>等同于 <code>json.loads(requests.text)</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import json</span><br><span class="line">url &#x3D; &#39;http:&#x2F;&#x2F;httpbin.org&#x2F;get&#39;</span><br><span class="line">requests&#x3D; requests.get(url)</span><br><span class="line">print(type(requests.text))</span><br><span class="line">print(requests.json())</span><br><span class="line">print(json.loads(requests.text))</span><br><span class="line">print(type(requests.json()))</span><br></pre></td></tr></table></figure>
<p>结果：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/06/05/5cf7e449189c038502.png"></p>
<h3 id="获取二进制数据"><a href="#获取二进制数据" class="headerlink" title="获取二进制数据"></a>获取二进制数据</h3><p>在上面提到了response.content，这样获取的数据是二进制数据，同样的这个方法也可以用于下载图片以及视频资源</p>
<h3 id="添加header"><a href="#添加header" class="headerlink" title="添加header"></a>添加header</h3><p>在讲urlib时有说过为什么要添加header，现在来看看，requests中如何添加header</p>
<p>以知乎为例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">url &#x3D; &#39;https:&#x2F;&#x2F;www.zhihu.com&#39;</span><br><span class="line">r &#x3D; requests.get(url)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure>
<p>结果：可以看到400的提示，不添加header连接知乎的登陆界面也抓不下来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;400 Bad Request&lt;&#x2F;title&gt;&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body bgcolor&#x3D;&quot;white&quot;&gt;</span><br><span class="line">&lt;center&gt;&lt;h1&gt;400 Bad Request&lt;&#x2F;h1&gt;&lt;&#x2F;center&gt;</span><br><span class="line">&lt;hr&gt;&lt;center&gt;openresty&lt;&#x2F;center&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>如果想访问就必须得加headers信息。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">headers &#x3D; &#123;</span><br><span class="line">    &#39;User-Agent&#39;:&#39;Mozilla&#x2F;5.0 (Windows NT 10.0; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;57.0.2987.133 Safari&#x2F;537.36&#39;</span><br><span class="line">&#125;</span><br><span class="line">url &#x3D; &#39;https:&#x2F;&#x2F;www.zhihu.com&#39;</span><br><span class="line">r &#x3D; requests.get(url,headers&#x3D;headers)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure>
<p>结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;zh&quot; data-hairline&#x3D;&quot;true&quot; data-theme&#x3D;&quot;light&quot;&gt;&lt;head&gt;&lt;meta charSet&#x3D;&quot;utf-8&quot;&#x2F;&gt;&lt;title data-react-helmet&#x3D;&quot;true&quot;&gt;知乎 - 有问题，上知乎&lt;&#x2F;title&gt;&lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width,initial-scale&#x3D;1,maximum-scale&#x3D;1&quot;&#x2F;&gt;&lt;meta name&#x3D;&quot;renderer&quot; content&#x3D;&quot;webkit&quot;&#x2F;&gt;&lt;meta name&#x3D;&quot;force-rendering&quot; content&#x3D;&quot;webkit&quot;&#x2F;&gt;&lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge,chrome&#x3D;1&quot;&#x2F;&gt;&lt;meta name&#x3D;&quot;google-site-verification&quot; content&#x3D;&quot;FTeR0c8arOPKh8c5DYh_9uu98_zJbaWw53J-Sch9MTg&quot;&#x2F;&gt;&lt;meta name&#x3D;&quot;description&quot; property&#x3D;&quot;og:description&quot; content&#x3D;&quot;有问题，上知乎。知乎，可信赖的问答社区，以让每个人高效获得可信赖的解答为使命。知乎凭借认真、专业和友善的社区氛围，结构化、易获得的优质内容，基于问答的内容生产方式和独特的社区机制，吸引、聚集了各行各业中大量的亲历者、内行人、领域专家、领域爱好者，将高质量的内容透过人的节点来成规模地生产和分享。用户通过问答等交流方式建立信任和连接，打造和提升个人影响力，并发现、获得新机会。&quot;&#x2F;&gt;&lt;link rel&#x3D;&quot;shortcut icon&quot; type&#x3D;&quot;image&#x2F;x-icon&quot; href&#x3D;&quot;https:&#x2F;&#x2F;static.zhihu.com&#x2F;static&#x2F;favicon.ico&quot;&#x2F;&gt;&lt;link rel&#x3D;&quot;search&quot; type&#x3D;&quot;application&#x2F;opensearchdescription+xml&quot; href&#x3D;&quot;https:&#x2F;&#x2F;static.zhihu.com&#x2F;static&#x2F;search.xml&quot; title&#x3D;&quot;知乎&quot;&#x2F;&gt;&lt;link rel&#x3D;&quot;dns-prefetch&quot; href&#x3D;&quot;&#x2F;&#x2F;static.zhimg.com&quot;&#x2F;&gt;&lt;link rel&#x3D;&quot;dns-prefetch&quot; href&#x3D;&quot;&#x2F;&#x2F;pic1.zhimg.com&quot;&#x2F;&gt;&lt;link rel&#x3D;&quot;dns-prefetch&quot; href&#x3D;&quot;&#x2F;&#x2F;pic2.zhimg.com&quot;&#x2F;&gt;&lt;link rel&#x3D;&quot;dns-prefetch&quot; href&#x3D;&quot;&#x2F;&#x2F;pic3.zhimg.com&quot;&#x2F;&gt;&lt;link rel&#x3D;&quot;dns-prefetch&quot; href&#x3D;&quot;&#x2F;&#x2F;pic4.zhimg.com&quot;&#x2F;&gt;&lt;link href&#x3D;&quot;https:&#x2F;&#x2F;static.zhihu.com&#x2F;heifetz&#x2F;app.e65e6e8cef2b2b961232.css&quot; rel&#x3D;&quot;stylesheet&quot;&#x2F;&gt;&lt;link rel&#x3D;&quot;stylesheet&quot;&#x2F;&gt;&lt;script defer&#x3D;&quot;&quot; crossorigin&#x3D;&quot;anonymous&quot; src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.zhimg.com&#x2F;@cfe&#x2F;sentry-script@latest&#x2F;dist&#x2F;init.js&quot; data-sentry-config&#x3D;&quot;&#123;&quot;dsn&quot;:&quot;https:&#x2F;&#x2F;65e244586890460588f00f2987137aa8@crash2.zhihu.com&#x2F;193&quot;,&quot;sampleRate&quot;:0.1,&quot;release&quot;:&quot;1641-a5f80cef&quot;,&quot;ignoreErrorNames&quot;:[&quot;NetworkError&quot;,&quot;SecurityError&quot;],&quot;ignoreErrors&quot;:[&quot;origin message&quot;,&quot;Network request failed&quot;,&quot;Loading chunk&quot;,&quot;这个系统不支持该功能。&quot;,&quot;Can&amp;#x27;t find variable: webkit&quot;,&quot;Can&amp;#x27;t find variable: $&quot;,&quot;内存不足&quot;,&quot;out of memory&quot;,&quot;DOM Exception 18&quot;,&quot;The operation is insecure&quot;,&quot;[object Event]&quot;,&quot;[object FileError]&quot;,&quot;[object DOMError]&quot;,&quot;[object Object]&quot;,&quot;拒绝访问。&quot;,&quot;Maximum call stack size exceeded&quot;,&quot;UploadError&quot;,&quot;无法 fetch&quot;,&quot;draft-js&quot;,&quot;缺少 JavaScript 对象&quot;,&quot;componentWillEnter&quot;,&quot;componentWillLeave&quot;,&quot;componentWillAppear&quot;,&quot;getInlineStyleAt&quot;,&quot;getCharacterList&quot;],&quot;whitelistUrls&quot;:[&quot;static.zhihu.com&quot;]&#125;&quot;&gt;&lt;&#x2F;script&gt;&lt;&#x2F;head&gt;&lt;body class&#x3D;&quot;EntrySign-body&quot;&gt;&lt;div id&#x3D;&quot;root&quot;&gt;&lt;div data-zop-usertoken&#x3D;&quot;&#123;&#125;&quot; data-reactroot&#x3D;&quot;&quot;&gt;&lt;div class&#x3D;&quot;LoadingBar&quot;&gt;&lt;&#x2F;div&gt;&lt;div&gt;&lt;header role&#x3D;&quot;banner&quot; class&#x3D;&quot;Sticky AppHeader&quot; data-za-module&#x3D;&quot;TopNavBar&quot;&gt;&lt;div class&#x3D;&quot;AppHeader-inner&quot;&gt;&lt;a href&#x3D;&quot;&#x2F;&#x2F;www.zhihu.com&quot; aria-label&#x3D;&quot;知乎&quot;&gt;&lt;svg viewBox&#x3D;&quot;0 0 200 91&quot; class&#x3D;&quot;Icon ZhihuLogo ZhihuLogo--blue Icon--logo&quot; style&#x3D;&quot;height:30px;width:64px&quot; width&#x3D;&quot;64&quot; height&#x3D;&quot;30&quot; aria-hidden&#x3D;&quot;true&quot;&gt;&lt;title&gt;&lt;&#x2F;title&gt;&lt;g&gt;&lt;path d&#x3D;&quot;M53.29 80.035l7.32.002 2.41 8.24 13.128-8.24h15.477v-67.98H53.29v67.978zm7.79-60.598h22.756v53.22h-8.73l-8.718 5.473-1.587-5.46-3.72-.012v-53.22zM46.818 43.162h-16.35c.545-8.467.687-16.12.687-22.955h15.987s.615-7.05-2.68-6.97H16.807c1.09-4.1 2.46-8.332 4.1-12.708 0 0-7.523 0-10.085 6.74-1.06 2.78-4.128 13.48-9.592 24.41 1.84-.2 7.927-.37 11.512-6.94.66-1.84.785-2.08 1.605-4.54h9.02c0 3.28-.374 20.9-.526 22.95H6.51c-3.67 0-4.863 7.38-4.863 7.38H22.14C20.765 66.11 13.385 79.24 0 89.62c6.403 1.828 12.784-.29 15.937-3.094 0 0 7.182-6.53 11.12-21.64L43.92 85.18s2.473-8.402-.388-12.496c-2.37-2.788-8.768-10.33-11.496-13.064l-4.57 3.627c1.363-4.368 2.183-8.61 2.46-12.71H49.19s-.027-7.38-2.372-7.38zm128.752-.502c6.51-8.013 14.054-18.302 14.054-18.302s-5.827-4.625-8.556-1.27c-1.874 2.548-11.51 15.063-11.51 15.063l6.012 4.51zm-46.903-18.462c-2.814-2.577-8.096.667-8.096.667s12.35 17.2 12.85 17.953l6.08-4.29s-8.02-11.752-10.83-14.33zM199.99 46.5c-6.18 0-40.908.292-40.953.292v-31.56c1.503 0 3.882-.124 7.14-.376 12.773-.753 21.914-1.25 27.427-1.504 0 0 3.817-8.496-.185-10.45-.96-.37-7.24 1.43-7.24 1.43s-51.63 5.153-72.61 5.64c.5 2.756 2.38 5.336 4.93 6.11 4.16 1.087 7.09.53 15.36.277 7.76-.5 13.65-.76 17.66-.76v31.19h-41.71s.88 6.97 7.97 7.14h33.73v22.16c0 4.364-3.498 6.87-7.65 6.6-4.4.034-8.15-.36-13.027-.566.623 1.24 1.977 4.496 6.035 6.824 3.087 1.502 5.054 2.053 8.13 2.053 9.237 0 14.27-5.4 14.027-14.16V53.93h38.235c3.026 0 2.72-7.432 2.72-7.432z&quot; fill-rule&#x3D;&quot;evenodd&quot;&#x2F;&gt;&lt;&#x2F;g&gt;&lt;&#x2F;svg&gt;&lt;&#x2F;a&gt;&lt;ul role&#x3D;&quot;navigation&quot; class&#x3D;&quot;Tabs AppHeader-Tabs&quot;&gt;&lt;li role&#x3D;&quot;tab&quot; class&#x3D;&quot;Tabs-item AppHeader-Tab Tabs-item--noMeta&quot;&gt;&lt;a class&#x3D;&quot;Tabs-link AppHeader-TabsLink&quot; href&#x3D;&quot;&#x2F;&#x2F;www.zhihu.com&#x2F;&quot; data-za-not-track-link&#x3D;&quot;true&quot;&gt;首页&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;&lt;li role&#x3D;&quot;tab&quot; class&#x3D;&quot;Tabs-item AppHeader-Tab Tabs-item--noMeta&quot;&gt;&lt;a class&#x3D;&quot;Tabs-link AppHeader-TabsLink&quot; href&#x3D;&quot;&#x2F;&#x2F;www.zhihu.com&#x2F;explore&quot; data-za-not-track-link&#x3D;&quot;true&quot;&gt;发现&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;&lt;li role&#x3D;&quot;tab&quot; class&#x3D;&quot;Tabs-item AppHeader-Tab Tabs-item--noMeta&quot;&gt;&lt;a class&#x3D;&quot;Tabs-link AppHeader-TabsLink&quot; href&#x3D;&quot;&#x2F;&#x2F;www.zhihu.com&#x2F;topic&quot; data-za-not-track-link&#x3D;&quot;true&quot;&gt;话题&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;div class&#x3D;&quot;SearchBar&quot; role&#x3D;&quot;search&quot; data-za-module&#x3D;&quot;PresetWordItem&quot;&gt;&lt;div class&#x3D;&quot;SearchBar-toolWrapper&quot;&gt;&lt;form class&#x3D;&quot;SearchBar-tool&quot;&gt;&lt;div&gt;&lt;div class&#x3D;&quot;Popover&quot;&gt;&lt;div class&#x3D;&quot;SearchBar-input Input-wrapper Input-wrapper--grey&quot;&gt;&lt;input type&#x3D;&quot;text&quot; maxLength&#x3D;&quot;100&quot; value&#x3D;&quot;&quot; autoComplete&#x3D;&quot;off&quot; role&#x3D;&quot;combobox&quot; aria-expanded&#x3D;&quot;false&quot; aria-autocomplete&#x3D;&quot;list&quot; aria-activedescendant&#x3D;&quot;null--1&quot; id&#x3D;&quot;null-toggle&quot; aria-haspopup&#x3D;&quot;true&quot; aria-owns&#x3D;&quot;null-content&quot; class&#x3D;&quot;Input&quot; placeholder&#x3D;&quot;&quot;&#x2F;&gt;&lt;div class&#x3D;&quot;Input-after&quot;&gt;&lt;button aria-label&#x3D;&quot;搜索&quot; type&#x3D;&quot;button&quot; class&#x3D;&quot;Button SearchBar-searchIcon Button--primary&quot;&gt;&lt;span style&#x3D;&quot;display:inline-flex;align-items:center&quot;&gt;​&lt;svg class&#x3D;&quot;Zi Zi--Search&quot; fill&#x3D;&quot;currentColor&quot; viewBox&#x3D;&quot;0 0 24 24&quot; width&#x3D;&quot;18&quot; height&#x3D;&quot;18&quot;&gt;&lt;path d&#x3D;&quot;M17.068 15.58a8.377 8.377 0 0 0 1.774-5.159 8.421 8.421 0 1 0-8.42 8.421 8.38 8.38 0 0 0 5.158-1.774l3.879 3.88c.957.573 2.131-.464 1.488-1.49l-3.879-3.878zm-6.647 1.157a6.323 6.323 0 0 1-6.316-6.316 6.323 6.323 0 0 1 6.316-6.316 6.323 6.323 0 0 1 6.316 6.316 6.323 6.323 0 0 1-6.316 6.316z&quot; fill-rule&#x3D;&quot;evenodd&quot;&gt;&lt;&#x2F;path&gt;&lt;&#x2F;svg&gt;&lt;&#x2F;span&gt;&lt;&#x2F;button&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;form&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;AppHeader-userInfo&quot;&gt;&lt;div class&#x3D;&quot;AppHeader-profile&quot;&gt;&lt;div&gt;&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;Button AppHeader-login Button--blue&quot;&gt;登录&lt;&#x2F;button&gt;&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;Button Button--primary Button--blue&quot;&gt;加入知乎&lt;&#x2F;button&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;header&gt;&lt;&#x2F;div&gt;&lt;main role&#x3D;&quot;main&quot; class&#x3D;&quot;App-main&quot;&gt;&lt;div class&#x3D;&quot;SignFlowHomepage&quot;&gt;&lt;div class&#x3D;&quot;SignFlowHomepage-content&quot;&gt;&lt;div class&#x3D;&quot;Card SignContainer-content&quot;&gt;&lt;div class&#x3D;&quot;SignFlowHeader&quot; style&#x3D;&quot;padding-bottom:5px&quot;&gt;&lt;svg viewBox&#x3D;&quot;0 0 200 91&quot; class&#x3D;&quot;Icon ZhihuLogo ZhihuLogo--blue Icon--logo&quot; style&#x3D;&quot;height:65.625px;width:140px&quot; width&#x3D;&quot;140&quot; height&#x3D;&quot;65.625&quot; aria-hidden&#x3D;&quot;true&quot;&gt;&lt;title&gt;&lt;&#x2F;title&gt;&lt;g&gt;&lt;path d&#x3D;&quot;M53.29 80.035l7.32.002 2.41 8.24 13.128-8.24h15.477v-67.98H53.29v67.978zm7.79-60.598h22.756v53.22h-8.73l-8.718 5.473-1.587-5.46-3.72-.012v-53.22zM46.818 43.162h-16.35c.545-8.467.687-16.12.687-22.955h15.987s.615-7.05-2.68-6.97H16.807c1.09-4.1 2.46-8.332 4.1-12.708 0 0-7.523 0-10.085 6.74-1.06 2.78-4.128 13.48-9.592 24.41 1.84-.2 7.927-.37 11.512-6.94.66-1.84.785-2.08 1.605-4.54h9.02c0 3.28-.374 20.9-.526 22.95H6.51c-3.67 0-4.863 7.38-4.863 7.38H22.14C20.765 66.11 13.385 79.24 0 89.62c6.403 1.828 12.784-.29 15.937-3.094 0 0 7.182-6.53 11.12-21.64L43.92 85.18s2.473-8.402-.388-12.496c-2.37-2.788-8.768-10.33-11.496-13.064l-4.57 3.627c1.363-4.368 2.183-8.61 2.46-12.71H49.19s-.027-7.38-2.372-7.38zm128.752-.502c6.51-8.013 14.054-18.302 14.054-18.302s-5.827-4.625-8.556-1.27c-1.874 2.548-11.51 15.063-11.51 15.063l6.012 4.51zm-46.903-18.462c-2.814-2.577-8.096.667-8.096.667s12.35 17.2 12.85 17.953l6.08-4.29s-8.02-11.752-10.83-14.33zM199.99 46.5c-6.18 0-40.908.292-40.953.292v-31.56c1.503 0 3.882-.124 7.14-.376 12.773-.753 21.914-1.25 27.427-1.504 0 0 3.817-8.496-.185-10.45-.96-.37-7.24 1.43-7.24 1.43s-51.63 5.153-72.61 5.64c.5 2.756 2.38 5.336 4.93 6.11 4.16 1.087 7.09.53 15.36.277 7.76-.5 13.65-.76 17.66-.76v31.19h-41.71s.88 6.97 7.97 7.14h33.73v22.16c0 4.364-3.498 6.87-7.65 6.6-4.4.034-8.15-.36-13.027-.566.623 1.24 1.977 4.496 6.035 6.824 3.087 1.502 5.054 2.053 8.13 2.053 9.237 0 14.27-5.4 14.027-14.16V53.93h38.235c3.026 0 2.72-7.432 2.72-7.432z&quot; fill-rule&#x3D;&quot;evenodd&quot;&#x2F;&gt;&lt;&#x2F;g&gt;&lt;&#x2F;svg&gt;&lt;div class&#x3D;&quot;SignFlowHeader-slogen&quot;&gt;注册&lt;!-- --&gt;知乎，发现更多可信赖的解答&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;SignContainer-inner&quot;&gt;&lt;div class&#x3D;&quot;Register&quot;&gt;&lt;div class&#x3D;&quot;Register-content&quot;&gt;&lt;form novalidate&#x3D;&quot;&quot;&gt;&lt;div class&#x3D;&quot;SignFlow-account&quot;&gt;&lt;div class&#x3D;&quot;SignFlow-supportedCountriesSelectContainer&quot;&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;SignFlowInput SignFlow-accountInputContainer&quot;&gt;&lt;div class&#x3D;&quot;SignFlow-accountInput Input-wrapper&quot;&gt;&lt;input type&#x3D;&quot;tel&quot; value&#x3D;&quot;&quot; name&#x3D;&quot;phoneNo&quot; class&#x3D;&quot;Input&quot; placeholder&#x3D;&quot;手机号&quot;&#x2F;&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;SignFlowInput-errorMask SignFlowInput-requiredErrorMask SignFlowInput-errorMask--hidden&quot;&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;Captcha SignFlow-captchaContainer Register-captcha&quot; style&#x3D;&quot;width:0;height:0;opacity:0;overflow:hidden;margin:0;padding:0;border:0&quot;&gt;&lt;div&gt;&lt;div class&#x3D;&quot;SignFlowInput&quot;&gt;&lt;div class&#x3D;&quot;Input-wrapper&quot;&gt;&lt;input type&#x3D;&quot;text&quot; value&#x3D;&quot;&quot; name&#x3D;&quot;captcha&quot; tabindex&#x3D;&quot;-1&quot; class&#x3D;&quot;Input&quot; placeholder&#x3D;&quot;验证码&quot;&#x2F;&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;SignFlowInput-errorMask SignFlowInput-requiredErrorMask SignFlowInput-errorMask--hidden&quot;&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;span class&#x3D;&quot;Captcha-englishImage&quot;&gt;&lt;div class&#x3D;&quot;Captcha-englishContainer&quot;&gt;&lt;img data-tooltip&#x3D;&quot;看不清楚？换一张&quot; class&#x3D;&quot;Captcha-englishImg&quot; src&#x3D;&quot;data:image&#x2F;jpg;base64,null&quot; alt&#x3D;&quot;图形验证码&quot;&#x2F;&gt;&lt;&#x2F;div&gt;&lt;&#x2F;span&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;Register-SMSInput&quot;&gt;&lt;div class&#x3D;&quot;SignFlow SignFlow-smsInputContainer&quot;&gt;&lt;div class&#x3D;&quot;SignFlowInput SignFlow-smsInput&quot;&gt;&lt;div class&#x3D;&quot;Input-wrapper&quot;&gt;&lt;input type&#x3D;&quot;number&quot; value&#x3D;&quot;&quot; name&#x3D;&quot;digits&quot; class&#x3D;&quot;Input&quot; placeholder&#x3D;&quot;输入 6 位短信验证码&quot;&#x2F;&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;SignFlowInput-errorMask SignFlowInput-requiredErrorMask SignFlowInput-errorMask--hidden&quot;&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;Button CountingDownButton SignFlow-smsInputButton Button--plain&quot;&gt;获取短信验证码&lt;&#x2F;button&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;Register-smsBackUp&quot;&gt;&lt;span&gt;接收&lt;!-- --&gt;语音&lt;!-- --&gt;验证码&lt;&#x2F;span&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;button type&#x3D;&quot;submit&quot; class&#x3D;&quot;Button Register-submitButton Button--primary Button--blue&quot;&gt;注册&lt;&#x2F;button&gt;&lt;&#x2F;form&gt;&lt;div class&#x3D;&quot;Register-footer&quot;&gt;&lt;span class&#x3D;&quot;Register-declaration&quot;&gt;注册即代表同意&lt;a href&#x3D;&quot;&#x2F;&#x2F;www.zhihu.com&#x2F;terms&quot;&gt;《知乎协议》&lt;&#x2F;a&gt;&lt;a href&#x3D;&quot;&#x2F;&#x2F;www.zhihu.com&#x2F;term&#x2F;privacy&quot;&gt;《隐私保护指引》&lt;&#x2F;a&gt;&lt;&#x2F;span&gt;&lt;a class&#x3D;&quot;Register-org&quot; href&#x3D;&quot;&#x2F;&#x2F;www.zhihu.com&#x2F;org&#x2F;signup&quot;&gt;注册机构号&lt;&#x2F;a&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;SignContainer-switch&quot;&gt;已有帐号？&lt;span&gt;登录&lt;&#x2F;span&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;SignFlowHomepage-qrImage SignFlowHomepage-qrImageHidden&quot;&gt;&lt;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;Button SignFlowHomepage-downloadBtn&quot;&gt;下载知乎 App&lt;&#x2F;button&gt;&lt;&#x2F;div&gt;&lt;footer class&#x3D;&quot;SignFlowHomepage-footer&quot;&gt;&lt;div class&#x3D;&quot;ZhihuLinks&quot;&gt;&lt;a target&#x3D;&quot;_blank&quot; rel&#x3D;&quot;noopener noreferrer&quot; href&#x3D;&quot;https:&#x2F;&#x2F;zhuanlan.zhihu.com&quot;&gt;知乎专栏&lt;&#x2F;a&gt;&lt;a target&#x3D;&quot;_blank&quot; rel&#x3D;&quot;noopener noreferrer&quot; href&#x3D;&quot;&#x2F;roundtable&quot;&gt;圆桌&lt;&#x2F;a&gt;&lt;a target&#x3D;&quot;_blank&quot; rel&#x3D;&quot;noopener noreferrer&quot; href&#x3D;&quot;&#x2F;explore&quot;&gt;发现&lt;&#x2F;a&gt;&lt;a target&#x3D;&quot;_blank&quot; rel&#x3D;&quot;noopener noreferrer&quot; href&#x3D;&quot;&#x2F;app&quot;&gt;移动应用&lt;&#x2F;a&gt;&lt;a target&#x3D;&quot;_blank&quot; rel&#x3D;&quot;noopener noreferrer&quot; href&#x3D;&quot;&#x2F;contact&quot;&gt;联系我们&lt;&#x2F;a&gt;&lt;a target&#x3D;&quot;_blank&quot; rel&#x3D;&quot;noopener noreferrer&quot; href&#x3D;&quot;https:&#x2F;&#x2F;app.mokahr.com&#x2F;apply&#x2F;zhihu&quot;&gt;来知乎工作&lt;&#x2F;a&gt;&lt;a target&#x3D;&quot;_blank&quot; rel&#x3D;&quot;noopener noreferrer&quot; href&#x3D;&quot;&#x2F;org&#x2F;signup&quot;&gt;注册机构号&lt;&#x2F;a&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;ZhihuRights&quot;&gt;&lt;span&gt;© &lt;!-- --&gt;2019&lt;!-- --&gt; 知乎&lt;&#x2F;span&gt;&lt;a target&#x3D;&quot;_blank&quot; rel&#x3D;&quot;noopener noreferrer&quot; href&#x3D;&quot;http:&#x2F;&#x2F;www.miibeian.gov.cn&#x2F;&quot;&gt;京 ICP 证 110745 号&lt;&#x2F;a&gt;&lt;span&gt;京公网安备 11010802010035 号&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;zhstatic.zhihu.com&#x2F;assets&#x2F;zhihu&#x2F;publish-license.jpg&quot; target&#x3D;&quot;_blank&quot; rel&#x3D;&quot;noopener noreferrer&quot;&gt;出版物经营许可证&lt;&#x2F;a&gt;&lt;&#x2F;span&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;ZhihuReports&quot;&gt;&lt;a target&#x3D;&quot;_blank&quot; rel&#x3D;&quot;noopener noreferrer&quot; href&#x3D;&quot;https:&#x2F;&#x2F;zhuanlan.zhihu.com&#x2F;p&#x2F;51068775&quot;&gt;侵权举报&lt;&#x2F;a&gt;&lt;a target&#x3D;&quot;_blank&quot; rel&#x3D;&quot;noopener noreferrer&quot; href&#x3D;&quot;http:&#x2F;&#x2F;www.12377.cn&quot;&gt;网上有害信息举报专区&lt;&#x2F;a&gt;&lt;a target&#x3D;&quot;_blank&quot; rel&#x3D;&quot;noopener noreferrer&quot; href&#x3D;&quot;&#x2F;jubao&quot;&gt;儿童色情信息举报专区&lt;&#x2F;a&gt;&lt;span&gt;违法和不良信息举报：010-82716601&lt;&#x2F;span&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;ZhihuIntegrity&quot;&gt;&lt;div&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;static.zhihu.com&#x2F;static&#x2F;revved&#x2F;img&#x2F;index&#x2F;chengxing_logo@2x.65dc76e8.png&quot; alt&#x3D;&quot;诚信网站示范企业&quot;&#x2F;&gt;&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;credit.szfw.org&#x2F;CX20170607038331320388.html&quot;&gt;诚信网站示范企业&lt;&#x2F;a&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;footer&gt;&lt;&#x2F;div&gt;&lt;&#x2F;main&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;script id&#x3D;&quot;js-clientConfig&quot; type&#x3D;&quot;text&#x2F;json&quot;&gt;&#123;&quot;host&quot;:&quot;zhihu.com&quot;,&quot;protocol&quot;:&quot;https:&quot;,&quot;wwwHost&quot;:&quot;www.zhihu.com&quot;,&quot;zhuanlanHost&quot;:&quot;zhuanlan.zhihu.com&quot;&#125;&lt;&#x2F;script&gt;&lt;script id&#x3D;&quot;js-initialData&quot; type&#x3D;&quot;text&#x2F;json&quot;&gt;&#123;&quot;initialState&quot;:&#123;&quot;common&quot;:&#123;&quot;ask&quot;:&#123;&#125;&#125;,&quot;loading&quot;:&#123;&quot;global&quot;:&#123;&quot;count&quot;:0&#125;,&quot;local&quot;:&#123;&#125;&#125;,&quot;entities&quot;:&#123;&quot;users&quot;:&#123;&#125;,&quot;questions&quot;:&#123;&#125;,&quot;answers&quot;:&#123;&#125;,&quot;articles&quot;:&#123;&#125;,&quot;columns&quot;:&#123;&#125;,&quot;topics&quot;:&#123;&#125;,&quot;roundtables&quot;:&#123;&#125;,&quot;favlists&quot;:&#123;&#125;,&quot;comments&quot;:&#123;&#125;,&quot;notifications&quot;:&#123;&#125;,&quot;ebooks&quot;:&#123;&#125;,&quot;activities&quot;:&#123;&#125;,&quot;feeds&quot;:&#123;&#125;,&quot;pins&quot;:&#123;&#125;,&quot;promotions&quot;:&#123;&#125;,&quot;drafts&quot;:&#123;&#125;,&quot;chats&quot;:&#123;&#125;&#125;,&quot;currentUser&quot;:&quot;&quot;,&quot;account&quot;:&#123;&quot;lockLevel&quot;:&#123;&#125;,&quot;unlockTicketStatus&quot;:false,&quot;unlockTicket&quot;:null,&quot;challenge&quot;:[],&quot;errorStatus&quot;:false,&quot;message&quot;:&quot;&quot;,&quot;isFetching&quot;:false,&quot;accountInfo&quot;:&#123;&#125;,&quot;urlToken&quot;:&#123;&quot;loading&quot;:false&#125;&#125;,&quot;settings&quot;:&#123;&quot;socialBind&quot;:null,&quot;inboxMsg&quot;:null,&quot;notification&quot;:&#123;&#125;,&quot;email&quot;:&#123;&#125;,&quot;privacyFlag&quot;:null,&quot;blockedUsers&quot;:&#123;&quot;isFetching&quot;:false,&quot;paging&quot;:&#123;&quot;pageNo&quot;:1,&quot;pageSize&quot;:6&#125;,&quot;data&quot;:[]&#125;,&quot;blockedFollowees&quot;:&#123;&quot;isFetching&quot;:false,&quot;paging&quot;:&#123;&quot;pageNo&quot;:1,&quot;pageSize&quot;:6&#125;,&quot;data&quot;:[]&#125;,&quot;ignoredTopics&quot;:&#123;&quot;isFetching&quot;:false,&quot;paging&quot;:&#123;&quot;pageNo&quot;:1,&quot;pageSize&quot;:6&#125;,&quot;data&quot;:[]&#125;,&quot;restrictedTopics&quot;:null,&quot;laboratory&quot;:&#123;&#125;&#125;,&quot;notification&quot;:&#123;&#125;,&quot;people&quot;:&#123;&quot;profileStatus&quot;:&#123;&#125;,&quot;activitiesByUser&quot;:&#123;&#125;,&quot;answersByUser&quot;:&#123;&#125;,&quot;answersSortByVotesByUser&quot;:&#123;&#125;,&quot;answersIncludedByUser&quot;:&#123;&#125;,&quot;votedAnswersByUser&quot;:&#123;&#125;,&quot;thankedAnswersByUser&quot;:&#123;&#125;,&quot;voteAnswersByUser&quot;:&#123;&#125;,&quot;thankAnswersByUser&quot;:&#123;&#125;,&quot;topicAnswersByUser&quot;:&#123;&#125;,&quot;articlesByUser&quot;:&#123;&#125;,&quot;articlesSortByVotesByUser&quot;:&#123;&#125;,&quot;articlesIncludedByUser&quot;:&#123;&#125;,&quot;pinsByUser&quot;:&#123;&#125;,&quot;questionsByUser&quot;:&#123;&#125;,&quot;commercialQuestionsByUser&quot;:&#123;&#125;,&quot;favlistsByUser&quot;:&#123;&#125;,&quot;followingByUser&quot;:&#123;&#125;,&quot;followersByUser&quot;:&#123;&#125;,&quot;mutualsByUser&quot;:&#123;&#125;,&quot;followingColumnsByUser&quot;:&#123;&#125;,&quot;followingQuestionsByUser&quot;:&#123;&#125;,&quot;followingFavlistsByUser&quot;:&#123;&#125;,&quot;followingTopicsByUser&quot;:&#123;&#125;,&quot;publicationsByUser&quot;:&#123;&#125;,&quot;columnsByUser&quot;:&#123;&#125;,&quot;allFavlistsByUser&quot;:&#123;&#125;,&quot;brands&quot;:null,&quot;creationsByUser&quot;:&#123;&#125;,&quot;creationsSortByVotesByUser&quot;:&#123;&#125;&#125;,&quot;env&quot;:&#123;&quot;ab&quot;:&#123;&quot;config&quot;:&#123;&quot;experiments&quot;:[&#123;&quot;expId&quot;:&quot;launch-us_foltopic_user-10&quot;,&quot;expPrefix&quot;:&quot;us_foltopic_user&quot;,&quot;isDynamicallyUpdated&quot;:true,&quot;isRuntime&quot;:false,&quot;includeTriggerInfo&quot;:false&#125;],&quot;params&quot;:[&#123;&quot;id&quot;:&quot;tp_qa_toast&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;web_column_auto_invite&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;&#125;,&#123;&quot;id&quot;:&quot;li_mceb&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_km_ad_locate&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;tp_m_intro_re_topic&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;top_universalebook&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;tp_header_style&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;ug_follow_answerer_0&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;zr_se_footer&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;pf_foltopic_usernum&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;50&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_auto_syn&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_page_limit_20&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_topicdirect&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;2&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;soc_bigone&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;top_root&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;tp_qa_metacard_top&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;top&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;ug_follow_topic_1&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;2&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;ug_goodcomment_0&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;web_answer_list_ad&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;&#125;,&#123;&quot;id&quot;:&quot;zr_album_exp&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_expired_ob&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_ri&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_search_feed&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;N&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_zu_onebox&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;top_vipconsume&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;tp_sticky_android&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;li_se_intervene&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_title_only&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_wannasearch&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_ltr_v002&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;tp_discussion_feed_type_android&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;2&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;ug_goodcomment&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;qa_web_answerlist_ad&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_colorfultab&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_ios_spb309&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;pf_fuceng&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_movietab&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_new_topic&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_likebutton&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;top_v_album&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;zr_es_update&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;web_rp_id&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;&#125;,&#123;&quot;id&quot;:&quot;li_qa_cover&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;old&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;ls_new_upload&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_famous&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;top_rank&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;top_recall_exp_v1&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_ad_index&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;10&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_p_slideshow&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_rr&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;ug_newtag&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;zr_album_chapter_exp&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;zr_km_xgb_model&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;old&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;pf_creator_card&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;qa_test&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_webtimebox&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;ug_zero_follow_0&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;li_lt_tp_score&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_webrs&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;ug_zero_follow&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_webmajorob&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;tp_sft_v2&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot; a&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;zr_km_answer&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;open_cvr&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;zr_video_rec_weight&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;close&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;li_album_liutongab&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;li_filter_ttl&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;2&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_featured&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;li_tjys_ec_ab&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_amovietab&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;zr_ans_rec&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;gbrank&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;web_question_invite&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;B&quot;&#125;,&#123;&quot;id&quot;:&quot;li_hot_score_ab&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;tp_qa_metacard&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;web_answer_update&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;&#125;,&#123;&quot;id&quot;:&quot;ls_fmp4&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_preset_tech&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;tp_top_sticky&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;zr_ebook_chapter&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;zr_rel_search&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;base&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_se_index&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_subtext&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;top_ebook&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_zu_recommend&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;top_ydyq&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;X&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;ug_fw_answ_aut_1&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;gue_new_special_page&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;&#125;,&#123;&quot;id&quot;:&quot;li_ts_sample&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;old&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;ug_follow_answerer&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;zr_art_rec&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;base&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;gue_anonymous&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;hide&quot;&#125;,&#123;&quot;id&quot;:&quot;li_album3_ab&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;top_hotcommerce&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_backsearch&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;soc_special&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;top_native_answer&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;top_quality&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;top_user_cluster&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;tp_time_information&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;web_heifetz_grow_ad&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;&#125;,&#123;&quot;id&quot;:&quot;se_lottery&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_timebox_num&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;3&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_time_threshold&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1.5&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_billboardsearch&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;web_answerlist_ad&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;&#125;,&#123;&quot;id&quot;:&quot;li_se_ebook_chapter&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;top_reason&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;tsp_lastread&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_terminate&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;soc_bignew&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;zr_km_slot_style&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;event_card&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;li_price_test&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;pf_feed&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_payconsult&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_agency&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot; 0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;soc_update&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;top_new_feed&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;5&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;li_ebook_detail&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_spb309&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;tp_meta_card&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;tsp_childbillboard&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;zr_infinity_rec_num&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;close&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_site_onebox&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;top_recall_exp_v2&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;top_test_4_liguangyi&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;top_gr_ab&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;pf_newguide_vertical&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;pf_noti_entry_num&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_rewrite3&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;top_recall_deep_user&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;1&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;tp_sft&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;a&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;qa_answerlist_ad&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_websearch&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;3&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;,&#123;&quot;id&quot;:&quot;se_whitelist&quot;,&quot;type&quot;:&quot;String&quot;,&quot;value&quot;:&quot;0&quot;,&quot;chainId&quot;:&quot;_all_&quot;&#125;],&quot;chains&quot;:[&#123;&quot;chainId&quot;:&quot;_all_&quot;&#125;]&#125;,&quot;triggers&quot;:&#123;&#125;&#125;,&quot;userAgent&quot;:&#123;&quot;Edge&quot;:false,&quot;Wechat&quot;:false,&quot;Weibo&quot;:false,&quot;QQ&quot;:false,&quot;MQQBrowser&quot;:false,&quot;Qzone&quot;:false,&quot;Mobile&quot;:false,&quot;Android&quot;:false,&quot;iOS&quot;:false,&quot;isAppleDevice&quot;:false,&quot;Zhihu&quot;:false,&quot;ZhihuHybrid&quot;:false,&quot;isBot&quot;:false,&quot;Tablet&quot;:false,&quot;UC&quot;:false,&quot;Sogou&quot;:false,&quot;Qihoo&quot;:false,&quot;Baidu&quot;:false,&quot;BaiduApp&quot;:false,&quot;Safari&quot;:false,&quot;isWebView&quot;:false,&quot;origin&quot;:&quot;Mozilla\u002F5.0 (Windows NT 10.0; WOW64) AppleWebKit\u002F537.36 (KHTML, like Gecko) Chrome\u002F57.0.2987.133 Safari\u002F537.36&quot;&#125;,&quot;ctx&quot;:&#123;&quot;path&quot;:&quot;\u002Fsignup&quot;&#125;,&quot;trafficSource&quot;:&quot;production&quot;,&quot;edition&quot;:&#123;&quot;baidu&quot;:false,&quot;sogou&quot;:false,&quot;baiduBeijing&quot;:false&#125;,&quot;theme&quot;:&quot;light&quot;,&quot;enableShortcut&quot;:true,&quot;referer&quot;:&quot;&quot;,&quot;conf&quot;:&#123;&#125;,&quot;ipInfo&quot;:&#123;&#125;,&quot;logged&quot;:false,&quot;tdkInfo&quot;:&#123;&#125;&#125;,&quot;me&quot;:&#123;&quot;accountInfoLoadStatus&quot;:&#123;&#125;,&quot;organizationProfileStatus&quot;:&#123;&#125;,&quot;columnContributions&quot;:[]&#125;,&quot;label&quot;:&#123;&quot;recognizerLists&quot;:&#123;&#125;&#125;,&quot;comments&quot;:&#123;&quot;pagination&quot;:&#123;&#125;,&quot;collapsed&quot;:&#123;&#125;,&quot;reverse&quot;:&#123;&#125;,&quot;reviewing&quot;:&#123;&#125;,&quot;conversation&quot;:&#123;&#125;,&quot;parent&quot;:&#123;&#125;&#125;,&quot;commentsV2&quot;:&#123;&quot;stickers&quot;:[],&quot;commentWithPicPermission&quot;:&#123;&#125;,&quot;notificationsComments&quot;:&#123;&#125;,&quot;pagination&quot;:&#123;&#125;,&quot;collapsed&quot;:&#123;&#125;,&quot;reverse&quot;:&#123;&#125;,&quot;reviewing&quot;:&#123;&#125;,&quot;conversation&quot;:&#123;&#125;,&quot;conversationMore&quot;:&#123;&#125;,&quot;parent&quot;:&#123;&#125;,&quot;commentV2PostErr&quot;:&#123;&#125;&#125;,&quot;pushNotifications&quot;:&#123;&quot;default&quot;:&#123;&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[]&#125;,&quot;follow&quot;:&#123;&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[]&#125;,&quot;vote_thank&quot;:&#123;&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[]&#125;,&quot;currentTab&quot;:&quot;default&quot;,&quot;notificationsCount&quot;:&#123;&quot;default&quot;:0,&quot;follow&quot;:0,&quot;vote_thank&quot;:0&#125;&#125;,&quot;messages&quot;:&#123;&quot;data&quot;:&#123;&#125;,&quot;currentTab&quot;:&quot;common&quot;,&quot;messageCount&quot;:0&#125;,&quot;register&quot;:&#123;&quot;registerValidateSucceeded&quot;:null,&quot;registerValidateErrors&quot;:&#123;&#125;,&quot;registerConfirmError&quot;:null,&quot;sendDigitsError&quot;:null,&quot;registerConfirmSucceeded&quot;:null&#125;,&quot;login&quot;:&#123;&quot;loginUnregisteredError&quot;:false,&quot;loginBindWechatError&quot;:false,&quot;loginConfirmError&quot;:null,&quot;sendDigitsError&quot;:null,&quot;validateDigitsError&quot;:false,&quot;loginConfirmSucceeded&quot;:null,&quot;qrcodeLoginToken&quot;:&quot;&quot;,&quot;qrcodeLoginScanStatus&quot;:0,&quot;qrcodeLoginError&quot;:null,&quot;qrcodeLoginReturnNewToken&quot;:false&#125;,&quot;active&quot;:&#123;&quot;sendDigitsError&quot;:null,&quot;activeConfirmSucceeded&quot;:null,&quot;activeConfirmError&quot;:null&#125;,&quot;switches&quot;:&#123;&#125;,&quot;captcha&quot;:&#123;&quot;captchaNeeded&quot;:false,&quot;captchaValidated&quot;:false,&quot;captchaBase64String&quot;:null,&quot;captchaValidationMessage&quot;:null,&quot;loginCaptchaExpires&quot;:false&#125;,&quot;sms&quot;:&#123;&quot;supportedCountries&quot;:[]&#125;,&quot;question&quot;:&#123;&quot;followers&quot;:&#123;&#125;,&quot;concernedFollowers&quot;:&#123;&#125;,&quot;answers&quot;:&#123;&#125;,&quot;hiddenAnswers&quot;:&#123;&#125;,&quot;updatedAnswers&quot;:&#123;&#125;,&quot;collapsedAnswers&quot;:&#123;&#125;,&quot;notificationAnswers&quot;:&#123;&#125;,&quot;invitationCandidates&quot;:&#123;&#125;,&quot;inviters&quot;:&#123;&#125;,&quot;invitees&quot;:&#123;&#125;,&quot;similarQuestions&quot;:&#123;&#125;,&quot;relatedCommodities&quot;:&#123;&#125;,&quot;recommendReadings&quot;:&#123;&#125;,&quot;bio&quot;:&#123;&#125;,&quot;brand&quot;:&#123;&#125;,&quot;permission&quot;:&#123;&#125;,&quot;adverts&quot;:&#123;&#125;,&quot;advancedStyle&quot;:&#123;&#125;,&quot;commonAnswerCount&quot;:0,&quot;hiddenAnswerCount&quot;:0,&quot;meta&quot;:&#123;&#125;,&quot;autoInvitation&quot;:&#123;&#125;,&quot;simpleConcernedFollowers&quot;:&#123;&#125;,&quot;draftStatus&quot;:&#123;&#125;&#125;,&quot;shareTexts&quot;:&#123;&#125;,&quot;answers&quot;:&#123;&quot;voters&quot;:&#123;&#125;,&quot;copyrightApplicants&quot;:&#123;&#125;,&quot;favlists&quot;:&#123;&#125;,&quot;newAnswer&quot;:&#123;&#125;,&quot;concernedUpvoters&quot;:&#123;&#125;,&quot;simpleConcernedUpvoters&quot;:&#123;&#125;,&quot;paidContent&quot;:&#123;&#125;&#125;,&quot;banner&quot;:&#123;&#125;,&quot;topic&quot;:&#123;&quot;bios&quot;:&#123;&#125;,&quot;hot&quot;:&#123;&#125;,&quot;newest&quot;:&#123;&#125;,&quot;top&quot;:&#123;&#125;,&quot;unanswered&quot;:&#123;&#125;,&quot;questions&quot;:&#123;&#125;,&quot;followers&quot;:&#123;&#125;,&quot;contributors&quot;:&#123;&#125;,&quot;parent&quot;:&#123;&#125;,&quot;children&quot;:&#123;&#125;,&quot;bestAnswerers&quot;:&#123;&#125;,&quot;wikiMeta&quot;:&#123;&#125;,&quot;index&quot;:&#123;&#125;,&quot;intro&quot;:&#123;&#125;,&quot;meta&quot;:&#123;&#125;,&quot;schema&quot;:&#123;&#125;,&quot;creatorWall&quot;:&#123;&#125;,&quot;wikiEditInfo&quot;:&#123;&#125;,&quot;committedWiki&quot;:&#123;&#125;&#125;,&quot;explore&quot;:&#123;&quot;recommendations&quot;:&#123;&#125;&#125;,&quot;articles&quot;:&#123;&quot;voters&quot;:&#123;&#125;&#125;,&quot;favlists&quot;:&#123;&quot;relations&quot;:&#123;&#125;&#125;,&quot;pins&quot;:&#123;&quot;voters&quot;:&#123;&#125;&#125;,&quot;topstory&quot;:&#123;&quot;topstorys&quot;:&#123;&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;afterId&quot;:0,&quot;items&quot;:[],&quot;next&quot;:null&#125;,&quot;recommend&quot;:&#123;&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;afterId&quot;:0,&quot;items&quot;:[],&quot;next&quot;:null&#125;,&quot;follow&quot;:&#123;&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;afterId&quot;:0,&quot;items&quot;:[],&quot;next&quot;:null&#125;,&quot;followWonderful&quot;:&#123;&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;afterId&quot;:0,&quot;items&quot;:[],&quot;next&quot;:null&#125;,&quot;sidebar&quot;:null,&quot;announcement&quot;:&#123;&#125;,&quot;hotList&quot;:[],&quot;guestFeeds&quot;:&#123;&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;afterId&quot;:0,&quot;items&quot;:[],&quot;next&quot;:null&#125;,&quot;followExtra&quot;:&#123;&quot;isNewUser&quot;:null,&quot;isFetched&quot;:false,&quot;followCount&quot;:0,&quot;followers&quot;:[]&#125;&#125;,&quot;upload&quot;:&#123;&#125;,&quot;video&quot;:&#123;&quot;data&quot;:&#123;&#125;,&quot;shareVideoDetail&quot;:&#123;&#125;,&quot;last&quot;:&#123;&#125;&#125;,&quot;guide&quot;:&#123;&quot;guide&quot;:&#123;&quot;isFetching&quot;:false,&quot;isShowGuide&quot;:false&#125;&#125;,&quot;reward&quot;:&#123;&quot;answer&quot;:&#123;&#125;,&quot;article&quot;:&#123;&#125;,&quot;question&quot;:&#123;&#125;&#125;,&quot;search&quot;:&#123;&quot;recommendSearch&quot;:[],&quot;topSearch&quot;:&#123;&#125;,&quot;attachedInfo&quot;:&#123;&#125;,&quot;nextOffset&quot;:&#123;&#125;,&quot;topicReview&quot;:&#123;&#125;,&quot;generalByQuery&quot;:&#123;&#125;,&quot;generalByQueryInADay&quot;:&#123;&#125;,&quot;generalByQueryInAWeek&quot;:&#123;&#125;,&quot;generalByQueryInThreeMonths&quot;:&#123;&#125;,&quot;peopleByQuery&quot;:&#123;&#125;,&quot;topicByQuery&quot;:&#123;&#125;,&quot;columnByQuery&quot;:&#123;&#125;,&quot;liveByQuery&quot;:&#123;&#125;,&quot;albumByQuery&quot;:&#123;&#125;,&quot;eBookByQuery&quot;:&#123;&#125;&#125;,&quot;creator&quot;:&#123;&quot;currentCreatorUrlToken&quot;:null,&quot;homeData&quot;:&#123;&quot;recommendQuestions&quot;:[]&#125;,&quot;tools&quot;:&#123;&quot;question&quot;:&#123;&quot;invitationCount&quot;:&#123;&quot;questionFolloweeCount&quot;:0,&quot;questionTotalCount&quot;:0&#125;,&quot;goodatTopics&quot;:[]&#125;,&quot;customPromotion&quot;:&#123;&quot;itemLists&quot;:&#123;&#125;&#125;,&quot;recommend&quot;:&#123;&quot;recommendTimes&quot;:&#123;&#125;&#125;&#125;,&quot;explore&quot;:&#123;&quot;academy&quot;:&#123;&quot;tabs&quot;:[],&quot;article&quot;:&#123;&#125;&#125;&#125;,&quot;rights&quot;:[],&quot;rightsStatus&quot;:&#123;&#125;,&quot;levelUpperLimit&quot;:10,&quot;account&quot;:&#123;&quot;growthLevel&quot;:&#123;&#125;&#125;&#125;,&quot;publicEditPermission&quot;:&#123;&#125;,&quot;readStatus&quot;:&#123;&#125;,&quot;draftHistory&quot;:&#123;&quot;history&quot;:&#123;&#125;,&quot;drafts&quot;:&#123;&#125;&#125;,&quot;chat&quot;:&#123;&quot;chats&quot;:&#123;&#125;,&quot;inbox&quot;:&#123;&quot;recents&quot;:&#123;&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;isPrevDrained&quot;:false,&quot;result&quot;:[],&quot;next&quot;:null,&quot;key&quot;:null,&quot;name&quot;:&quot;recents&quot;&#125;,&quot;strangers&quot;:&#123;&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;isPrevDrained&quot;:false,&quot;result&quot;:[],&quot;next&quot;:null,&quot;key&quot;:null,&quot;name&quot;:&quot;strangers&quot;&#125;,&quot;friends&quot;:&#123;&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;isPrevDrained&quot;:false,&quot;result&quot;:[],&quot;next&quot;:null,&quot;key&quot;:null,&quot;name&quot;:&quot;friends&quot;&#125;,&quot;config&quot;:&#123;&quot;newCount&quot;:0,&quot;strangerMessageSwitch&quot;:false,&quot;strangerMessageUnread&quot;:false&#125;&#125;&#125;,&quot;notifications&quot;:&#123;&quot;recent&quot;:&#123;&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;isPrevDrained&quot;:false,&quot;result&quot;:[],&quot;next&quot;:null,&quot;key&quot;:null&#125;,&quot;history&quot;:&#123;&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;isPrevDrained&quot;:false,&quot;result&quot;:[],&quot;next&quot;:null,&quot;key&quot;:null&#125;,&quot;notificationActors&quot;:&#123;&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;isPrevDrained&quot;:false,&quot;result&quot;:[],&quot;next&quot;:null,&quot;key&quot;:null&#125;,&quot;recentNotificationEntry&quot;:&quot;all&quot;&#125;,&quot;emoticons&quot;:&#123;&quot;emoticonGroupList&quot;:[],&quot;emoticonGroupDetail&quot;:&#123;&#125;&#125;&#125;,&quot;subAppName&quot;:&quot;main&quot;&#125;&lt;&#x2F;script&gt;&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;static.zhihu.com&#x2F;heifetz&#x2F;vendor.5a9436bdf379e6d36200.js&quot;&gt;&lt;&#x2F;script&gt;&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;static.zhihu.com&#x2F;heifetz&#x2F;main.app.e1aabdef8b6c9debdabb.js&quot;&gt;&lt;&#x2F;script&gt;&lt;script&gt;&lt;&#x2F;script&gt;&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>
<p>可以看到很轻松就讲知乎的页面给抓下来了。</p>
<h3 id="基本post请求"><a href="#基本post请求" class="headerlink" title="基本post请求"></a>基本post请求</h3><p>通过post把数据提交到url地址，等同于一字典的形式提交form表单里面的数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">url &#x3D; &#39;http:&#x2F;&#x2F;httpbin.org&#x2F;post&#39;</span><br><span class="line">data &#x3D; &#123;</span><br><span class="line">    &#39;name&#39;: &#39;zhangsan&#39;,</span><br><span class="line">    &#39;age&#39;: &#39;20&#39;</span><br><span class="line">&#125;</span><br><span class="line">r &#x3D; requests.post(url,data&#x3D;data)</span><br><span class="line">print(r.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;args&quot;: &#123;&#125;, </span><br><span class="line">  &quot;data&quot;: &quot;&quot;, </span><br><span class="line">  &quot;files&quot;: &#123;&#125;, </span><br><span class="line">  &quot;form&quot;: &#123;</span><br><span class="line">    &quot;age&quot;: &quot;20&quot;, </span><br><span class="line">    &quot;name&quot;: &quot;zhangsan&quot;</span><br><span class="line">  &#125;, </span><br><span class="line">  &quot;headers&quot;: &#123;</span><br><span class="line">    &quot;Accept&quot;: &quot;*&#x2F;*&quot;, </span><br><span class="line">    &quot;Accept-Encoding&quot;: &quot;gzip, deflate&quot;, </span><br><span class="line">    &quot;Content-Length&quot;: &quot;20&quot;, </span><br><span class="line">    &quot;Content-Type&quot;: &quot;application&#x2F;x-www-form-urlencoded&quot;, </span><br><span class="line">    &quot;Host&quot;: &quot;httpbin.org&quot;, </span><br><span class="line">    &quot;User-Agent&quot;: &quot;python-requests&#x2F;2.20.0&quot;</span><br><span class="line">  &#125;, </span><br><span class="line">  &quot;json&quot;: null, </span><br><span class="line">  &quot;origin&quot;: &quot;61.140.125.81, 61.140.125.81&quot;, </span><br><span class="line">  &quot;url&quot;: &quot;https:&#x2F;&#x2F;httpbin.org&#x2F;post&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="响应："><a href="#响应：" class="headerlink" title="　响应："></a>　响应：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">response &#x3D; requests.get(&quot;http:&#x2F;&#x2F;www.baidu.com&quot;)</span><br><span class="line"># 打印请求页面的状态（状态码）</span><br><span class="line">print(type(response.status_code), response.status_code)</span><br><span class="line"># 打印请求网址的headers所有信息</span><br><span class="line">print(type(response.headers), response.headers)</span><br><span class="line"># 打印请求网址的cookies信息</span><br><span class="line">print(type(response.cookies), response.cookies)</span><br><span class="line"># 打印请求网址的地址</span><br><span class="line">print(type(response.url), response.url)</span><br><span class="line"># 打印请求的历史记录（以列表的形式显示）</span><br><span class="line">print(type(response.history), response.history)</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;class &#39;int&#39;&gt; 200</span><br><span class="line">&lt;class &#39;requests.structures.CaseInsensitiveDict&#39;&gt; &#123;&#39;Cache-Control&#39;: &#39;private, no-cache, no-store, proxy-revalidate, no-transform&#39;, &#39;Connection&#39;: &#39;Keep-Alive&#39;, &#39;Content-Encoding&#39;: &#39;gzip&#39;, &#39;Content-Type&#39;: &#39;text&#x2F;html&#39;, &#39;Date&#39;: &#39;Wed, 05 Jun 2019 16:05:13 GMT&#39;, &#39;Last-Modified&#39;: &#39;Mon, 23 Jan 2017 13:27:57 GMT&#39;, &#39;Pragma&#39;: &#39;no-cache&#39;, &#39;Server&#39;: &#39;bfe&#x2F;1.0.8.18&#39;, &#39;Set-Cookie&#39;: &#39;BDORZ&#x3D;27315; max-age&#x3D;86400; domain&#x3D;.baidu.com; path&#x3D;&#x2F;&#39;, &#39;Transfer-Encoding&#39;: &#39;chunked&#39;&#125;</span><br><span class="line">&lt;class &#39;requests.cookies.RequestsCookieJar&#39;&gt; &lt;RequestsCookieJar[&lt;Cookie BDORZ&#x3D;27315 for .baidu.com&#x2F;&gt;]&gt;</span><br><span class="line">&lt;class &#39;str&#39;&gt; http:&#x2F;&#x2F;www.baidu.com&#x2F;</span><br><span class="line">&lt;class &#39;list&#39;&gt; []</span><br></pre></td></tr></table></figure>

<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>requests的基本操作就时以上这些，相比urllib要方便很多，下一篇就说一些，高级操作咯。</p>
<ol>
<li>文件上传</li>
<li>获取cookie</li>
<li>会话维持</li>
<li>证书验证</li>
<li>代理设置<br>等。</li>
</ol>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
</search>
